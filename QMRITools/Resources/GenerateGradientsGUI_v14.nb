(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    391640,       8088]
NotebookOptionsPosition[    391117,       8070]
NotebookOutlinePosition[    391519,       8086]
CellTagsIndexPosition[    391476,       8083]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Functions", "*)"}], "\n", "\n", 
  RowBox[{"(*", "GenerateGradients", "*)"}], "\n", "\n", 
  RowBox[{"(*", "GenerateGradients", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GenerateGradients", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Steps", " ", "->", " ", "1000"}], ",", " ", 
       RowBox[{"Runs", " ", "->", " ", "1"}], ",", " ", 
       RowBox[{"VisualOpt", " ", "->", " ", "False"}], ",", " ", 
       RowBox[{"GradType", " ", "->", " ", "\"\<Normal\>\""}], ",", " ", 
       RowBox[{"ConditionCalc", " ", "->", " ", "False"}], ",", " ", 
       RowBox[{"FullSphere", " ", "->", " ", "False"}]}], "}"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SyntaxInformation", "[", "GenerateGradients", "]"}], " ", "=", 
     " ", 
     RowBox[{"{", 
      RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"_", ",", " ", "_.", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", "default", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradients", "[", 
     RowBox[{"numb_Integer", ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OptionValue", "[", "GradType", "]"}], " ", "==", " ", 
       "\"\<OverPlus\>\""}], ",", " ", "\n", "  ", 
      RowBox[{"GenerateGradientsi", "[", 
       RowBox[{
        RowBox[{"{", "numb", "}"}], ",", " ", 
        RowBox[{"{", "}"}], ",", " ", "0", ",", " ", "0", ",", " ", "opts", 
        ",", " ", 
        RowBox[{"Method", " ", "->", " ", "\"\<OverPlus\>\""}]}], "]"}], ",", 
      " ", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "GradType", "]"}], " ", "==", " ", 
         "\"\<Normal2\>\""}], ",", " ", "\n", "   ", 
        RowBox[{"GenerateGradientsi", "[", 
         RowBox[{
          RowBox[{"{", "numb", "}"}], ",", " ", 
          RowBox[{"{", "}"}], ",", " ", "0", ",", " ", "0", ",", " ", "opts", 
          ",", " ", 
          RowBox[{"Method", " ", "->", " ", "\"\<Default2\>\""}]}], "]"}], 
        ",", " ", "\n", "   ", 
        RowBox[{"GenerateGradientsi", "[", 
         RowBox[{
          RowBox[{"{", "numb", "}"}], ",", " ", 
          RowBox[{"{", "}"}], ",", " ", "0", ",", " ", "0", ",", " ", "opts", 
          ",", " ", 
          RowBox[{"Method", " ", "->", " ", "\"\<Default\>\""}]}], "]"}]}], 
       "]"}]}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"use", " ", "fixed"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradients", "[", 
     RowBox[{
      RowBox[{"inp", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"_Integer", ",", " ", "_List"}], "}"}]}], ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OptionValue", "[", "GradType", "]"}], " ", "==", " ", 
       "\"\<OverPlus\>\""}], ",", " ", "\n", "  ", 
      RowBox[{"GenerateGradientsi", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"inp", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
        RowBox[{"inp", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "0", ",", " ", "0", ",", 
        " ", "opts", ",", " ", 
        RowBox[{"Method", " ", "->", " ", "\"\<OverPlus\>\""}]}], "]"}], ",", 
      " ", "\n", "  ", 
      RowBox[{"GenerateGradientsi", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"inp", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
        RowBox[{"inp", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "0", ",", " ", "0", ",", 
        " ", "opts", ",", " ", 
        RowBox[{"Method", " ", "->", " ", "\"\<Fixed\>\""}]}], "]"}]}], 
     "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"use", " ", "shels"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradients", "[", 
     RowBox[{
      RowBox[{"numbs", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"_Integer", " ", ".."}], "}"}]}], ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"GenerateGradientsi", "[", 
     RowBox[{
     "numbs", ",", " ", "0", ",", " ", "0.5", ",", " ", "0", ",", " ", "opts",
       ",", " ", 
      RowBox[{"Method", " ", "->", " ", "\"\<Shels\>\""}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"GenerateGradients", "[", 
     RowBox[{
      RowBox[{"numbs", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{"_Integer", " ", ".."}], "}"}]}], ",", " ", "alpha_", ",", 
      " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"GenerateGradientsi", "[", 
     RowBox[{"numbs", ",", " ", "0", ",", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{"alpha", ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1"}], "}"}]}], "]"}], ",", " ", "0", ",", 
      " ", "opts", ",", " ", 
      RowBox[{"Method", " ", "->", " ", "\"\<Shels\>\""}]}], "]"}]}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Non", " ", "rand"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradients", "[", 
     RowBox[{
      RowBox[{"grds", " ", ":", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", " ", "_", ",", " ", "_"}], "}"}], " ", ".."}], 
        "}"}]}], ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OptionValue", "[", "GradType", "]"}], " ", "==", " ", 
       "\"\<OverPlus\>\""}], ",", " ", "\n", "\t", 
      RowBox[{"GenerateGradientsi", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Length", "[", "grds", "]"}], "}"}], ",", " ", "0", ",", " ",
         "0", ",", " ", "grds", ",", " ", "opts", ",", " ", 
        RowBox[{"Method", " ", "->", " ", "\"\<OverPlusNon\>\""}]}], "]"}], 
      ",", " ", "\n", "\t", 
      RowBox[{"GenerateGradientsi", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Length", "[", "grds", "]"}], "}"}], ",", " ", "0", ",", " ",
         "0", ",", " ", "grds", ",", " ", "opts", ",", " ", 
        RowBox[{"Method", " ", "->", " ", "\"\<NonRandom\>\""}]}], "]"}]}], 
     "]"}]}], "\n", "\n", 
   RowBox[{"(*", "GenerateGradientsi", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GenerateGradientsi", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Steps", " ", "->", " ", "1000"}], ",", " ", 
       RowBox[{"Runs", " ", "->", " ", "1"}], ",", " ", 
       RowBox[{"VisualOpt", " ", "->", " ", "True"}], ",", " ", 
       RowBox[{"GradType", " ", "->", " ", "\"\<Normal\>\""}], ",", " ", 
       RowBox[{"ConditionCalc", " ", "->", " ", "False"}], ",", " ", 
       RowBox[{"FullSphere", " ", "->", " ", "False"}], ",", " ", 
       RowBox[{"Method", " ", "->", " ", "\"\<Default\>\""}]}], "}"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradientsi", "[", 
     RowBox[{
     "numbs_", ",", " ", "fixed_", ",", " ", "alph_", ",", " ", "initp_", ",",
       " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
       "steps", ",", " ", "runs", ",", " ", "method", ",", " ", "vis", ",", 
        " ", "cond", ",", " ", "condtot", ",", " ", "nf", ",", " ", "ni", ",",
         " ", "condnr", ",", " ", "velocity0", ",", " ", "velocity1", ",", 
        " ", "parti", ",", " ", "part", ",", " ", "ns", ",", " ", "plot", ",",
         " ", "tempplot", ",", " ", "vel", ",", " ", "charge", ",", " ", 
        "tempc", ",", " ", "sph", ",", " ", "cols", ",", " ", "output", ",", 
        " ", "half"}], "\n", "\t", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"DynamicModule", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "vp", ",", " ", "vv", ",", " ", "va", ",", " ", "tempp", ",", " ", 
           "points"}], "}"}], ",", "\n", "   ", 
         RowBox[{"(*", "Initialisation", " ", "*)"}], "\n", "   ", 
         RowBox[{
          RowBox[{"cols", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
            "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", "Yellow", 
             ",", " ", "Pink", ",", " ", 
             RowBox[{"Darker", "[", "Red", "]"}], ",", " ", 
             RowBox[{"Darker", "[", "Green", "]"}], ",", " ", 
             RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", 
             RowBox[{"Darker", "[", "Yellow", "]"}], ",", " ", 
             RowBox[{"Darker", "[", "Pink", "]"}]}], "}"}]}], ";", "\n", 
          "   ", "\n", "   ", 
          RowBox[{"(*", 
           RowBox[{"get", " ", "options"}], "*)"}], "\n", "   ", 
          RowBox[{"steps", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "Steps", "]"}]}], ";", "\n", "   ", 
          RowBox[{"runs", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "Runs", "]"}]}], ";", "\n", "   ", 
          RowBox[{"method", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", "   ", 
          RowBox[{"vis", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "VisualOpt", "]"}]}], ";", "\n", "   ", 
          RowBox[{"cond", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "ConditionCalc", "]"}]}], ";", "\n", 
          "   ", 
          RowBox[{"half", " ", "=", " ", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Boole", "[", 
             RowBox[{"OptionValue", "[", "FullSphere", "]"}], "]"}]}]}], ";", 
          "\n", "   ", "\n", "   ", 
          RowBox[{"(*", 
           RowBox[{"determine", " ", "length"}], "*)"}], "\n", "   ", 
          RowBox[{"nf", " ", "=", " ", 
           RowBox[{"Length", "[", "fixed", "]"}]}], ";", "\n", "   ", 
          RowBox[{"ni", " ", "=", " ", 
           RowBox[{
            RowBox[{"Total", "[", "numbs", "]"}], " ", "-", " ", "nf"}]}], 
          ";", "\n", "   ", "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"method", " ", "==", " ", "\"\<OverPlus\>\""}], " ", "||",
              " ", 
             RowBox[{"method", " ", "==", " ", "\"\<OverPlusNon\>\""}]}], ",",
             " ", 
            RowBox[{"half", " ", "=", " ", "1"}]}], "]"}], ";", "\n", "   ", 
          "\n", "   ", 
          RowBox[{"condnr", " ", "=", " ", "Infinity"}], ";", "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"method", " ", "==", " ", "\"\<NonRandom\>\""}], " ", "||",
              " ", 
             RowBox[{"method", " ", "==", " ", "\"\<OverPlusNon\>\""}]}], ",",
             "\n", "    ", 
            RowBox[{
             RowBox[{"points", " ", "=", " ", 
              RowBox[{"tempp", " ", "=", " ", "initp"}]}], ";", "\n", "    ", 
             RowBox[{"runs", " ", "=", " ", "1"}], ";"}], "\n", "    ", ",", 
            "\n", "    ", 
            RowBox[{
             RowBox[{"points", " ", "=", " ", 
              RowBox[{"tempp", " ", "=", " ", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                 " ", "ni"}], "]"}]}]}], ";"}]}], "\n", "    ", "]"}], ";", 
          "\n", "     ", "\n", "   ", 
          RowBox[{"(*", 
           RowBox[{
           "get", " ", "velocity", " ", "matrix", " ", "for", " ", 
            "multishell"}], "*)"}], "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"method", " ", "==", " ", "\"\<Shels\>\""}], ",", "\n", 
            "    ", 
            RowBox[{
             RowBox[{"ns", " ", "=", " ", 
              RowBox[{"Length", "[", "numbs", "]"}]}], ";", "\n", "    ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"vel", ",", " ", "part"}], "}"}], " ", "=", " ", 
              RowBox[{"cc", " ", "=", " ", 
               RowBox[{
                RowBox[{"Prepare", "[", 
                 RowBox[{"numbs", ",", " ", "half", ",", " ", 
                  RowBox[{"{", "}"}], ",", " ", "alph"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"2", " ", ";;"}], "]"}], "]"}]}]}]}]}], "\n", "    ",
            "]"}], ";", "\n", "   ", "\n", "   ", 
          RowBox[{"(*", "visualisation", "*)"}], "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "VisualOpt", "]"}], ",", "\n", "    ",
             "\n", "    ", 
            RowBox[{"(*", 
             RowBox[{"Initialize", " ", "graphics"}], "*)"}], "\n", "    ", 
            RowBox[{
             RowBox[{"vp", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"1.3", ",", " ", 
                RowBox[{"-", "2.4"}], ",", " ", "2"}], "}"}]}], ";", " ", 
             RowBox[{"vv", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";", " ", 
             RowBox[{"va", " ", "=", " ", 
              RowBox[{"30", " ", "Degree"}]}], ";", "\n", "    ", 
             RowBox[{"sph", " ", "=", " ", 
              RowBox[{"Graphics3D", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"White", ",", " ", 
                  RowBox[{"Sphere", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                    " ", "0.95"}], "]"}]}], "}"}], ",", " ", "\n", "      ", 
                RowBox[{"Lighting", " ", "->", " ", "\"\<Neutral\>\""}], ",", 
                " ", 
                RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", "\n", 
                "      ", 
                RowBox[{"PlotRange", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}]}], "}"}]}],
                 ",", "\n", "      ", 
                RowBox[{"ViewPoint", " ", "->", " ", 
                 RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", " ", 
                RowBox[{"ViewVertical", " ", "->", " ", 
                 RowBox[{"Dynamic", "[", "vv", "]"}]}], ",", " ", "\n", 
                "      ", 
                RowBox[{"ViewAngle", " ", "->", " ", 
                 RowBox[{"Dynamic", "[", "va", "]"}]}]}], "]"}]}], ";", "\n", 
             "    ", "\n", "    ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", " ", 
                RowBox[{"(", 
                 RowBox[{"method", " ", "==", " ", "\"\<Shels\>\""}], ")"}]}],
                ",", "\n", "     ", 
               RowBox[{"(*", 
                RowBox[{"single", " ", "shell"}], "*)"}], "\n", "     ", 
               RowBox[{
                RowBox[{"plot", " ", "=", " ", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", "\n", "         ", 
                   RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{"sph", ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "points", "]"}], ",", " ", 
                    "Black", ",", " ", "0.05"}], "]"}], ",", " ", "\n", 
                    "         ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"half", " ", "==", " ", "1"}], ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"-", "points"}], "]"}], ",", " ", "Red", ",", " ",
                     "0.05"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", "]"}]}], "]"}]}], "]"}], ",", 
                    "\n", "         ", 
                    RowBox[{"Show", "[", 
                    RowBox[{"sph", ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "tempp", "]"}], ",", " ", "Black",
                     ",", " ", "0.05"}], "]"}], ",", " ", "\n", "         ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"half", " ", "==", " ", "1"}], ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"-", "tempp"}], "]"}], ",", " ", "Red", ",", " ", 
                    "0.05"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", "]"}]}], "]"}]}], "]"}]}], 
                   "\n", "         ", "}"}], "]"}]}], ";"}], "\n", "     ", 
               ",", "\n", "     ", 
               RowBox[{"(*", 
                RowBox[{"multi", " ", "shell"}], "*)"}], "\n", "     ", 
               RowBox[{
                RowBox[{"plot", " ", "=", " ", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", "\n", "         ", 
                   RowBox[{
                    RowBox[{"Show", "[", 
                    RowBox[{"sph", ",", " ", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{"#1", ",", " ", "#2", ",", " ", "0.05"}], "]"}], 
                    " ", "&"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"points", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                     " ", "part"}], ",", " ", 
                    RowBox[{"cols", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", " ", ";;", " ", "ns"}], "]"}], "]"}]}], 
                    "}"}]}], "]"}], ",", "\n", "         ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"half", " ", "==", " ", "1"}], ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"-", "points"}], "]"}], ",", " ", "Gray", ",", 
                    " ", "0.05"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", "]"}]}], "]"}]}], "]"}], ",", 
                    "\n", "         ", 
                    RowBox[{"Show", "[", 
                    RowBox[{"sph", ",", " ", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{"#1", ",", " ", "#2", ",", " ", "0.05"}], "]"}], 
                    " ", "&"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"tempp", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                     " ", "part"}], ",", " ", 
                    RowBox[{"cols", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", " ", ";;", " ", "ns"}], "]"}], "]"}]}], 
                    "}"}]}], "]"}], ",", "\n", "         ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"half", " ", "==", " ", "1"}], ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"-", "tempp"}], "]"}], ",", " ", "Gray", ",", " ",
                     "0.05"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", "]"}]}], "]"}]}], "]"}]}], 
                   "\n", "         ", "}"}], "]"}]}], ";"}]}], "\n", "     ", 
              "]"}], ";", "\n", "    ", 
             RowBox[{"tempplot", " ", "=", " ", 
              RowBox[{"PrintTemporary", "[", "plot", "]"}]}], ";"}]}], "\n", 
           "    ", "]"}], ";", "\n", "   ", "\n", "   ", 
          RowBox[{"(*", 
           RowBox[{"Do", " ", "number", " ", "of", " ", "runs"}], "*)"}], 
          "\n", "   ", 
          RowBox[{"condtot", " ", "=", " ", 
           RowBox[{
            RowBox[{"Reap", "[", 
             RowBox[{"Do", "[", "\n", "       ", 
              RowBox[{"(*", "initialize", "*)"}], "\n", "       ", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"method", " ", "==", " ", "\"\<NonRandom\>\""}], 
                    " ", "||", " ", 
                    RowBox[{
                    "method", " ", "==", " ", "\"\<OverPlusNon\>\""}]}], 
                    ")"}]}], ",", "\n", "        ", 
                  RowBox[{
                   RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"RandInit", "[", 
                    RowBox[{"ni", ",", " ", "half"}], "]"}]}], ";", "\n", 
                   "        ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"method", " ", "==", " ", "\"\<Fixed\>\""}], " ", 
                    "||", " ", 
                    RowBox[{"method", " ", "==", " ", "\"\<OverPlus\>\""}], 
                    " ", "||", " ", 
                    RowBox[{"method", " ", "==", " ", "\"\<Default2\>\""}]}], 
                    ")"}]}], ",", "\n", "         ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    ";"}]}], "\n", "         ", "]"}]}]}], "\n", "        ", 
                 "]"}], ";", "\n", "       ", "\n", "       ", 
                RowBox[{"tempp", " ", "=", " ", 
                 RowBox[{"Switch", "[", "\n", "         ", 
                  RowBox[{
                   RowBox[{"OptionValue", "[", "Method", "]"}], ",", "\n", 
                   "         ", "\n", "         ", "\"\<Default2\>\"", ",", 
                   RowBox[{"(*", " ", "default", " ", "*)"}], "\n", 
                   "         ", 
                   RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize1C", "[", 
                    RowBox[{"tempp", ",", " ", "half"}], "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", "tempp"}], "\n", "         ", ",", "\n", 
                   "         ", "\n", "         ", "\"\<Default\>\"", ",", 
                   RowBox[{"(*", " ", "default", " ", "*)"}], "\n", 
                   "         ", 
                   RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"tempp", ",", " ", "1", ",", " ", "half"}], 
                    "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", "tempp"}], "\n", "          ", ",", "\n", 
                   "         ", "\n", "         ", "\"\<NonRandom\>\"", ",", 
                   RowBox[{"(*", " ", 
                    RowBox[{"non", " ", "rand"}], " ", "*)"}], "\n", 
                   "         ", 
                   RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize1C", "[", 
                    RowBox[{"tempp", ",", " ", "half"}], "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", "tempp"}], "\n", "         ", ",", "\n", 
                   "         ", "\n", "         ", "\"\<Fixed\>\"", ",", 
                   RowBox[{"(*", " ", "fixed", " ", "*)"}], "\n", "         ", 
                   RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", " ", "tempp"}], "]"}]}], ";", "\n", 
                    "         ", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"tempp", ",", " ", "nf", ",", " ", "half"}], 
                    "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", "tempp"}], "\n", "         ", ",", "\n", 
                   "         ", "\n", "         ", "\"\<Shels\>\"", ",", 
                   RowBox[{"(*", " ", "shells", " ", "*)"}], "\n", 
                   "         ", 
                   RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize4C", "[", 
                    RowBox[{"tempp", ",", " ", "vel", ",", " ", "half"}], 
                    "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", "tempp"}], "\n", "         ", ",", "\n", 
                   "         ", "\n", "          ", "\"\<OverPlus\>\"", ",", 
                   RowBox[{"(*", " ", 
                    RowBox[{"overplus", " ", "default"}], " ", "*)"}], "\n", 
                   "         ", 
                   RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
                    "}"}], ",", " ", "fixed", ",", " ", "tempp"}], "]"}]}], 
                    ";", "\n", "         ", 
                    RowBox[{"charge", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{".5", " ", "ni"}], ")"}], "^", 
                    RowBox[{"(", "1.2", ")"}]}], ",", " ", "3"}], "]"}], ",", 
                    " ", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"ni", " ", "+", " ", "nf"}]}], "]"}]}], "]"}]}], 
                    ";", "\n", "         ", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"tempp", ",", " ", 
                    RowBox[{"nf", " ", "+", " ", "3"}], ",", " ", "0"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", 
                    RowBox[{"steps", "/", "10"}], "]"}], "}"}]}], "]"}], ";", 
                    "\n", "         ", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize3C", "[", 
                    RowBox[{"tempp", ",", " ", "charge", ",", " ", 
                    RowBox[{"nf", " ", "+", " ", "3"}]}], "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", 
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"tempp", ",", " ", "3"}], "]"}]}], ";", "\n", 
                    "         ", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Normalize", " ", "/@", " ", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"tempp", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
                    RowBox[{"1", "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
                    RowBox[{"1", "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "]"}]}]}], 
                    ",", " ", 
                    RowBox[{"{", "25", "}"}]}], "]"}], ";", "\n", "         ",
                     "tempp"}], "\n", "         ", ",", "\n", "         ", 
                   "\n", "         ", "\"\<OverPlusNon\>\"", ",", 
                   RowBox[{"(*", " ", 
                    RowBox[{"overplus", " ", "default"}], " ", "*)"}], "\n", 
                   "         ", 
                   RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
                    "}"}], ",", " ", "tempp"}], "]"}]}], ";", "\n", 
                    "         ", 
                    RowBox[{"charge", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{".5", " ", "ni"}], ")"}], "^", 
                    RowBox[{"(", "1.2", ")"}]}], ",", " ", "3"}], "]"}], ",", 
                    " ", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"ni", " ", "+", " ", "nf"}]}], "]"}]}], "]"}]}], 
                    ";", "\n", "         ", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"GradOptimize3C", "[", 
                    RowBox[{"tempp", ",", " ", "charge", ",", " ", 
                    RowBox[{"nf", " ", "+", " ", "3"}]}], "]"}]}], ";", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"cond", ",", " ", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}], 
                    "]"}]}], "]"}], ";"}], " ", ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "         ", 
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"tempp", ",", " ", "3"}], "]"}]}], ";", "\n", 
                    "         ", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"tempp", " ", "=", " ", 
                    RowBox[{"Normalize", " ", "/@", " ", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"tempp", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
                    RowBox[{"1", "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
                    RowBox[{"1", "/", 
                    RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "]"}]}]}], 
                    ",", " ", 
                    RowBox[{"{", "25", "}"}]}], "]"}], ";", "\n", "         ",
                     "tempp"}]}], "\n", "         ", "\n", "         ", 
                  "]"}]}], ";", 
                RowBox[{"(*", 
                 RowBox[{"end", " ", "switch"}], "*)"}], "\n", "       ", 
                "\n", "       ", 
                RowBox[{"tempc", " ", "=", " ", 
                 RowBox[{"ConditionNumberCalc", "[", "tempp", "]"}]}], ";", 
                "\n", "       ", "\n", "       ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"tempc", " ", "<", " ", "condnr"}], ",", " ", 
                  RowBox[{
                   RowBox[{"points", " ", "=", " ", "tempp"}], ";", " ", 
                   RowBox[{"condnr", " ", "=", " ", "tempc"}], ";"}]}], "]"}],
                 ";", "\n", "       ", "\n", "       ", 
                RowBox[{"(*", 
                 RowBox[{"end", " ", "runs", " ", "do", " ", "loop"}], "*)"}],
                 "\n", "       ", 
                RowBox[{"Pause", "[", "0.5", "]"}], ";"}], "\n", "       ", 
               ",", " ", 
               RowBox[{"{", "runs", "}"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "   ", 
          RowBox[{"NotebookDelete", "[", "tempplot", "]"}], ";", "\n", "   ", 
          "\n", "   ", 
          RowBox[{"output", " ", "=", " ", 
           RowBox[{"Chop", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"method", " ", "==", " ", "\"\<Shels\>\""}], ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"points", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
               "part"}], ",", " ", "points"}], "]"}], "]"}]}], ";"}]}], "\n", 
        "   ", "]"}], ";", "\n", "  ", 
       RowBox[{"If", "[", 
        RowBox[{"cond", ",", " ", 
         RowBox[{"{", 
          RowBox[{"output", ",", " ", 
           RowBox[{"condtot", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", "output"}], 
        "]"}]}]}], "\n", "  ", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Support", " ", "Functions"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", "ConditionNumberCalc", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SyntaxInformation", "[", "ConditionNumberCalc", "]"}], " ", "=",
      " ", 
     RowBox[{"{", 
      RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
       RowBox[{"{", "_", "}"}]}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ConditionNumberCalc", "[", 
     RowBox[{"grad", " ", ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumberQ"}], ",", " ", 
          RowBox[{"_", "?", "NumberQ"}], ",", " ", 
          RowBox[{"_", "?", "NumberQ"}]}], "}"}], " ", ".."}], "}"}]}], "]"}],
     " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gx", ",", " ", "gy", ",", " ", "gz"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"gx", ",", " ", "gy", ",", " ", "gz"}], "}"}], " ", "=", " ", 
        RowBox[{"Transpose", "[", "grad", "]"}]}], ";", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "/", 
           RowBox[{"Min", "[", "#", "]"}]}], ")"}], "&"}], "@", 
        RowBox[{"SingularValueList", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"gx", "^", "2"}], ",", " ", 
           RowBox[{"gy", "^", "2"}], ",", " ", 
           RowBox[{"gz", "^", "2"}], ",", " ", 
           RowBox[{"2", " ", "gx", " ", "gy"}], ",", " ", 
           RowBox[{"2", " ", "gx", " ", "gz"}], ",", " ", 
           RowBox[{"2", " ", "gy", " ", "gz"}]}], "}"}], "]"}]}]}]}], "\n", 
     "  ", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConditionNumberCalc", "[", "mat_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", "#", "]"}], "/", 
         RowBox[{"Min", "[", "#", "]"}]}], ")"}], "&"}], "@", 
      RowBox[{"SingularValueList", "[", "mat", "]"}]}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", "ListSpherePloti", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ListSpherePloti", "[", 
     RowBox[{"pts_", ",", " ", "col_", ",", " ", "size_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"col", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Sphere", "[", 
          RowBox[{"#", ",", " ", "size"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "pts"}]}], "}"}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", "ListStickPlot", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ListStickPlot", "[", 
     RowBox[{"pts_", ",", " ", "size_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Tube", "[", 
          RowBox[{
           RowBox[{"0.98", " ", 
            RowBox[{"{", 
             RowBox[{"#", ",", " ", 
              RowBox[{"-", "#"}]}], "}"}]}], ",", " ", "size"}], "]"}], " ", 
         "&"}], " ", "/@", " ", "pts"}]}], "}"}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", "RandInit", "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"random", " ", "seed", " ", "points", " ", "on", " ", "sphere"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RandInit", "[", 
      RowBox[{"ni_", ",", " ", "half_"}], "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"half", " ", "==", " ", "1"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"-", "16"}]}]}], "]"}], " ", 
          RowBox[{"Normalize", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
        "\n", "    ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ni", ",", " ", "3"}], "}"}]}], "]"}]}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"Normalize", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ni", ",", " ", "3"}], "}"}]}], "]"}]}]}], "\n", "   ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", "Prepare", "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"initialization", " ", "of", " ", "points"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Prepare", "[", 
      RowBox[{"numbs_", ",", " ", "half_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Prepare", "[", 
      RowBox[{"numbs", ",", " ", "half", ",", " ", 
       RowBox[{"{", "}"}], ",", " ", "0"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Prepare", "[", 
      RowBox[{"numbs_", ",", " ", "half_", ",", " ", "fixed_"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"Prepare", "[", 
      RowBox[{"numbs", ",", " ", "half", ",", " ", "fixed", ",", " ", "0"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Prepare", "[", 
     RowBox[{
     "numbs_", ",", " ", "half_", ",", " ", "fixed_", ",", " ", "alph_"}], 
     "]"}], " ", ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nf", ",", " ", "ni", ",", " ", "ni2", ",", " ", "parti", ",", " ", 
        "part", ",", " ", "velocity0", ",", " ", "velocity1", ",", " ", 
        "vel"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"nf", " ", "=", " ", 
        RowBox[{"Length", "[", "fixed", "]"}]}], ";", "\n", "  ", 
       RowBox[{"ni", " ", "=", " ", 
        RowBox[{
         RowBox[{"Total", "[", "numbs", "]"}], " ", "-", " ", "nf"}]}], ";", 
       "\n", "  ", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{
        "only", " ", "for", " ", "multi", " ", "shell", " ", "numbs", " ", 
         "vector", " ", "is", " ", "longer", " ", "than", " ", "1"}], "*)"}], 
       "\n", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "numbs", "]"}], " ", ">", " ", "1"}], ",", 
         "\n", "   ", 
         RowBox[{"(*", 
          RowBox[{"case", " ", "1", " ", "multi", " ", "shell"}], "*)"}], 
         "\n", "   ", 
         RowBox[{
          RowBox[{"parti", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "0"}], "}"}], " ", "+", " ", "#"}], " ",
              "&"}], " ", "/@", " ", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{
                  RowBox[{"Accumulate", "[", "numbs", "]"}], ",", " ", "0"}], 
                 "]"}], ",", " ", "2", ",", " ", "1", ",", " ", "1"}], "]"}], 
              ",", " ", 
              RowBox[{"-", "1"}]}], "]"}]}]}], ";", "\n", "   ", 
          RowBox[{"part", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
             " ", "parti"}]}], ";", "\n", "   ", "\n", "   ", 
          RowBox[{"ni2", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"half", " ", "==", " ", "0"}], ",", " ", "ni", ",", " ", 
             RowBox[{"2", " ", "ni"}]}], "]"}]}], ";", "\n", "   ", "\n", 
          "   ", 
          RowBox[{"velocity0", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"{", 
              RowBox[{"ni2", ",", " ", "ni2", ",", " ", "3"}], "}"}]}], 
            "]"}]}], ";", "\n", "   ", 
          RowBox[{"velocity1", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"ni2", ",", " ", "ni2", ",", " ", "3"}], "}"}]}], 
            "]"}]}], ";", "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", "\n", "    ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", "\n", "        ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"velocity0", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ";",
                   "\n", "        ", 
                  RowBox[{
                   RowBox[{"velocity0", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", 
                    RowBox[{"j", " ", "+", " ", "ni"}]}], "]"}], "]"}], " ", 
                   "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ";",
                   "\n", "        ", 
                  RowBox[{
                   RowBox[{"velocity0", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", " ", "+", " ", "ni"}], ",", " ", "j"}], 
                    "]"}], "]"}], " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ";",
                   "\n", "        ", 
                  RowBox[{
                   RowBox[{"velocity0", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", " ", "+", " ", "ni"}], ",", " ", 
                    RowBox[{"j", " ", "+", " ", "ni"}]}], "]"}], "]"}], " ", 
                   "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], 
                  ";"}], "\n", "        ", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
               "&"}], " ", "/@", " ", "parti"}], ";"}], ",", "\n", "    ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", "\n", "        ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"velocity0", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], 
                  ";"}], "\n", "        ", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
               "&"}], " ", "/@", " ", "parti"}], ";"}]}], "\n", "    ", "]"}],
           ";", "\n", "   ", 
          RowBox[{"vel", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", " ", "-", " ", "alph"}], ")"}], " ", "velocity0"}],
             " ", "+", " ", 
            RowBox[{"alph", " ", "velocity1"}]}]}], ";", "\n", "   ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandInit", "[", 
             RowBox[{"ni", ",", " ", "half"}], "]"}], ",", " ", "vel", ",", 
            " ", "part"}], "}"}]}], "\n", "   ", ",", "\n", "   ", 
         RowBox[{"(*", 
          RowBox[{"case", " ", "2", " ", "single", " ", "shell"}], "*)"}], 
         "\n", "   ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"fixed", " ", "===", " ", 
            RowBox[{"{", "}"}]}], ",", "\n", "    ", 
           RowBox[{"(*", 
            RowBox[{"no", " ", "fixed"}], "*)"}], "\n", "    ", 
           RowBox[{"RandInit", "[", 
            RowBox[{"ni", ",", " ", "half"}], "]"}], ",", "\n", "    ", 
           RowBox[{"(*", "fixed", "*)"}], "\n", "    ", 
           RowBox[{"Join", "[", 
            RowBox[{"fixed", ",", " ", 
             RowBox[{"RandInit", "[", 
              RowBox[{"ni", ",", " ", "half"}], "]"}]}], "]"}]}], "\n", 
          "    ", "]"}]}], "\n", "   ", "]"}]}]}], "\n", "  ", "]"}]}], "\n", 
   "  ", "\n", 
   RowBox[{"(*", 
    RowBox[{"GradOptimize", " ", "functions"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "cartesian", " ", "grid"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GradGrid", "[", 
     RowBox[{"n_", ",", " ", "full_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "points", "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"points", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"EvenQ", "[", "n", "]"}], ",", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{"full", ",", "\n", "     ", 
            RowBox[{"(*", 
             RowBox[{"even", " ", "grid", " ", "full"}], "*)"}], "\n", 
            "     ", 
            RowBox[{
             RowBox[{"Flatten", "[", "\n", "       ", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
                   RowBox[{"2", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", 
                   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "\n", 
                   "         ", 
                   RowBox[{"2", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", "1",
                    ",", " ", 
                   RowBox[{"2", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "}"}]}], 
                "]"}], ",", " ", "2"}], "]"}], " ", "//", " ", "N"}], "\n", 
            "     ", ",", "\n", "     ", 
            RowBox[{"(*", 
             RowBox[{
             "even", " ", "spaced", " ", "in", " ", "between", " ", "odd", 
              " ", "grid"}], "*)"}], "\n", "     ", 
            RowBox[{
             RowBox[{"Flatten", "[", "\n", "       ", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{
                    RowBox[{"-", "1"}], " ", "+", " ", 
                    RowBox[{"1", "/", "n"}]}], ",", " ", "1", ",", " ", 
                   RowBox[{"2", "/", "n"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", 
                   RowBox[{
                    RowBox[{"-", "1"}], " ", "+", " ", 
                    RowBox[{"1", "/", "n"}]}], ",", " ", "1", ",", " ", "\n", 
                   "         ", 
                   RowBox[{"2", "/", "n"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"1", "/", "n"}], ",", " ", "1", ",", " ", 
                   RowBox[{"2", "/", "n"}]}], "}"}]}], "]"}], ",", " ", "2"}],
               "]"}], " ", "//", " ", "N"}]}], "\n", "     ", "]"}], "\n", 
          "    ", ",", "\n", "    ", 
          RowBox[{"(*", 
           RowBox[{"odd", " ", "spaced"}], "*)"}], "\n", "    ", 
          RowBox[{
           RowBox[{"points", " ", "=", " ", "\n", "     ", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
                   RowBox[{"2", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", 
                   RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "\n", 
                   "         ", 
                   RowBox[{"2", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "}"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", "0", ",", " ", "1", ",", " ", 
                   RowBox[{"2", "/", 
                    RowBox[{"(", 
                    RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "}"}]}], 
                "]"}], ",", " ", "2"}], "]"}], " ", "//", " ", "N"}]}], ";", 
           "\n", "    ", 
           RowBox[{"DeleteCases", "[", "\n", "     ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", "0."}], 
                    " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"##", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0."}]}], 
                   ")"}], " ", "||", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", "0."}], 
                    " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "<", " ", "\n", 
                    "            ", "0"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"##", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", "0."}]}], 
                   ")"}]}], ",", " ", "Null", ",", " ", "#"}], "]"}], " ", 
               "&"}], " ", "/@", " ", "points"}], ",", " ", "Null"}], 
            "]"}]}]}], "\n", "    ", "]"}]}], ";", "\n", "  ", 
       RowBox[{"points", " ", "=", " ", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"points", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Norm", "[", "#1", "]"}], " ", "<", " ", 
             RowBox[{"Norm", "[", "#2", "]"}]}], " ", "&"}]}], "]"}], " ", "//",
          " ", "N"}]}]}]}], "\n", "  ", "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "optimize", " ", "singel", " ", "shell", " ", "no", " ", "fixed", " ", 
     "gradients"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GradOptimize1C", " ", "=", " ", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"points", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"half", ",", " ", "_Integer", ",", " ", "0"}], "}"}]}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "n", ",", " ", "n2", ",", " ", "pointsi", ",", " ", "pointsmat", 
           ",", " ", "distmatxyz", ",", " ", "diag", ",", " ", "distmat", ",",
            " ", "\n", "     ", "velocity", ",", " ", "pointsnew", ",", " ", 
           "sign"}], "}"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"n", " ", "=", " ", 
           RowBox[{"Length", "[", "points", "]"}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsi", " ", "=", " ", 
              RowBox[{"Join", "[", 
               RowBox[{"points", ",", " ", 
                RowBox[{"-", "points"}]}], "]"}]}], ";", " ", 
             RowBox[{"n2", " ", "=", " ", 
              RowBox[{"2", " ", "n"}]}], ";"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsi", " ", "=", " ", "points"}], ";", " ", 
             RowBox[{"n2", " ", "=", " ", "n"}]}]}], "\n", "     ", "]"}], 
          ";", "\n", "    ", 
          RowBox[{"pointsmat", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"pointsi", ",", " ", "n2"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"distmatxyz", " ", "=", " ", 
           RowBox[{"pointsmat", " ", "-", " ", 
            RowBox[{"Transpose", "[", "pointsmat", "]"}]}]}], ";", "\n", 
          "    ", 
          RowBox[{"diag", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"10.", "^", "32"}], ",", " ", "n2"}], "]"}], "]"}]}], 
          ";", "\n", "    ", 
          RowBox[{"distmat", " ", "=", " ", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"distmatxyz", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"2", ",", " ", "3", ",", " ", "1"}], "}"}]}], "]"}], 
              "^", "2"}], "]"}], " ", "+", " ", "diag"}]}], ";", "\n", "    ", 
          RowBox[{"velocity", " ", "=", " ", 
           RowBox[{"Total", "[", 
            RowBox[{"(", 
             RowBox[{"distmatxyz", "/", "distmat"}], ")"}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"pointsnew", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Normalize", "[", "#", "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"(", 
              RowBox[{"pointsi", " ", "+", " ", "velocity"}], ")"}]}], 
            ")"}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", " ", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsnew", " ", "=", " ", 
              RowBox[{
               RowBox[{"Sign", "[", 
                RowBox[{
                 RowBox[{"pointsnew", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "+", 
                 " ", 
                 RowBox[{"10.", "^", 
                  RowBox[{"-", "16"}]}]}], "]"}], " ", "pointsnew"}]}], 
             ";"}]}], "]"}], ";", "\n", "    ", 
          RowBox[{"pointsnew", "[", 
           RowBox[{"[", 
            RowBox[{";;", " ", "n"}], "]"}], "]"}]}]}], "]"}]}], "\n", "   ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "optimize", " ", "singel", " ", "shell", " ", "with", " ", "fixed", " ", 
     "gradients"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GradOptimize2C", " ", "=", " ", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"points", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"nf", ",", " ", "_Real", ",", " ", "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"half", ",", " ", "_Integer", ",", " ", "0"}], "}"}]}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "n", ",", " ", "n2", ",", " ", "pointsi", ",", " ", "pointsmat", 
           ",", " ", "distmatxyz", ",", " ", "diag", ",", " ", "distmat", ",",
            " ", "\n", "     ", "velocity", ",", " ", "pointsnew", ",", " ", 
           "rang"}], "}"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"n", " ", "=", " ", 
           RowBox[{"Length", "[", "points", "]"}]}], ";", "\n", "    ", 
          RowBox[{"pointsi", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"points", ",", " ", 
             RowBox[{"-", "points"}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsi", " ", "=", " ", 
              RowBox[{"Join", "[", 
               RowBox[{"points", ",", " ", 
                RowBox[{"-", "points"}]}], "]"}]}], ";", " ", 
             RowBox[{"n2", " ", "=", " ", 
              RowBox[{"2", " ", "n"}]}], ";"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsi", " ", "=", " ", "points"}], ";", " ", 
             RowBox[{"n2", " ", "=", " ", "n"}]}]}], "\n", "     ", "]"}], 
          ";", "\n", "    ", 
          RowBox[{"pointsmat", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"pointsi", ",", " ", "n2"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"distmatxyz", " ", "=", " ", 
           RowBox[{"pointsmat", " ", "-", " ", 
            RowBox[{"Transpose", "[", "pointsmat", "]"}]}]}], ";", "\n", 
          "    ", 
          RowBox[{"diag", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"10.", "^", "16"}], ",", " ", "n2"}], "]"}], "]"}]}], 
          ";", "\n", "    ", 
          RowBox[{"distmat", " ", "=", " ", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"distmatxyz", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"2", ",", " ", "3", ",", " ", "1"}], "}"}]}], "]"}], 
              "^", "2"}], "]"}], " ", "+", " ", "diag"}]}], ";", "\n", "    ", 
          RowBox[{"velocity", " ", "=", " ", 
           RowBox[{"Total", "[", 
            RowBox[{"(", 
             RowBox[{"distmatxyz", "/", "distmat"}], ")"}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"rang", " ", "=", " ", 
              RowBox[{"Round", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"1", ",", " ", "nf"}], "]"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{
                   RowBox[{"1", " ", "+", " ", "n"}], ",", " ", 
                   RowBox[{"n", " ", "+", " ", "nf"}]}], "]"}]}], "]"}], 
               "]"}]}], ";"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"rang", " ", "=", " ", 
              RowBox[{"Round", "[", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", " ", "nf"}], "]"}], "]"}]}], ";"}]}], "\n", 
           "     ", "]"}], ";", "\n", "    ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"velocity", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"0.", ",", " ", "0.", ",", " ", "0."}], "}"}]}], ")"}],
             " ", "&"}], " ", "/@", " ", "rang"}], ";", "\n", "    ", 
          RowBox[{"pointsnew", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Normalize", "[", "#", "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"(", 
              RowBox[{"pointsi", " ", "+", " ", "velocity"}], ")"}]}], 
            ")"}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", " ", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsnew", " ", "=", " ", 
              RowBox[{
               RowBox[{"Sign", "[", 
                RowBox[{
                 RowBox[{"pointsnew", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "+", 
                 " ", 
                 RowBox[{"10.", "^", 
                  RowBox[{"-", "16"}]}]}], "]"}], " ", "pointsnew"}]}], 
             ";"}]}], "]"}], ";", "\n", "    ", 
          RowBox[{"pointsnew", "[", 
           RowBox[{"[", 
            RowBox[{";;", " ", "n"}], "]"}], "]"}]}]}], "]"}], ",", "\n", 
       "   ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"rang", ",", " ", "_Real", ",", " ", "1"}], "}"}], "}"}]}], 
      "  ", "\n", "   ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"optimize", " ", "singe", " ", "shell", " ", "Overplus"}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"GradOptimize3C", " ", "=", " ", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"points", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"char", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"nf", ",", " ", "_Real", ",", " ", "0"}], "}"}]}], "}"}], 
       ",", "\n", "   ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "n", ",", " ", "pointsi", ",", " ", "pointsmat", ",", " ", 
           "distmatxyz", ",", " ", "diag", ",", " ", "distmat", ",", " ", 
           "velocity", ",", " ", "\n", "     ", "pointsnew", ",", " ", 
           "chari", ",", " ", "charmat", ",", " ", "chars", ",", " ", 
           "rang"}], "}"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"n", " ", "=", " ", 
           RowBox[{"Length", "[", "points", "]"}]}], ";", "\n", "    ", 
          RowBox[{"pointsi", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"points", ",", " ", 
             RowBox[{"-", "points"}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"chari", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"char", ",", " ", "char"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"pointsmat", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"pointsi", ",", " ", 
             RowBox[{"2", " ", "n"}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"charmat", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"chari", ",", " ", 
             RowBox[{"2", " ", "n"}]}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"distmatxyz", " ", "=", " ", 
           RowBox[{"pointsmat", " ", "-", " ", 
            RowBox[{"Transpose", "[", "pointsmat", "]"}]}]}], ";", "\n", 
          "    ", 
          RowBox[{"chars", " ", "=", " ", 
           RowBox[{"charmat", "*", 
            RowBox[{"Transpose", "[", "charmat", "]"}]}]}], ";", "\n", "    ", 
          RowBox[{"diag", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"10.", "^", "32"}], ",", " ", 
              RowBox[{"2", " ", "n"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"distmat", " ", "=", " ", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"distmatxyz", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"2", ",", " ", "3", ",", " ", "1"}], "}"}]}], "]"}], 
              "^", "2"}], "]"}], " ", "+", " ", "diag"}]}], ";", "\n", "    ", 
          RowBox[{"velocity", " ", "=", " ", 
           RowBox[{"Total", "[", 
            RowBox[{"chars", " ", 
             RowBox[{"(", 
              RowBox[{"distmatxyz", "/", "distmat"}], ")"}]}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"rang", " ", "=", " ", 
           RowBox[{"Round", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", " ", "nf"}], "]"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"1", " ", "+", " ", "n"}], ",", " ", 
                RowBox[{"n", " ", "+", " ", "nf"}]}], "]"}]}], "]"}], "]"}]}],
           ";", "\n", "    ", 
          RowBox[{
           RowBox[{"velocity", "[", 
            RowBox[{"[", "rang", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"0.", ",", " ", "0.", ",", " ", "0."}], "}"}]}], ";", 
          "\n", "    ", 
          RowBox[{"pointsnew", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sign", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                 RowBox[{"10.", "^", 
                  RowBox[{"-", "16"}]}]}], "]"}], "*", 
               RowBox[{"Normalize", "[", "#", "]"}]}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"(", 
              RowBox[{
              "pointsi", " ", "+", " ", "\n", "         ", "velocity"}], 
              ")"}]}], ")"}]}], ";", "\n", "    ", 
          RowBox[{"pointsnew", "[", 
           RowBox[{"[", 
            RowBox[{";;", " ", "n"}], "]"}], "]"}]}]}], "]"}], ",", "\n", 
       "   ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"rang", ",", " ", "_Real", ",", " ", "1"}], "}"}], "}"}]}], 
      "\n", "   ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"optimize", " ", "multi", " ", "shell"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GradOptimize4C", " ", "=", " ", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"points", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"vel", ",", " ", "_Real", ",", " ", "3"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"half", ",", " ", "_Integer", ",", " ", "0"}], "}"}]}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "n", ",", " ", "n2", ",", " ", "pointsi", ",", " ", "pointsmat", 
           ",", " ", "distmatxyz", ",", " ", "diag", ",", " ", "distmat", ",",
            " ", "\n", "     ", "velocity", ",", " ", "pointsnew"}], "}"}], 
         ",", "\n", "    ", 
         RowBox[{
          RowBox[{"n", " ", "=", " ", 
           RowBox[{"Length", "[", "points", "]"}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsi", " ", "=", " ", 
              RowBox[{"Join", "[", 
               RowBox[{"points", ",", " ", 
                RowBox[{"-", "points"}]}], "]"}]}], ";", " ", 
             RowBox[{"n2", " ", "=", " ", 
              RowBox[{"2", " ", "n"}]}], ";"}], ",", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsi", " ", "=", " ", "points"}], ";", " ", 
             RowBox[{"n2", " ", "=", " ", "n"}], ";"}]}], "\n", "     ", 
           "]"}], ";", "\n", "    ", 
          RowBox[{"pointsmat", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"pointsi", ",", " ", "n2"}], "]"}]}], ";", "\n", "    ", 
          RowBox[{"distmatxyz", " ", "=", " ", 
           RowBox[{"pointsmat", " ", "-", " ", 
            RowBox[{"Transpose", "[", "pointsmat", "]"}]}]}], ";", "\n", 
          "    ", 
          RowBox[{"diag", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"10.", "^", "16"}], ",", " ", "n2"}], "]"}], "]"}]}], 
          ";", "\n", "    ", 
          RowBox[{"distmat", " ", "=", " ", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"distmatxyz", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"2", ",", " ", "3", ",", " ", "1"}], "}"}]}], "]"}], 
              "^", "2"}], "]"}], " ", "+", " ", "diag"}]}], ";", "\n", "    ", 
          RowBox[{"velocity", " ", "=", " ", 
           RowBox[{"Total", "[", 
            RowBox[{"vel", " ", 
             RowBox[{"(", 
              RowBox[{"distmatxyz", "/", "distmat"}], ")"}]}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"pointsnew", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Normalize", "[", "#", "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"(", 
              RowBox[{"pointsi", " ", "+", " ", "velocity"}], ")"}]}], 
            ")"}]}], ";", "\n", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"half", " ", "==", " ", "1"}], ",", " ", "\n", "     ", 
            RowBox[{
             RowBox[{"pointsnew", " ", "=", " ", 
              RowBox[{
               RowBox[{"Sign", "[", 
                RowBox[{
                 RowBox[{"pointsnew", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "+", 
                 " ", 
                 RowBox[{"10.", "^", 
                  RowBox[{"-", "16"}]}]}], "]"}], " ", "pointsnew"}]}], 
             ";"}]}], "]"}], ";", "\n", "    ", 
          RowBox[{"pointsnew", "[", 
           RowBox[{"[", 
            RowBox[{";;", " ", "n"}], "]"}], "]"}]}]}], "]"}]}], "\n", "   ", 
      "]"}]}], ";"}], "\n", "   ", "\n", 
   RowBox[{"(*", 
    RowBox[{"Convert", " ", "Grads"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SyntaxInformation", "[", "ConvertGrads", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"_", ",", " ", "_", " ", ",", " ", "_."}], "}"}]}], "}"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "convert", " ", "gradient", " ", "lists", " ", "to", " ", "txt", " ", 
     "output"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ConvertGrads", "[", 
     RowBox[{"gradi_", ",", " ", "bv_"}], "]"}], " ", ":=", " ", 
    RowBox[{"ConvertGrads", "[", 
     RowBox[{"gradi", ",", " ", "bv", ",", " ", "0"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"ConvertGrads", "[", 
     RowBox[{"gradi_", ",", " ", "bv_", ",", " ", "bi_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "depth", ",", " ", "norm", ",", " ", "gradu", ",", " ", "grad", ",", 
        " ", "bval", ",", " ", "bvalstr", ",", " ", "gradstr", ",", " ", 
        "grad0str", ",", " ", "list", ",", " ", "list0", ",", " ", "part", 
        ",", " ", "listout", ",", " ", "bvs", ",", " ", "gr", ",", " ", 
        "name", ",", " ", "nb"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"depth", " ", "=", " ", 
        RowBox[{
         RowBox[{"ArrayDepth", "[", "gradi", "]"}], " ", "/.", " ", 
         RowBox[{"1", " ", "->", " ", "3"}]}]}], ";", "\n", "\t", 
       RowBox[{"norm", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Norm", ",", " ", "gradi", ",", " ", 
          RowBox[{"{", 
           RowBox[{"depth", " ", "-", " ", "1"}], "}"}]}], "]"}]}], ";", "\n",
        "\t", "\n", "\t", 
       RowBox[{"gradu", " ", "=", " ", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Normalize", " ", "/@", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"gradi", ",", " ", 
            RowBox[{"depth", " ", "-", " ", "2"}]}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"grad", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Normalize", ",", " ", "gradi", ",", " ", 
          RowBox[{"{", 
           RowBox[{"depth", " ", "-", " ", "1"}], "}"}]}], "]"}]}], ";", "\n",
        "\t", 
       RowBox[{"bval", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "bv", "]"}], " ", "==", " ", "1"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"bv", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"norm", "/", 
              RowBox[{"Max", "[", "norm", "]"}]}], ")"}], "^", "2"}]}], ",", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"norm", "/", 
              RowBox[{"Max", "[", "norm", "]"}]}], ")"}], "^", "2"}], "*", 
           "bv"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"bvalstr", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "\n", "\t\t", 
             RowBox[{
              RowBox[{"bvs", " ", "=", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{"Clip", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "35000"}], "}"}]}], "]"}], ",", 
                    " ", "0.1"}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"7", ",", " ", "1"}], "}"}]}], "]"}], "]"}]}], ";",
               "\n", "\t\t", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"\"\< \>\"", ",", " ", 
                  RowBox[{"10", " ", "-", " ", 
                   RowBox[{"StringLength", "[", "bvs", "]"}]}]}], "]"}], 
                "]"}], " ", "<>", " ", "bvs"}]}], "\n", "\t", ")"}], " ", 
            "&"}], ",", " ", "bval", ",", " ", 
           RowBox[{"{", 
            RowBox[{"depth", " ", "-", " ", "1"}], "}"}]}], "]"}]}]}], ";", 
       "\n", "\t", "\n", "\t", 
       RowBox[{"gradstr", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", "\n", "\t\t", 
              RowBox[{
               RowBox[{"gr", " ", "=", " ", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"Round", "[", 
                    RowBox[{"#", ",", " ", "0.00001"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"6", ",", " ", "5"}], "}"}]}], "]"}], "]"}]}], 
               ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"gr", ",", " ", "1"}], "]"}], " ", "==", " ", 
                  "\"\<-\>\""}], ",", " ", "gr", ",", " ", 
                 RowBox[{"\"\< \>\"", " ", "<>", " ", "gr"}]}], "]"}]}], "\n",
               "\t", ")"}], " ", "&"}], ",", " ", "grad", ",", " ", 
            RowBox[{"{", "depth", "}"}]}], "]"}], ",", " ", 
          RowBox[{"depth", " ", "-", " ", "2"}]}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"grad0str", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\n", "\t\t", 
            RowBox[{
             RowBox[{"gr", " ", "=", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{"Round", "[", 
                  RowBox[{"#", ",", " ", "0.00001"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"6", ",", " ", "5"}], "}"}]}], "]"}], "]"}]}], ";", 
             "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"gr", ",", " ", "1"}], "]"}], " ", "==", " ", 
                "\"\<-\>\""}], ",", " ", "gr", ",", " ", 
               RowBox[{"\"\< \>\"", " ", "<>", " ", "gr"}]}], "]"}]}], "\n", 
            "\t", ")"}], " ", "&"}], ",", " ", "gradu", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"list", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{"Riffle", "[", 
              RowBox[{"#1", ",", " ", "\"\<   \>\""}], "]"}], "]"}], " ", "<>",
             " ", "#2"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"gradstr", ",", " ", "bvalstr"}], "}"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"list0", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringJoin", "[", 
             RowBox[{"Riffle", "[", 
              RowBox[{"#1", ",", " ", "\"\<   \>\""}], "]"}], "]"}], " ", "<>",
             " ", "\"\<       \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Round", "[", 
              RowBox[{"bi", ",", "0.1"}], "]"}], "]"}]}], " ", "&"}], ",", 
          " ", "grad0str"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"nb", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"Round", "[", 
          RowBox[{"Max", "[", 
           RowBox[{"Flatten", "[", "bval", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"list", ",", " ", "list0", ",", " ", "nb"}], "}"}]}]}], "\n", 
     "]"}]}], "\n", "\n", 
   RowBox[{"(*", "FinalGrads", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SyntaxInformation", "[", "FinalGrads", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"_", ",", " ", 
         RowBox[{"{", 
          RowBox[{"_", ",", " ", "_", ",", " ", "_."}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"_", ",", " ", "_"}], "}"}]}], "}"}]}], "}"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"FinalGrads", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"listi_", ",", " ", "list0_", ",", " ", "nb_"}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"inter_", ",", " ", "int_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"random_", ",", " ", "ordr_"}], "}"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"FinalGrads", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"listi", ",", " ", "list0", ",", " ", "nb"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"inter", ",", " ", "int"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"random", ",", " ", "ordr"}], "}"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"FinalGrads", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"listi_", ",", " ", "list0_", ",", " ", "nb_"}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"inter_", ",", " ", "int_", ",", " ", "bi_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"random_", ",", " ", "ordr_"}], "}"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "part", ",", " ", "listout", ",", " ", "name", ",", " ", "list"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"list", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{"random", ",", " ", 
          RowBox[{"listi", "[", 
           RowBox[{"[", "ordr", "]"}], "]"}], ",", " ", "listi"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"listout", " ", "=", " ", 
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"Prepend", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"inter", ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"part", " ", "=", " ", 
               RowBox[{"Partition", "[", 
                RowBox[{
                "list", ",", " ", "int", ",", " ", "int", ",", " ", "1", ",", 
                 " ", 
                 RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "\t\t\t", 
              RowBox[{"Flatten", "@", 
               RowBox[{"Riffle", "[", 
                RowBox[{"part", ",", " ", 
                 RowBox[{"list0", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", " ", 
                    RowBox[{"Length", "[", "part", "]"}]}], "]"}], "]"}]}], 
                "]"}]}]}], "\n", "\t\t\t", ",", "\n", "\t\t\t", "list"}], 
            "\n", "\t\t", "]"}], "\n", "\t\t", ",", " ", 
           "\"\< 0.00000    0.00000    1.00000       0.0\>\""}], "\n", "\t", 
          "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"name", " ", "=", " ", 
        RowBox[{"\"\< (\>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "listout", "]"}], "]"}], " ", "<>", " ", 
         "\"\<, \>\"", " ", "<>", " ", "nb", " ", "<>", " ", 
         "\"\<)\\n\>\""}]}], ";", "\n", "\t", 
       RowBox[{"name", " ", "<>", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", " ", "<>", " ", "\"\<\\n\>\""}], " ", "&"}], " ", "/@",
           " ", "listout"}], "]"}]}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", "FindOrder", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "FindOrder", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"OrderSpan", "->", "\"\<Auto\>\""}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SyntaxInformation", "[", "FindOrder", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"_", ",", "_", ",", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"FindOrder", "[", 
     RowBox[{"grad_", ",", " ", "bval_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
    " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "local", ",", " ", "minval", ",", " ", "orderout", ",", " ", "n", ",", 
        " ", "m", ",", " ", "ord", ",", " ", "val", ",", " ", "temp", ",", 
        " ", "order", ",", "span"}], "}"}], ",", "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{
       "define", " ", "the", " ", "absvec", " ", "and", " ", "initial", " ", 
        "order"}], "*)"}], "\n", "  ", 
      RowBox[{
       RowBox[{"temp", " ", "=", " ", 
        RowBox[{"MakeAbsVec", "[", 
         RowBox[{"grad", ",", " ", "bval"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"orderout", " ", "=", " ", 
        RowBox[{"order", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "temp", "]"}], "]"}]}]}], ";", "\n", "  ", 
       "\n", "  ", 
       RowBox[{"span", "=", 
        RowBox[{"OptionValue", "[", "OrderSpan", "]"}]}], ";", "\n", "  ", 
       "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{"define", " ", "initialization", " ", "parameters"}], "*)"}], 
       "\n", "  ", 
       RowBox[{"local", " ", "=", " ", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"span", "===", "\"\<Auto\>\""}], ",", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"Length", "[", "temp", "]"}], "/", "15"}], "]"}], 
               ",", "span"}], "]"}], "*)"}], "7", ",", "span"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "Infinity"}], "}"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"local", " ", "=", " ", "11"}], ";"}], "*)"}], "\n", "  ", 
       RowBox[{"minval", " ", "=", " ", "Infinity"}], ";", "\n", "  ", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"m", " ", "=", " ", "0"}]}], ";", "\n", "  ", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"brute", " ", "force", " ", "the", " ", "solution"}], ",", 
         " ", 
         RowBox[{"max", " ", "100000", " ", "itteration"}]}], "*)"}], "\n", 
       "  ", 
       RowBox[{"(*", 
        RowBox[{
        "bo", " ", "better", " ", "solution", " ", "after", " ", "25000", " ",
          "itteration", " ", "probably", " ", "already", " ", "pritty", " ", 
         "good", " ", "so", " ", "stop"}], "*)"}], "\n", "  ", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", " ", "<", " ", "50000"}], " ", "&&", " ", 
          RowBox[{"m", " ", "<", " ", "150000"}]}], ",", "\n", "   ", 
         RowBox[{"(*", 
          RowBox[{
          "count", " ", "itterations", " ", "make", " ", "new", " ", "order", 
           " ", "and", " ", "calculae", " ", "load", " ", "value"}], "*)"}], 
         "\n", "   ", 
         RowBox[{
          RowBox[{"m", "++"}], ";", "\n", "   ", 
          RowBox[{"order", " ", "=", " ", 
           RowBox[{"RandomSample", "[", "order", "]"}]}], ";", "\n", "   ", 
          RowBox[{"val", " ", "=", " ", 
           RowBox[{"ValCalc", "[", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", "order", "]"}], "]"}], ",", " ", "local"}], 
            "]"}]}], ";", "\n", "   ", "\n", "   ", 
          RowBox[{"(*", 
           RowBox[{
           "if", " ", "new", " ", "optimum", " ", "reset", " ", "counter", 
            " ", "and", " ", "update", " ", "output"}], "*)"}], "\n", "   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"val", " ", "<", " ", "minval"}], ",", "\n", "    ", 
            RowBox[{
             RowBox[{"n", " ", "=", " ", "0"}], ";", "\n", "    ", 
             RowBox[{"minval", " ", "=", " ", "val"}], ";", "\n", "    ", 
             RowBox[{"orderout", " ", "=", " ", "order"}], ";"}], "\n", 
            "    ", ",", "\n", "    ", 
            RowBox[{
             RowBox[{"n", "++"}], ";"}]}], "\n", "    ", "]"}]}]}], "]"}], 
       ";", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{"give", " ", "optimal", " ", "random", " ", "order"}], "*)"}],
        "\n", "  ", "orderout"}]}], "\n", "  ", "]"}]}], "\n", "  ", "\n", 
   RowBox[{
    RowBox[{"ValCalc", " ", "=", "   ", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vec", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"local", ",", " ", "_Integer", ",", " ", "0"}], "}"}]}], 
        "}"}], ",", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"Mean", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Partition", "[", 
           RowBox[{"vec", ",", " ", "local", ",", " ", "1"}], "]"}], "]"}], 
         "]"}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeAbsVec", "[", 
      RowBox[{"grad_", ",", " ", "bval_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Abs", "@", 
         RowBox[{"(", 
          RowBox[{"grad", "*", 
           RowBox[{"Sqrt", "[", "bval", "]"}]}], ")"}]}], "]"}], ",", " ", 
       "3"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", "PlotDuty", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SyntaxInformation", "[", "PlotDuty", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<ArgumentsPattern\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", "_."}], "}"}]}], 
      "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"PlotDuty", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"grad_", ",", " ", "bval_", ",", " ", "ord_"}], "}"}], ",", 
      " ", 
      RowBox[{"mode_", ":", "True"}]}], "]"}], " ", ":=", " ", "\n", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "grads", ",", " ", "order", ",", " ", "testgr", ",", " ", "mn", ",", 
        " ", "ran"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"grads", " ", "=", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"grad", "*", 
          RowBox[{"Sqrt", "[", "bval", "]"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"grads", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NumberQ", "[", "bval", "]"}], ",", " ", "grads", ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"grads", ",", " ", "1"}], "]"}]}], "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"grads", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"grads", " ", "-", " ", 
           RowBox[{"Min", "[", "grads", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "grads", "]"}], " ", "-", " ", 
           RowBox[{"Min", "[", "grads", "]"}]}], ")"}]}]}], ";", "\n", "  ", 
       RowBox[{"ran", " ", "=", " ", 
        RowBox[{"MinMax", "[", "grads", "]"}]}], ";", "\n", "  ", 
       RowBox[{"order", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", " ", "mode"}], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "grads", "]"}], "]"}], ",", " ", "ord"}], 
         "]"}]}], ";", "\n", "  ", 
       RowBox[{"testgr", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Partition", "[", 
             RowBox[{"#", ",", " ", "10", ",", " ", "1"}], "]"}], "]"}], 
           "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"grads", "[", 
           RowBox[{"[", "order", "]"}], "]"}], "]"}]}]}], ";", "\n", "  ", 
       RowBox[{"mn", " ", "=", " ", 
        RowBox[{"Max", " ", "/@", " ", 
         RowBox[{"Transpose", "@", "testgr"}]}]}], ";", "\n", "  ", 
       RowBox[{"Show", "[", "\n", "   ", 
        RowBox[{
         RowBox[{"ListLinePlot", "[", 
          RowBox[{"testgr", ",", " ", 
           RowBox[{
           "PlotLabel", " ", "->", " ", "\"\<Average Gradient Load\>\""}], 
           ",", " ", "\n", "    ", 
           RowBox[{"AxesStyle", " ", "->", " ", 
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", " ", "Black"}], "}"}], "]"}]}], ",", "\n",
            "    ", 
           RowBox[{"LabelStyle", " ", "->", " ", "\n", "     ", 
            RowBox[{"Directive", "[", 
             RowBox[{"{", 
              RowBox[{"Black", ",", " ", "Bold", ",", " ", "12", ",", " ", 
               RowBox[{"FontFamily", " ", "->", " ", "\"\<Helvetica\>\""}]}], 
              "}"}], "]"}]}], ",", "\n", "    ", 
           RowBox[{"Ticks", " ", "->", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.1", ",", " ", "\"\<Min G\>\""}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{".55", ",", " ", "\"\<Avrg. G\>\""}], "}"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", "\n", "        ", "\"\<Max G\>\""}], 
                 "}"}]}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"PlotRange", " ", "->", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", "\n", "    ", 
           RowBox[{"GridLines", " ", "->", " ", 
            RowBox[{"{", 
             RowBox[{"None", ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "00.1", ",", " ", "0.55", ",", " ", "\n", "       ", "1", ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Max", "@", "mn"}], ",", " ", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Red", ",", " ", "Thick"}], "]"}]}], "}"}]}], 
               "}"}]}], "}"}]}]}], "\n", "    ", "]"}], ",", "\n", "   ", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{"mn", ",", " ", 
           RowBox[{"PlotStyle", " ", "->", " ", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", " ", "Dashed", ",", " ", "Thick"}], 
             "]"}]}]}], "]"}]}], "\n", "   ", "]"}]}]}], "\n", "  ", "]"}]}], 
   "\n", "  ", "\n", 
   RowBox[{"(*", "CalcPolorPts", "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "calculate", " ", "polar", " ", "coordinates", " ", "from", " ", 
     "gradients"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"CalcPolarPts", "[", 
     RowBox[{"grad_", ",", " ", "type_"}], "]"}], " ", ":=", " ", 
    RowBox[{"CalcPolarPts", "[", 
     RowBox[{"grad", ",", " ", "type", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0.", ",", " ", "0."}], "}"}]}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"CalcPolarPts", "[", 
     RowBox[{"grad_", ",", " ", "type_", ",", " ", "vec_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sig", ",", " ", "phi", ",", " ", "gradp", ",", " ", "rot"}], 
       "}"}], ",", "\n", "  ", 
      RowBox[{"(*", 
       RowBox[{"rotate", " ", "viewpoint"}], "*)"}], "\n", "  ", 
      RowBox[{
       RowBox[{"rot", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vec", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "180", " ", "Degree"}], 
            ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vec", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "90", " ", "Degree"}], ",",
             " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], "]"}]}], 
         ")"}]}], ";", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{"calculate", " ", "spherical", " ", "coordinates"}], "*)"}], 
       "\n", "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"sig", ",", " ", "phi"}], "}"}], " ", "=", " ", 
        RowBox[{"Transpose", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"90", ",", "0"}], "}"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToSphericalCoordinates", "[", 
                    RowBox[{"rot", ".", "#"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"2", " ", ";;"}], "]"}], "]"}], "/", 
                  "Degree"}]}]}], ")"}], " ", "&"}], " ", "/@", " ", "grad"}],
             "]"}], " ", "/.", " ", 
           RowBox[{"Indeterminate", " ", "->", " ", "0"}]}], ")"}]}]}], ";", 
       "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{
        "transform", " ", "to", " ", "correct", " ", "axes", " ", "system"}], 
        "*)"}], "\n", "  ", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"phi", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"sig", " ", "Degree"}], "]"}]}], ",", " ", 
             RowBox[{"90", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"sig", " ", "Degree"}], "]"}]}]}], "}"}], "]"}], ",", 
          "\n", "    ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"phi", " ", ",", " ", "sig"}], "}"}], "]"}], ",", "\n", 
          "    ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"phi", " ", ",", " ", 
             RowBox[{"90", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"sig", " ", "Degree"}], "]"}]}]}], "}"}], "]"}]}], 
         "\n", "    ", "}"}], "[", 
        RowBox[{"[", "type", "]"}], "]"}]}]}], "\n", "  ", "]"}]}], "\n", 
   "  ", "\n", 
   RowBox[{"(*", "GenerateGradientsGUI", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradientsGUI", "[", "]"}], " ", ":=", " ", 
    RowBox[{"GenerateGradientsGUI", "[", "True", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"GenerateGradientsGUI", "[", "popup_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "pan", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"pan", " ", "=", " ", 
        RowBox[{"Manipulate", "[", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"covert", " ", "bval", " ", "and", " ", "names"}], "*)"}], 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"bvall", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"NumberQ", "[", "bvall", "]"}], ",", " ", 
              RowBox[{"{", "bvall", "}"}], ",", " ", "bvall"}], "]"}]}], ";", 
           "\n", "\t\t", 
           RowBox[{"names", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", " ", 
                RowBox[{"\"\< \>\"", " ", "->", " ", "\"\<_\>\""}]}], "]"}], 
              " ", "&"}], " ", "/@", " ", "names"}]}], ";", "\n", "\t\t", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{
            "constrain", " ", "one", " ", "shel", " ", "to", " ", "124", " ", 
             "directions"}], "*)"}], "\n", "\t\t", 
           RowBox[{"dirs1", " ", "=", " ", 
            RowBox[{"Clip", "[", 
             RowBox[{"dirs1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"3", ",", " ", "128"}], "}"}]}], "]"}]}], ";", "\n", 
           "\t\t", "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"Constrain", ",", " ", 
             RowBox[{
             "multi", " ", "shel", " ", "to", " ", "60", " ", "per", " ", 
              "shell"}]}], "*)"}], "\n", "\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "dirs21", ",", " ", "dirs22", ",", " ", "dirs23", ",", " ", 
              "dirs24", ",", " ", "dirs25", ",", " ", "dirs26"}], "}"}], " ", 
            "=", " ", 
            RowBox[{"Clip", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "dirs21", ",", " ", "dirs22", ",", " ", "dirs23", ",", " ", 
                "dirs24", ",", " ", "dirs25", ",", " ", "dirs26"}], "}"}], 
              ",", " ", 
              RowBox[{"{", 
               RowBox[{"3", ",", " ", "128"}], "}"}]}], "]"}]}], ";", "\n", 
           "\t\t", 
           RowBox[{"dirs2", " ", "=", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "dirs21", ",", " ", "dirs22", ",", " ", "dirs23", ",", " ", 
               "dirs24", ",", " ", "dirs25", ",", " ", "dirs26"}], "}"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", " ", ";;", " ", "nshels"}], "]"}], "]"}]}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{
            "convert", " ", "gradients", " ", "to", " ", "readable", " ", 
             "format"}], "*)"}], "\n", "\t\t", 
           RowBox[{"out", " ", "=", " ", 
            RowBox[{
             RowBox[{"names", "[", 
              RowBox[{"[", "mult", "]"}], "]"}], " ", "<>", " ", 
             RowBox[{"Switch", "[", 
              RowBox[{"mult", ",", "\n", "\t\t\t", 
               RowBox[{"(*", "DWI", "*)"}], "\n", "\t\t\t", "4", ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"gradd", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                 "gradd", ",", " ", 
                 RowBox[{"FinalGrads", "[", 
                  RowBox[{"outd", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"inter", ",", " ", "int", ",", " ", "bi"}], "}"}],
                    ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"random", ",", " ", "orderd"}], "}"}]}], "]"}]}], 
                "]"}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", 
                RowBox[{"cartesian", " ", "grid"}], "*)"}], "\n", "\t\t\t", 
               "3", ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"gradc", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                 "gradc", ",", " ", 
                 RowBox[{"FinalGrads", "[", 
                  RowBox[{"outc", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"inter", ",", " ", "int", ",", " ", "bi"}], "}"}],
                    ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"random", ",", " ", "orderc"}], "}"}]}], "]"}]}], 
                "]"}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", 
                RowBox[{"multi", " ", "shel"}], "*)"}], "\n", "\t\t\t", "2", 
               ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"gradm", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                 "gradm", ",", " ", 
                 RowBox[{"FinalGrads", "[", 
                  RowBox[{"outm", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"inter", ",", " ", "int", ",", " ", "bi"}], "}"}],
                    ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"random", ",", " ", "orderm"}], "}"}]}], "]"}]}], 
                "]"}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", 
                RowBox[{"single", " ", "shel"}], "*)"}], "\n", "\t\t\t", "1", 
               ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"grads", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                 "grads", ",", " ", 
                 RowBox[{"FinalGrads", "[", 
                  RowBox[{"outs", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"inter", ",", " ", "int", ",", " ", "bi"}], "}"}],
                    ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"random", ",", " ", "orders"}], "}"}]}], "]"}]}], 
                "]"}]}], "\n", "\t\t", "]"}]}]}], ";", "\n", "\t\t\t", "\n", 
           "\t\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"The", " ", "display"}], ",", " ", 
             RowBox[{
             "show", " ", "the", " ", "plots", " ", "or", " ", "show", " ", 
              "the", " ", "Gradient", " ", "directions", " ", "txt"}]}], 
            "*)"}], "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"Switch", "[", 
             RowBox[{"disp", ",", "\n", "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"display", " ", "as", " ", "3", "D", " ", "plot"}], 
               "*)"}], "\n", "\t\t\t", "1", ",", " ", 
              RowBox[{"Switch", "[", 
               RowBox[{"mult", ",", "\n", "\t\t\t\t", "1", ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "show", " ", "single", " ", "shell", " ", "gradient", " ", 
                  "directions"}], "*)"}], "\n", "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"points", " ", "===", " ", 
                   RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{
                   "no", " ", "gradients", " ", "present", " ", "only", " ", 
                    "show", " ", "sphere"}], "*)"}], "\n", "\t\t\t\t\t", 
                  RowBox[{"Column", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", " ", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"SpherePlot", "[", 
                    RowBox[{"1", ",", " ", "opacity"}], "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "size"}], ",", " ", 
                    RowBox[{"PlotLabel", " ", "->", " ", "\"\<\>\""}]}], 
                    "]"}]}], "}"}], "]"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"pointspl", " ", "=", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"proj", ",", " ", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"10.", "^", 
                    RowBox[{"-", "16"}]}]}], "]"}], "*", 
                    RowBox[{"Normalize", "[", "#", "]"}]}], " ", "&"}], ",", 
                    " ", "points", ",", " ", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", " ", "points"}], 
                    "]"}]}], ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Show", "[", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"SpherePlot", "[", 
                    RowBox[{"1", ",", " ", "opacity"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"Shell", " ", "positive", " ", "z"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{"pointspl", ",", " ", "Red", ",", " ", "0.05"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"Shells", " ", "Negative", " ", "z"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"mirror", ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"-", "pointspl"}], ",", " ", "Gray", ",", " ", 
                    "0.05"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", "sticks", "*)"}], "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"sticks", ",", " ", 
                    RowBox[{"ListStickPlot", "[", 
                    RowBox[{"pointspl", ",", " ", "0.01"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"ImageSize", " ", "->", " ", "size"}], ",", " ", 
                    RowBox[{"PlotLabel", " ", "->", " ", "\"\<\>\""}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "->", " ", "app"}]}], "]"}]}], 
                    "\n", "\t\t\t\t\t", "}"}], ",", " ", 
                    RowBox[{"Alignment", " ", "->", " ", "Center"}]}], 
                    "]"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t",
                 "2", ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "show", " ", "multi", " ", "shell", " ", "gradient", " ", 
                  "directions"}], "*)"}], "\n", "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ppoints", " ", "===", " ", 
                   RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{
                   "no", " ", "gradients", " ", "present", " ", "only", " ", 
                    "show", " ", "sphere"}], "*)"}], "\n", "\t\t\t\t\t", 
                  RowBox[{"Column", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", " ", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"SpherePlot", "[", 
                    RowBox[{"1", ",", " ", "opacity"}], "]"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "size"}], ",", " ", 
                    RowBox[{"PlotLabel", " ", "->", " ", "\"\<\>\""}]}], 
                    "]"}]}], "}"}], "]"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"gradients", " ", "are", " ", "defiended"}], " ", 
                   "*)"}], "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"ppointspl", " ", "=", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"proj", ",", " ", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"10.", "^", 
                    RowBox[{"-", "16"}]}]}], "]"}], "*", 
                    RowBox[{"Normalize", "[", "#", "]"}]}], " ", "&"}], ",", 
                    " ", "ppoints", ",", " ", 
                    RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "ppoints"}], 
                    "]"}]}], ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"len", " ", "=", " ", 
                    RowBox[{"Length", "[", "ppoints", "]"}]}], ";", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{"rlen", " ", "=", " ", 
                    RowBox[{"Range", "[", "len", "]"}]}], ";", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{"running", ",", " ", 
                    RowBox[{"show", " ", "=", " ", "rlen"}]}], "]"}], ";", 
                   "\n", "\t\t\t\t\t", 
                   RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "show", "]"}], ",", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", " ", "->", " ", "\"\<multi\>\""}], ",", " ", 
                    RowBox[{"rlen", " ", "->", " ", "\"\<all\>\""}]}], "}"}], 
                    ",", " ", "rlen"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"show", " ", "===", " ", "0"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "show", " ", "all", " ", "gradients", " ", "multi", " ", 
                    "shell"}], "*)"}], "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"Show", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Multi", " ", "shells", " ", "positive", " ", "z"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SpherePlot", "[", 
                    RowBox[{"#3", ",", " ", "opacity"}], "]"}], ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"#1", " ", "#3"}], ",", " ", "#2", ",", " ", 
                    "0.05"}], "]"}]}], "}"}], " ", "&"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Reverse", "@", "ppointspl"}], ",", " ", 
                    RowBox[{"Reverse", "@", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", 
                    "Yellow", ",", " ", "Pink", ",", " ", "Purple"}], "}"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"1", " ", ";;", " ", "len"}], "]"}], "]"}]}], ",",
                     " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", " ", ".5", ",", " ", 
                    RowBox[{
                    RowBox[{"-", ".5"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"len", " ", "-", " ", "1"}], ")"}]}]}], "]"}]}], 
                    "}"}]}], "]"}], " ", "//", " ", "Flatten"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "multi", " ", "shells", " ", "negative", " ", "z"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"mirror", ",", " ", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#1"}], " ", "#2"}], ",", " ", "Gray", ",", 
                    " ", "0.05"}], "]"}], " ", "&"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"ppointspl", ",", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", " ", ".5", ",", " ", 
                    RowBox[{
                    RowBox[{"-", ".5"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"len", " ", "-", " ", "1"}], ")"}]}]}], "]"}]}], 
                    "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"ImageSize", " ", "->", " ", "size"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", "app"}]}], "]"}], 
                    ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "show", " ", "all", " ", "gradients", " ", "single", " ", 
                    "shell"}], "*)"}], "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"Show", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"SpherePlot", "[", 
                    RowBox[{"1", ",", " ", "opacity"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Multi", " ", "shells", " ", "positive", " ", "z"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{"#1", ",", " ", "#2", ",", " ", "0.05"}], "]"}], 
                    " ", "&"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"ppointspl", ",", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", 
                    "Yellow", ",", " ", "Pink", ",", " ", "Purple"}], "}"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"1", " ", ";;", " ", "len"}], "]"}], "]"}]}], 
                    "}"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"show", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "len"}], "}"}]}], "]"}], "]"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "multi", " ", "shells", " ", "negative", " ", "z"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"mirror", ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"-", "#"}], ",", " ", "Gray", ",", " ", "0.05"}], 
                    "]"}], " ", "&"}], " ", "/@", " ", "ppointspl"}], ")"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"show", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "len"}], "}"}]}], "]"}], "]"}], 
                    "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"(*", "sticks", "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"sticks", ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListStickPlot", "[", 
                    RowBox[{"#", ",", " ", "0.01"}], "]"}], " ", "&"}], " ", "/@",
                     " ", "ppointspl"}], ")"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"Clip", "[", 
                    RowBox[{"show", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "len"}], "}"}]}], "]"}], "]"}], 
                    "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"ImageSize", " ", "->", " ", "size"}], ",", " ", 
                    RowBox[{"Background", " ", "->", " ", "app"}]}], "]"}]}], 
                    "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "}"}], 
                    ",", " ", 
                    RowBox[{"Alignment", " ", "->", " ", "Center"}]}], 
                    "]"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t",
                 "3", ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "show", " ", "cartesian", " ", "grid", " ", "directions"}], 
                 "*)"}], "\n", "\t\t\t\t", 
                RowBox[{"Column", "[", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\>\"", ",", "\n", "\t\t\t\t\t", 
                   RowBox[{"Show", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"SpherePlot", "[", 
                    RowBox[{"0", ",", " ", "opacity"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"Shell", " ", "positive", " ", "z"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{"pointsc", ",", " ", "Red", ",", " ", "0.05"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"Shells", " ", "Negative", " ", "z"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"mirror", ",", " ", 
                    RowBox[{"ListSpherePloti", "[", 
                    RowBox[{
                    RowBox[{"-", "pointsc"}], ",", " ", "Gray", ",", " ", 
                    "0.05"}], "]"}], ",", " ", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"ImageSize", " ", "->", " ", "size"}], ",", " ", 
                    RowBox[{"PlotLabel", " ", "->", " ", "\"\<\>\""}], ",", 
                    " ", 
                    RowBox[{"Background", " ", "->", " ", "app"}]}], "]"}]}], 
                  "\n", "\t\t\t\t ", "}"}], "]"}], ",", "\n", "\t\t\t\t ", 
                "4", ",", 
                RowBox[{"(*", "DWI", "*)"}], "\n", "\t\t\t\t ", 
                RowBox[{"Show", "[", "\n", "\t\t\t\t \t", 
                 RowBox[{
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "#"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "#"}], "}"}]}], "}"}], " ", "&"}], 
                    " ", "/@", " ", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"bvald", ",", " ", "0"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"PlotStyle", " ", "->", " ", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{"Gray", ",", " ", "Thick"}], "}"}], "]"}]}], ",", 
                    " ", 
                    RowBox[{"PlotRange", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "2"}], "}"}], ",", " ", "Full"}], 
                    "}"}]}], ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"AxesStyle", " ", "->", " ", "Thick"}], ",", " ", 
                    RowBox[{"Axes", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "True"}], "}"}]}], ",", " ", 
                    RowBox[{"AspectRatio", " ", "->", " ", "1.4"}], ",", "\n",
                     "\t\t\t\t\t\t", 
                    RowBox[{"AxesLabel", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", " ", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<b-value\>\"", ",", " ", "Bold", ",", " ", "Black"}], 
                    "]"}]}], "}"}]}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"ListPlot", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "#"}], "}"}], " ", "&"}], " ", "/@",
                     " ", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"bvald", ",", " ", "0"}], "]"}]}], ",", " ", 
                    RowBox[{"PlotStyle", " ", "->", " ", "Red"}]}], "]"}]}], 
                 "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"display", " ", "as", " ", "polar", " ", "plot"}], 
               "*)"}], "\n", "\t\t\t", "2", ",", " ", 
              RowBox[{"Column", "[", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{"(*", "controls", "*)"}], "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Slider2D", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "viewvec", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", 
                    RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}], ",", " ", 
                    RowBox[{"ContinuousAction", " ", "->", " ", "True"}]}], 
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "ctype", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", " ", "->", " ", "\"\<polar\>\""}], ",", " ", 
                    RowBox[{"2", " ", "->", " ", "\"\<even grid\>\""}], ",", 
                    " ", 
                    RowBox[{"3", " ", "->", " ", "\"\<scaled grid\>\""}]}], 
                    "}"}]}], "]"}]}], "\n", "\t\t\t\t", "}"}], ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
                    RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"mult", " ", "==", " ", "2"}], ",", " ", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "showc", "]"}], ",", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"All", " ", "->", " ", "\"\<all\>\""}], "}"}], 
                    ",", " ", "rlenc"}], "]"}]}], "]"}], ",", " ", 
                    "\"\<\>\""}], "]"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"the", " ", "plot"}], "*)"}], "\n", "\t\t\t\t", 
                  RowBox[{"Dynamic", "@", 
                   RowBox[{"Show", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"charts", "[", 
                    RowBox[{"[", "ctype", "]"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "change", " ", "between", " ", "single", " ", "and", " ", 
                    "multi", " ", "slice"}], "*)"}], "\n", "\t\t\t\t\t", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"mult", ",", "\n", "\t\t\t\t\t\t", "1", ",", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "===", " ", 
                    RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"Graphics", "[", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"pointspl", " ", "=", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"proj", ",", " ", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"10.", "^", 
                    RowBox[{"-", "16"}]}]}], "]"}], "*", 
                    RowBox[{"Normalize", "[", "#", "]"}]}], " ", "&"}], ",", 
                    " ", "points", ",", " ", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", " ", "points"}], 
                    "]"}]}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"PlotChartPoints", "[", 
                    RowBox[{"pointspl", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"mirror", ",", " ", "Red"}], "}"}]}], "]"}]}]}], 
                    "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t", 
                    "2", ",", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ppoints", " ", "===", " ", 
                    RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"Graphics", "[", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"ppointspl", " ", "=", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{"proj", ",", " ", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"10.", "^", 
                    RowBox[{"-", "16"}]}]}], "]"}], "*", 
                    RowBox[{"Normalize", "[", "#", "]"}]}], " ", "&"}], ",", 
                    " ", "ppoints", ",", " ", 
                    RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "ppoints"}], 
                    "]"}]}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"len", " ", "=", " ", 
                    RowBox[{"Length", "[", "ppoints", "]"}]}], ";", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"rlenc", " ", "=", " ", 
                    RowBox[{"Range", "[", "len", "]"}]}], ";", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"PlotChartPoints", "[", 
                    RowBox[{
                    RowBox[{"ppointspl", "[", 
                    RowBox[{"[", "showc", "]"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"mirror", ",", " ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Red", ",", " ", "Green", ",", " ", "Blue", ",", " ", 
                    "Yellow", ",", " ", "Pink", ",", " ", "Purple"}], "}"}], 
                    "[", 
                    RowBox[{"[", "showc", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
                    "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t", 
                    "_", ",", " ", 
                    RowBox[{"Graphics", "[", "]"}]}], "\n", "\t\t\t\t\t", 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", 
                 "}"}], ",", " ", 
                RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",",
               "\n", "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"display", " ", "as", " ", "text"}], "*)"}], "\n", 
              "\t\t\t", "3", ",", " ", "out", ",", "\n", "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"display", " ", "G", " ", "load"}], "*)"}], "\n", 
              "\t\t\t", "4", ",", " ", 
              RowBox[{"Switch", "[", 
               RowBox[{"mult", ",", "\n", "\t\t\t\t", "1", ",", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"orders", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                  RowBox[{"Graphics", "[", "]"}], ",", " ", 
                  RowBox[{"PlotDuty", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"grads", ",", " ", 
                    RowBox[{"Length", "[", "bvall", "]"}]}], "]"}], ",", " ", 
                    "bvall", ",", " ", "orders"}], "}"}], ",", " ", 
                    "random"}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t", "2", 
                ",", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"orderm", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                  RowBox[{"Graphics", "[", "]"}], ",", " ", 
                  RowBox[{"PlotDuty", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"gradm", ",", " ", 
                    RowBox[{"bvals", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", " ", "nshels"}], "]"}], "]"}], ",", " ", 
                    "orderm"}], "}"}], ",", " ", "random"}], "]"}]}], "]"}], 
                ",", "\n", "\t\t\t\t", "3", ",", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"orderc", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                  RowBox[{"Graphics", "[", "]"}], ",", " ", 
                  RowBox[{"PlotDuty", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"gradc", ",", " ", "bvalc", ",", " ", "orderc"}], 
                    "}"}], ",", " ", "random"}], "]"}]}], "]"}], ",", "\n", 
                "\t\t\t\t", "4", ",", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"orderd", " ", "===", " ", "\"\<\>\""}], ",", " ", 
                  RowBox[{"Graphics", "[", "]"}], ",", " ", 
                  RowBox[{"PlotDuty", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"gradd", ",", " ", 
                    RowBox[{"Length", "[", "bvald", "]"}]}], "]"}], ",", " ", 
                    "bvald", ",", " ", "orderd"}], "}"}], ",", " ", 
                    "random"}], "]"}]}], "]"}]}], "\n", "\t\t\t", "]"}]}], 
             "\n", "\t\t", "]"}], "]"}]}], "\n", "\t\t", ",", "\n", "\t\t", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"(*", "Controls", "*)"}], "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "Name"}], "*)"}], "\n", "\t\t", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<  Set Name \>\"", ",", " ", 
             RowBox[{"InputField", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"names", "[", 
                 RowBox[{"[", "mult", "]"}], "]"}], "]"}], ",", " ", 
               "String"}], "]"}]}], "}"}], "]"}], ",", "\n", "\t\t", 
          "Delimiter", ",", "\n", "\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"display", " ", "controls"}], "*)"}], "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "disp", ",", " ", "1", ",", " ", "\"\<display gradients\>\""}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", " ", "->", " ", "\"\<graphics\>\""}], ",", " ", 
              RowBox[{"2", " ", "->", " ", "\"\<chart\>\""}], ",", " ", 
              RowBox[{"3", " ", "->", " ", "\"\<text\>\""}], ",", " ", 
              RowBox[{"4", " ", "->", " ", "\"\<G load\>\""}]}], "}"}]}], 
           "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "opacity", ",", " ", "0.5", ",", " ", "\"\<sphere opacity\>\""}],
              "}"}], ",", " ", "0", ",", " ", "1", ",", " ", ".1", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "Slider"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\< sticks: \>\"", ",", " ", 
             RowBox[{"Checkbox", "[", 
              RowBox[{"Dynamic", "[", "sticks", "]"}], "]"}], ",", 
             "\"\<   mirror grad.: \>\"", ",", " ", 
             RowBox[{"Checkbox", "[", 
              RowBox[{"Dynamic", "[", "mirror", "]"}], "]"}], ",", " ", 
             "\"\<   project grad. on half: \>\"", ",", " ", 
             RowBox[{"Checkbox", "[", 
              RowBox[{"Dynamic", "[", "proj", "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\n", "\t\t", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{"\"\<top\>\"", ",", " ", 
                RowBox[{"vp", " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "0", ",", " ", "3.38"}], "}"}]}], 
                ",", " ", 
                RowBox[{"ImageSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"50", ",", " ", "20"}], "}"}]}], ",", " ", 
                RowBox[{"FrameMargins", " ", "->", " ", "0"}]}], "]"}], ",", 
              "\n", "\t\t\t", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<right\>\"", ",", " ", 
                RowBox[{"vp", " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{"3.38", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
                ",", " ", 
                RowBox[{"ImageSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"50", ",", " ", "20"}], "}"}]}], ",", " ", 
                RowBox[{"FrameMargins", " ", "->", " ", "0"}]}], "]"}], ",", 
              "\n", "\t\t\t", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<front\>\"", ",", " ", 
                RowBox[{"vp", " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "3.38", ",", " ", "0"}], "}"}]}], 
                ",", " ", 
                RowBox[{"ImageSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"50", ",", " ", "20"}], "}"}]}], ",", " ", 
                RowBox[{"FrameMargins", " ", "->", " ", "0"}]}], "]"}], ",", 
              "\n", "\t\t\t", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<reset\>\"", ",", " ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"vp", ",", " ", "vv", ",", " ", "va"}], "}"}], " ", 
                 "=", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1.3", ",", " ", 
                    RowBox[{"-", "2.4"}], ",", " ", "2"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                   " ", 
                   RowBox[{"30.", " ", "Degree"}]}], "}"}]}], ",", " ", 
                RowBox[{"ImageSize", " ", "->", " ", 
                 RowBox[{"{", 
                  RowBox[{"100", ",", " ", "20"}], "}"}]}], ",", " ", 
                RowBox[{"FrameMargins", " ", "->", " ", "0"}]}], "]"}]}], 
             "\n", "\t\t", "}"}], "}"}], "]"}], ",", "\n", "\t\t", 
          "Delimiter", ",", "\n", "\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"multi", " ", "or", " ", "single", " ", "shell"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "half", ",", " ", "1", ",", " ", "\"\<Full or half sphere\>\""}],
              "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", " ", "->", " ", "\"\<half sphere\>\""}], ",", " ", 
              RowBox[{"0", " ", "->", " ", "\"\<full sphere\>\""}]}], "}"}]}],
            "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mult", ",", " ", "1", ",", " ", "\"\<shells\>\""}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", " ", "->", " ", "\"\<single shell\>\""}], ",", " ", 
              RowBox[{"2", " ", "->", " ", "\"\<multi shell\>\""}], ",", " ", 
              RowBox[{"3", " ", "->", " ", "\"\<cartesian\>\""}], ",", " ", 
              RowBox[{"4", " ", "->", " ", "\"\<DWI\>\""}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "PopupMenu"}], ",", " ", 
            RowBox[{"FieldSize", " ", "->", " ", 
             RowBox[{"{", 
              RowBox[{"13", ",", " ", "0.7"}], "}"}]}]}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"(*", 
           RowBox[{
           "single", " ", "multi", " ", "and", " ", "cartesian", " ", 
            "controls"}], "*)"}], "\n", "\t\t", 
          RowBox[{"PaneSelector", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{"(*", 
              RowBox[{"Singel", " ", "shell", " ", "pannel"}], "*)"}], "\n", 
             "\t\t\t", 
             RowBox[{
              RowBox[{"1", " ", "->", " ", 
               RowBox[{"Column", "[", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "type", ",", " ", "\"\<normal\>\"", ",", " ", 
                    "\"\<type\>\""}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<normal\>\"", ",", " ", "\"\<normal fixed z\>\"", ",",
                     " ", "\"\<normal fixed x, y and z\>\"", ",", " ", 
                    "\"\<over-plus\>\"", ",", " ", 
                    "\"\<over-plus fixed z\>\"", ",", " ", 
                    "\"\<over-plus fixed x, y and z\>\""}], "}"}], ",", " ", 
                    RowBox[{"ControlType", " ", "->", " ", "PopupMenu"}], ",",
                     " ", 
                    RowBox[{"FieldSize", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{"13", ",", " ", "0.7"}], "}"}]}]}], "}"}], "]"}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs1", ",", " ", "30", ",", " ", 
                    "\"\<number of gradients\>\""}], "}"}], ",", " ", "6", 
                    ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                   "]"}]}], "\n", "\t\t\t", "}"}], "]"}]}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"Multi", " ", "shell", " ", "pannel"}], "*)"}], "\n", 
              "\t\t\t", 
              RowBox[{"2", " ", "->", " ", 
               RowBox[{"Column", "[", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "nshels", ",", " ", "2", ",", " ", 
                    "\"\<number of shells\>\""}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
                    " ", "6"}], "}"}]}], "}"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "shel", ",", " ", "1", ",", " ", "\"\< shell\>\""}], 
                    "}"}], ",", " ", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"Range", "[", "nshels", "]"}], "]"}], ",", " ", 
                    RowBox[{"ControlType", " ", "->", " ", "SetterBar"}]}], 
                    "}"}], "]"}]}], "\n", "\t\t\t\t", "}"}], "]"}], ",", "\n",
                   "\t\t\t\t", 
                  RowBox[{"PaneSelector", "[", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs21", ",", " ", "15", ",", " ", 
                    "\"\<number of gradients shell 1\>\""}], "}"}], ",", " ", 
                    "3", ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs22", ",", " ", "15", ",", " ", 
                    "\"\<number of gradients shell 2\>\""}], "}"}], ",", " ", 
                    "3", ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs23", ",", " ", "15", ",", " ", 
                    "\"\<number of gradients shell 3\>\""}], "}"}], ",", " ", 
                    "3", ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs24", ",", " ", "15", ",", " ", 
                    "\"\<number of gradients shell 4\>\""}], "}"}], ",", " ", 
                    "3", ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs25", ",", " ", "15", ",", " ", 
                    "\"\<number of gradients shell 5\>\""}], "}"}], ",", " ", 
                    "3", ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "dirs26", ",", " ", "15", ",", " ", 
                    "\"\<number of gradients shell 6\>\""}], "}"}], ",", " ", 
                    "3", ",", " ", "128", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                    "]"}]}], "\n", "\t\t\t\t", "}"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "shel", "]"}]}], "]"}], ",", "\n",
                   "\t\t\t\t", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "weight", ",", " ", ".5", ",", " ", 
                    "\"\<shell weighting\>\""}], "}"}], ",", " ", "0", ",", 
                    " ", "1", ",", " ", ".05", ",", " ", 
                    RowBox[{"ControlType", " ", "->", " ", "Slider"}], ",", 
                    " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}], ",", " ", 
                    RowBox[{"AppearanceElements", " ", "->", " ", 
                    RowBox[{"{", "\"\<InputField\>\"", "}"}]}]}], "}"}], 
                   "]"}]}], "\n", "\t\t\t", "}"}], "]"}]}], "\n", "\t\t\t", 
              ",", "\n", "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"cartesian", " ", "grid"}], "*)"}], "\n", "\t\t\t", 
              RowBox[{"3", " ", "->", " ", 
               RowBox[{"Column", "[", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "grid", ",", " ", "9", ",", " ", 
                    "\"\<cartesian grid size\>\""}], "}"}], ",", " ", "5", 
                    ",", " ", "15", ",", " ", "1", ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "\"\<Labeled\>\""}],
                     ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "Tiny"}]}], "}"}], 
                   "]"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "gridf", ",", " ", "True", ",", " ", 
                    "\"\<full even grid\>\""}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "False", " ", "->", " ", 
                    "\"\<no (in between odd grid)\>\""}], ",", " ", 
                    RowBox[{"True", " ", "->", " ", "\"\<yes\>\""}]}], 
                    "}"}]}], "}"}], "]"}]}], "\n", "\t\t\t", "}"}], "]"}]}], 
              ",", "\n", "\t\t\t", 
              RowBox[{"(*", 
               RowBox[{"DWI", " ", "pannel"}], "*)"}], "\n", "\t\t\t", 
              RowBox[{"4", " ", "->", " ", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "typed", ",", " ", "\"\<normal\>\"", ",", " ", 
                    "\"\<           type\>\""}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"\"\<normal\>\"", ",", " ", "\"\<over-plus\>\""}], 
                   "}"}], ",", " ", 
                  RowBox[{"ControlType", " ", "->", " ", "SetterBar"}]}], 
                 "}"}], "]"}]}]}], "\n", "\t\t", "}"}], ",", " ", 
            RowBox[{"Dynamic", "[", "mult", "]"}]}], "]"}], ",", "\n", "\t\t",
           "Delimiter", ",", "\n", "\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"input", " ", "bvals"}], "*)"}], "\n", "\t\t", 
          RowBox[{"PaneSelector", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"1", " ", "->", " ", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<  b-value:   \>\"", ",", " ", 
                  RowBox[{"InputField", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "bvall", "]"}], ",", " ", 
                    "Expression", ",", " ", 
                    RowBox[{"Background", " ", "->", " ", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"bvall", ",", " ", "NumberQ"}], "]"}], " ", "&&", 
                    " ", 
                    RowBox[{"ListQ", "[", "bvall", "]"}]}], ")"}], " ", "||", 
                    " ", 
                    RowBox[{"NumberQ", "[", "bvall", "]"}]}], ")"}], ",", " ",
                     "None", ",", " ", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Lighter", "[", "Red", "]"}], "]"}]}], "]"}], 
                    "]"}]}]}], "]"}]}], "}"}], "]"}]}], ",", "\n", "\t\t\t", 
              RowBox[{"2", " ", "->", " ", 
               RowBox[{"Dynamic", "[", 
                RowBox[{"Grid", "[", 
                 RowBox[{"Partition", "[", 
                  RowBox[{
                   RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<b-val\>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "#", "]"}], " ", "<>", " ", 
                    "\"\<:\>\""}], ",", " ", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"bvals", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", " ", "Number",
                     ",", " ", 
                    RowBox[{"FieldSize", " ", "->", " ", "5"}]}], "]"}]}], 
                    "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", " ", "nshels"}], "]"}]}], ",", " ", "6",
                     ",", " ", "\"\<\>\""}], "]"}], ",", " ", "3"}], "]"}], 
                 "]"}], "]"}]}], ",", "\n", "\t\t\t", 
              RowBox[{"3", " ", "->", " ", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<max b (corner):   \>\"", ",", " ", 
                  RowBox[{"InputField", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "bvalc", "]"}], ",", " ", 
                    "Number"}], "]"}]}], "}"}], "]"}]}], ",", "\n", "\t\t\t", 
              RowBox[{"4", " ", "->", " ", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"\"\<      b-value:   \>\"", ",", " ", 
                  RowBox[{"InputField", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "bvald", "]"}], ",", " ", 
                    "Expression", ",", " ", 
                    RowBox[{"Background", " ", "->", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"bvald", ",", " ", "NumberQ"}], "]"}], " ", "&&", 
                    " ", 
                    RowBox[{"ListQ", "[", "bvald", "]"}]}], ")"}], " ", "||", 
                    " ", 
                    RowBox[{"NumberQ", "[", "bvald", "]"}]}], ")"}], ",", " ",
                     "None", ",", " ", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Lighter", "[", "Red", "]"}], "]"}]}], "]"}], 
                    "]"}]}]}], "]"}]}], "}"}], "]"}]}]}], "\n", "\t\t", "}"}],
             ",", " ", 
            RowBox[{"Dynamic", "[", "mult", "]"}]}], "]"}], ",", "\n", "\t\t",
           "Delimiter", ",", "\n", "\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"interleave", " ", "b"}], "=", 
            RowBox[{
            "0", " ", "and", " ", "optimize", " ", "gradient", " ", 
             "load"}]}], "*)"}], "\n", "\t\t", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<  interleave b: \>\"", ",", " ", 
                 RowBox[{"Checkbox", "[", 
                  RowBox[{"Dynamic", "[", "inter", "]"}], "]"}], ",", " ", 
                 "\"\<Optimize G load: \>\"", ",", " ", 
                 RowBox[{"Checkbox", "[", 
                  RowBox[{"Dynamic", "[", "random", "]"}], "]"}]}], "}"}], 
               ",", "\n", "\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"inter", ",", "\n", "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{"\"\<  interleave b-value: \>\"", ",", 
                   RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "bi", "]"}], ",", " ", "Number", 
                    ",", " ", 
                    RowBox[{"FieldSize", "->", "3"}]}], "]"}], ",", " ", 
                   "\"\<interleave b every: \>\"", ",", " ", 
                   RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "int", "]"}], ",", " ", 
                    RowBox[{"Range", "[", 
                    RowBox[{"3", ",", " ", "20"}], "]"}]}], "]"}]}], "}"}], 
                 ",", "\n", "\t\t\t\t", 
                 RowBox[{"{", "}"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
              "}"}], ",", " ", 
             RowBox[{"Alignment", "->", "Left"}]}], "]"}], "]"}], ",", "\n", 
          "\t\t", "Delimiter", ",", "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
           "quality", " ", "and", " ", "multi", " ", "or", " ", "single", " ",
             "shell"}], "*)"}], "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "steps", ",", " ", "1000", ",", " ", 
              "\"\<quality (iterations)\>\""}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"500", " ", "->", " ", "\"\<poor (500)\>\""}], ",", " ", 
              RowBox[{"1000", " ", "->", " ", "\"\<normal (1000)\>\""}], ",", 
              " ", 
              RowBox[{"2500", " ", "->", " ", "\"\<excellent (2500)\>\""}], 
              ",", 
              RowBox[{"5000", " ", "->", " ", "\"\<perfect (5000)\>\""}], ",",
               " ", 
              RowBox[{"10000", " ", "->", " ", "\"\<extreme (10000)\>\""}]}], 
             "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "PopupMenu"}], ",", " ", 
            RowBox[{"FieldSize", " ", "->", " ", 
             RowBox[{"{", 
              RowBox[{"9", ",", " ", "0.7"}], "}"}]}]}], "}"}], ",", "\n", 
          "\t\t", 
          RowBox[{"(*", 
           RowBox[{"generate", " ", "gradietns", " ", "button"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"mult", ":", 
             RowBox[{"1", "-", 
              RowBox[{"single", " ", "shell"}]}]}], ";", " ", 
            RowBox[{"2", "-", 
             RowBox[{"multi", " ", "shell"}]}], ";", " ", 
            RowBox[{"3", "-", "cartesian"}], ";", 
            RowBox[{"4", "-", "DWI"}]}], "*)"}], "\n", "\t\t", 
          RowBox[{"Row", "[", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Button", "[", 
              RowBox[{"\"\<generate\>\"", ",", "\n", "\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{"initiate", " ", "gradient", " ", "generation"}], 
                "*)"}], "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"app", " ", "=", " ", 
                 RowBox[{"Lighter", "[", 
                  RowBox[{"Lighter", "[", "LightGray", "]"}], "]"}]}], ";", 
                "\n", "\t\t\t\t", 
                RowBox[{"disp", " ", "=", " ", "1"}], ";", " ", 
                RowBox[{"running", " ", "=", " ", "True"}], ";", "\n", 
                "\t\t\t\t", 
                RowBox[{"mirror", " ", "=", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"half", " ", "==", " ", "0"}], ",", " ", "False", 
                   ",", " ", "True"}], "]"}]}], ";", "\n", "\t\t\t\t", 
                RowBox[{"proj", " ", "=", " ", "False"}], ";", "\n", 
                "\t\t\t\t", 
                RowBox[{"Pause", "[", ".2", "]"}], ";", "\n", "\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{"switch", " ", "to", " ", "correct", " ", "method"}],
                  "*)"}], "\n", "\t\t\t\t", 
                RowBox[{"Switch", "[", 
                 RowBox[{"mult", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", "DWI", "*)"}], "\n", "\t\t\t\t\t", "4", ",", 
                  " ", 
                  RowBox[{
                   RowBox[{"gradd", " ", "=", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"typed", " ", "==", " ", "\"\<normal\>\""}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.707107"}], ",", " ", 
                    RowBox[{"-", "0.5"}], ",", " ", "0.5"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.707107", ",", " ", 
                    RowBox[{"-", "0.5"}], ",", " ", "0.5"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.", ",", " ", "0.707107", ",", " ", "0.707107"}], 
                    "}"}]}], "}"}]}], "]"}]}], ";"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", "cartesian", "*)"}], "\n", "\t\t\t\t\t", "3", 
                  ",", " ", 
                  RowBox[{
                   RowBox[{"gradc", " ", "=", " ", 
                    RowBox[{"pointsc", " ", "=", " ", 
                    RowBox[{"GradGrid", "[", 
                    RowBox[{"grid", ",", " ", "gridf"}], "]"}]}]}], ";"}], 
                  ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"multi", " ", "shell"}], "*)"}], "\n", 
                  "\t\t\t\t\t", "2", ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mpoints", ",", " ", "vel", ",", " ", "part"}], 
                    "}"}], " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{"dirs2", ",", " ", "half", ",", " ", 
                    RowBox[{"{", "}"}], ",", " ", "weight"}], "]"}]}], ";", 
                   "\n", "\t\t\t\t\t", 
                   RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mpoints", " ", "=", " ", 
                    RowBox[{"GradOptimize4C", "[", 
                    RowBox[{"mpoints", ",", " ", "vel", ",", " ", "half"}], 
                    "]"}]}], ";", 
                    RowBox[{"ppoints", " ", "=", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Chop", "[", 
                    RowBox[{"mpoints", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                     " ", "part"}]}], ";"}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{"gradm", " ", "=", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Chop", "[", 
                    RowBox[{"mpoints", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@",
                     " ", "part"}]}], ";"}], ",", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"single", " ", "shell"}], ",", " ", 
                    RowBox[{"normal", " ", "or", " ", "overplus"}]}], "*)"}], 
                  "\n", "\t\t\t\t\t", "1", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"grads", " ", "=", " ", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    "type", ",", " ", "\n", "\t\t\t\t\t\t", "\"\<normal\>\"", 
                    ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{
                    RowBox[{"{", "dirs1", "}"}], ",", " ", "half"}], "]"}]}], 
                    ";", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize1C", "[", 
                    RowBox[{"points", ",", " ", "half"}], "]"}]}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Chop", "[", "points", "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
                    "\"\<normal fixed z\>\"", ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{
                    RowBox[{"{", "dirs1", "}"}], ",", " ", "half", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], 
                    "}"}]}], "]"}]}], ";", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"points", ",", " ", "1", ",", " ", "half"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Chop", "[", "points", "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
                    "\"\<normal fixed x, y and z\>\"", ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{
                    RowBox[{"{", "dirs1", "}"}], ",", " ", "half", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
                    "}"}]}], "]"}]}], ";", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"points", ",", " ", "3", ",", " ", "half"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Chop", "[", "points", "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "all", " ", "over", " ", "plus", " ", "options", " ", 
                    "only", " ", "work", " ", "on", " ", "half", " ", 
                    "shell"}], "*)"}], "\n", "\t\t\t\t\t\t", 
                    "\"\<over-plus\>\"", ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"half", " ", "=", " ", "1"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{
                    RowBox[{"{", "dirs1", "}"}], ",", " ", "half"}], "]"}]}], 
                    ";", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
                    "}"}], ",", " ", "points"}], "]"}]}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "quick", " ", "distribution", " ", "for", " ", "init"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"points", ",", " ", "3", ",", " ", "half"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", 
                    RowBox[{"steps", "/", "10"}], "]"}], "}"}]}], "]"}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"optimize", " ", "overplys"}], "*)"}], "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"charge", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{".5", " ", "dirs1"}], ")"}], "^", 
                    RowBox[{"(", "1.2", ")"}]}], ",", " ", "3"}], "]"}], ",", 
                    " ", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", " ", "dirs1"}], "]"}]}], "]"}]}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize3C", "[", 
                    RowBox[{"points", ",", " ", "charge", ",", " ", "3"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"points", ",", " ", "3"}], "]"}], "]"}]}]}], ",", 
                    "\n", "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
                    "\"\<over-plus fixed z\>\"", ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"half", " ", "=", " ", "1"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"dirs1", " ", "-", " ", "1"}], "}"}], ",", " ", 
                    "half"}], "]"}]}], ";", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.", ",", " ", "0.707107", ",", " ", "0.707107"}], 
                    "}"}]}], "}"}], ",", " ", "points"}], "]"}]}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "quick", " ", "distribution", " ", "for", " ", "init"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"points", ",", " ", "4", ",", " ", "half"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", 
                    RowBox[{"steps", "/", "10"}], "]"}], "}"}]}], "]"}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"optimize", " ", "overplys"}], "*)"}], "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"charge", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{".5", " ", "dirs1"}], ")"}], "^", 
                    RowBox[{"(", "1.2", ")"}]}], ",", " ", "3"}], "]"}], ",", 
                    " ", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", " ", "dirs1"}], "]"}]}], "]"}]}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize3C", "[", 
                    RowBox[{"points", ",", " ", "charge", ",", " ", "4"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"points", ",", " ", "3"}], "]"}], "]"}]}]}], ",", 
                    "\n", "\t\t\t\t\t\t", "\n", "\t\t\t\t\t\t", 
                    "\"\<over-plus fixed x, y and z\>\"", ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"half", " ", "=", " ", "1"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Prepare", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"dirs1", " ", "-", " ", "3"}], "}"}], ",", " ", 
                    "half"}], "]"}]}], ";", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.707107"}], ",", " ", 
                    RowBox[{"-", "0.5"}], ",", " ", "0.5"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.707107", ",", " ", 
                    RowBox[{"-", "0.5"}], ",", " ", "0.5"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.", ",", " ", "0.707107", ",", " ", "0.707107"}], 
                    "}"}]}], "}"}], ",", " ", "points"}], "]"}]}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Pause", "[", ".5", "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "quick", " ", "distribution", " ", "for", " ", "init"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize2C", "[", 
                    RowBox[{"points", ",", " ", "6", ",", " ", "half"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"Round", "[", 
                    RowBox[{"steps", "/", "10"}], "]"}], "}"}]}], "]"}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"optimize", " ", "overplus"}], "*)"}], "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"charge", " ", "=", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{".5", " ", "dirs1"}], ")"}], "^", 
                    RowBox[{"(", "1.2", ")"}]}], ",", " ", "3"}], "]"}], ",", 
                    " ", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1", ",", " ", "dirs1"}], "]"}]}], "]"}]}], ";", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"GradOptimize3C", "[", 
                    RowBox[{"points", ",", " ", "charge", ",", " ", "6"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"points", " ", "=", " ", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"points", ",", " ", "3"}], "]"}], "]"}]}]}]}], 
                    "\n", "\t\t\t\t\t", "]"}]}], ";"}]}], 
                 RowBox[{"(*", 
                  RowBox[{"end", " ", "single", " ", "shel", " ", "options"}],
                   "*)"}], "\n", "\t\t\t\t", "]"}], ";", 
                RowBox[{"(*", 
                 RowBox[{"end", " ", "generate", " ", "grads"}], "*)"}], "\n",
                 "\t\t\t\t", "\n", "\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                 "covert", " ", "gradients", " ", "to", " ", "txt", " ", 
                  "and", " ", "find", " ", "optimal", " ", "order", " ", 
                  "dutycycle"}], "*)"}], "\n", "\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"mult", ":", 
                   RowBox[{"1", "-", 
                    RowBox[{"single", " ", "shell"}]}]}], ";", " ", 
                  RowBox[{"2", "-", 
                   RowBox[{"multi", " ", "shell"}]}], ";", " ", 
                  RowBox[{"3", "-", "cartesian"}], ";", 
                  RowBox[{"4", "-", "DWI"}]}], "*)"}], "\n", "\t\t\t\t", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "mult", ",", "\n", "\t\t\t\t\t", "1", ",", "\n", 
                  "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"outs", " ", "=", " ", 
                    RowBox[{"ConvertGrads", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"grads", ",", " ", 
                    RowBox[{"Length", "[", "bvall", "]"}]}], "]"}], ",", " ", 
                    "bvall", ",", " ", "bi"}], "]"}]}], ";", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{"orders", " ", "=", " ", 
                    RowBox[{"FindOrder", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"grads", ",", " ", 
                    RowBox[{"Length", "[", "bvall", "]"}]}], "]"}], ",", " ", 
                    "bvall"}], "]"}]}], ";"}], ",", "\n", "\t\t\t\t\t", "2", 
                  ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"outm", " ", "=", " ", 
                    RowBox[{"ConvertGrads", "[", 
                    RowBox[{"gradm", ",", " ", 
                    RowBox[{"bvals", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", " ", "nshels"}], "]"}], "]"}], ",", " ", 
                    "bi"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"orderm", " ", "=", " ", 
                    RowBox[{"FindOrder", "[", 
                    RowBox[{"gradm", ",", " ", 
                    RowBox[{"bvals", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", " ", "nshels"}], "]"}], "]"}]}], "]"}]}], 
                   ";"}], ",", "\n", "\t\t\t\t\t", "3", ",", "\n", 
                  "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"outc", " ", "=", " ", 
                    RowBox[{"ConvertGrads", "[", 
                    RowBox[{"gradc", ",", " ", 
                    RowBox[{"{", "bvalc", "}"}], ",", " ", "bi"}], "]"}]}], 
                   ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"orderc", " ", "=", " ", 
                    RowBox[{"FindOrder", "[", 
                    RowBox[{"gradc", ",", " ", "bvalc"}], "]"}]}], ";"}], ",",
                   "\n", "\t\t\t\t\t", "4", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"outd", " ", "=", " ", 
                    RowBox[{"ConvertGrads", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"gradd", ",", " ", 
                    RowBox[{"Length", "[", "bvald", "]"}]}], "]"}], ",", " ", 
                    "bvald", ",", " ", "bi"}], "]"}]}], ";", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"outd", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
                    RowBox[{"Join", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"typed", " ", "==", " ", "\"\<normal\>\""}], ",", 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"\"\< 1.00000    0.00000    0.00000       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.00000    1.00000    0.00000       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.00000    0.00000    1.00000       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t\t", "}"}], "\n", "\t\t\t\t\t\t\t", ",", 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"\"\<-0.70711   -0.50000    0.50000       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.70711   -0.50000    0.50000       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.00000    0.70711    0.70711       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t", "]"}], 
                    ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"\"\< 0.02704    0.79706    0.60330       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.09999   -0.59783    0.79536       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.23191   -0.77261    0.59101       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.52867   -0.79903    0.28646       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.18297   -0.98140    0.05818       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.86286    0.19578    0.46599       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.05126    0.20181    0.97808       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.66047    0.01890    0.75062       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.65426   -0.18818    0.73249       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.33052    0.11752    0.93646       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.95407   -0.14465    0.26236       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.14402   -0.86963    0.47224       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.78028   -0.56460    0.26904       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.75319   -0.31631    0.57675       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.41392   -0.31357    0.85460       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.56536    0.27275    0.77845       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.73743    0.58153    0.34354       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.29639   -0.44648    0.84428       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.38689    0.75986    0.52243       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.20081    0.52214    0.82888       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.79424   -0.60284    0.07593       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.98777    0.03678    0.15153       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.29973    0.90469    0.30281       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.95633    0.27860    0.08835       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.49976   -0.83556    0.22819       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.90574    0.41773    0.07170       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.77284    0.45698    0.44032       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.35339   -0.03796    0.93471       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.84918    0.07921    0.52213       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.50085    0.85590    0.12880       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.47526    0.67317    0.56654       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.87597   -0.32192    0.35923       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.64492    0.75075    0.14303       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.12687    0.96109    0.24536       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.60869   -0.54852    0.57325       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.03797   -0.21873    0.97505       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.47780   -0.64010    0.60165       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<-0.57319    0.42677    0.69952       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.18760   -0.96394    0.18874       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}], ",", " ", "\n",
                     "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\< 0.23342    0.50887    0.28591       \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"bi", ",", ".1"}], "]"}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ";",
                    "\n", "\t\t\t\t\t", 
                   RowBox[{"orderd", " ", "=", " ", 
                    RowBox[{"FindOrder", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"gradd", ",", " ", 
                    RowBox[{"Length", "[", "bvald", "]"}]}], "]"}], ",", " ", 
                    "bvald"}], "]"}]}], ";"}]}], "\n", "\t\t\t\t", "]"}], ";",
                 "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{"stop", " ", "gray", " ", "background"}], "*)"}], 
                "\n", "\t\t\t\t", 
                RowBox[{"Pause", "[", "0.1", "]"}], ";", "\n", "\t\t\t\t", 
                RowBox[{"running", " ", "=", " ", "False"}], ";", "\n", 
                "\t\t\t\t", 
                RowBox[{"app", " ", "=", " ", "White"}], ";"}], "\n", 
               "\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{"close", " ", "button"}], "*)"}], "\n", "\t\t\t", ",",
                " ", 
               RowBox[{"Method", " ", "->", " ", "\"\<Queued\>\""}], ",", " ", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"120", ",", " ", "23"}], "}"}]}]}], "]"}], ",", "\n",
              "\t\t\t", "\n", "\t\t\t", 
             RowBox[{"(*", 
              RowBox[{"output", " ", "buttens"}], "*)"}], "\n", "\t\t\t", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<clipboard\>\"", ",", " ", 
               RowBox[{"CopyToClipboard", "[", "out", "]"}], ",", " ", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"100", ",", " ", "23"}], "}"}]}]}], "]"}], ",", "\n",
              "\t\t\t", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<file\>\"", ",", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"file", " ", "=", " ", 
                 RowBox[{"SystemDialogInput", "[", 
                  RowBox[{
                  "\"\<FileSave\>\"", ",", " ", 
                   "\"\<dti_vectors_input.txt\>\""}], "]"}]}], ";", "\n", 
                "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", " ", 
                   RowBox[{"(", 
                    RowBox[{"file", " ", "===", " ", "$Canceled"}], ")"}]}], 
                  ",", " ", 
                  RowBox[{"Export", "[", 
                   RowBox[{
                   "file", ",", " ", "out", ",", " ", "\"\<Text\>\""}], 
                   "]"}]}], "]"}]}], ",", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"100", ",", " ", "23"}], "}"}]}], ",", " ", 
               RowBox[{"Method", " ", "->", " ", "\"\<Queued\>\""}]}], "\n", 
              "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"(*", "disclaimer", "*)"}], "\n", "\t\t", "Delimiter", ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Made by Martijn Froeling, Phd \\nm.froeling@umcutrecht.nl\>\
\"", ",", " ", 
              RowBox[{"{", 
               RowBox[{"Small", ",", " ", "Gray"}], "}"}]}], "]"}], "}"}], 
           "]"}], ",", "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "hidden", " ", "dynamic", " ", "local", " ", "variables"}], ",", 
            " ", 
            RowBox[{"using", " ", "now", " ", "control", " ", "type"}]}], 
           "*)"}], "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"points", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pointspl", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pointsc", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ppoints", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ppointspl", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mpoints", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gradd", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gradm", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"grads", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gradc", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"outd", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"outc", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"outm", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"outs", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"orderd", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"orderc", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"orderm", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"orders", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"out", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"file", ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"show", ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "2"}], "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"showc", ",", " ", "All"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"weight", ",", " ", "0.5"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"grid", ",", " ", "9"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gridf", ",", " ", "False"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"running", ",", " ", "False"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"app", ",", " ", "White"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"size", ",", " ", "430"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"inter", ",", " ", "True"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bi", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"random", ",", " ", "True"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sticks", ",", " ", "False"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mirror", ",", " ", "True"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"proj", ",", " ", "False"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"int", ",", " ", "10"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vel", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"part", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs1", ",", " ", "30"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs21", ",", " ", "15"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs22", ",", " ", "15"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs23", ",", " ", "15"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs24", ",", " ", "15"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs25", ",", " ", "15"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dirs26", ",", " ", "15"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bvald", ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "10", ",", " ", "20", ",", " ", "30", ",", " ", "40", ",", " ",
                 "60", ",", " ", "80", ",", " ", "100", ",", " ", "200", ",", 
                " ", "300", ",", " ", "500", ",", " ", "700", ",", " ", 
                "1000"}], "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bvall", ",", " ", 
              RowBox[{"{", "1000", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bvals", ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"1000", ",", " ", "6000", ",", " ", "1000"}], "]"}]}], 
             "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bvalc", ",", " ", "9000"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"dirs2", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"type", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"typed", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"sc", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"scc", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"shel", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nshels", ",", " ", "2"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"len", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"rlen", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rlenc", ",", " ", 
              RowBox[{"{", "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"charge", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"names", ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Set_Name\>\"", ",", " ", "\"\<Shells_Name\>\"", ",", " ", 
                "\"\<Grid_Name\>\"", ",", " ", "\"\<DWI_Name\>\""}], "}"}]}], 
             "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vp", ",", " ", 
              RowBox[{"{", 
               RowBox[{"1.3", ",", " ", 
                RowBox[{"-", "2.4"}], ",", " ", "2"}], "}"}]}], "}"}], ",", 
            " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"va", ",", " ", 
              RowBox[{"30.", " ", "Degree"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vv", ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}], 
            ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"charts", ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"viewvec", ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ctype", ",", " ", "1"}], "}"}], ",", " ", 
            RowBox[{"ControlType", " ", "->", " ", "None"}]}], "}"}], ",", 
          "\n", "\t\t", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"Manipulate", " ", "settings"}], "*)"}], "\n", "\t\t", 
          RowBox[{"ContentSize", " ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"450", ",", " ", "510"}], "}"}]}], ",", "\n", "\t\t", 
          RowBox[{"SaveDefinitions", " ", "->", " ", "True"}], ",", "\n", 
          "\t\t", 
          RowBox[{"ControlPlacement", " ", "->", " ", "Left"}], ",", "\n", 
          "\t\t", 
          RowBox[{"ContinuousAction", " ", "->", " ", "False"}], ",", "\n", 
          "\t\t", 
          RowBox[{"Initialization", " ", ":>", " ", 
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"bvall", " ", "=", " ", 
              RowBox[{"{", "1000", "}"}]}], ",", "\n", "\t\t\t", 
             RowBox[{"inter", " ", "=", " ", "True"}], ",", "\n", "\t\t\t", 
             RowBox[{"int", "=", "10"}], ",", "\n", "\t\t\t", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"MakeChart", "[", "type_", "]"}], " ", ":=", " ", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "ranX", ",", " ", "ranY", ",", " ", "coors", ",", " ", 
                  "lab"}], "}"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{"define", " ", "grid"}], "*)"}], "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"ranX", " ", "=", " ", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"-", "180"}], ",", " ", "180", ",", " ", "30"}], 
                   "]"}]}], ";", "\n", "\t\t\t\t", 
                 RowBox[{"ranY", " ", "=", " ", 
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"-", "90"}], ",", " ", "90", ",", " ", "10"}], 
                   "]"}]}], ";", "\n", "\t\t\t\t", 
                 RowBox[{"(*", 
                  RowBox[{"define", " ", "coordinate", " ", "system"}], 
                  "*)"}], "\n", "\t\t\t\t", 
                 RowBox[{"coors", " ", "=", " ", 
                  RowBox[{
                   RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"N", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"j", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"i", " ", "Degree"}], "]"}]}], ",", " ", 
                    RowBox[{"90", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"i", " ", "Degree"}], "]"}]}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "ranX"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "ranY"}], "}"}]}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"N", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "i"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "ranX"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "ranY"}], "}"}]}], "]"}]}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"N", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", 
                    RowBox[{"90", " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"i", " ", "Degree"}], "]"}]}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", " ", "ranX"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", "ranY"}], "}"}]}], "]"}]}]}], "\n",
                     "\t\t\t\t", "}"}], "[", 
                   RowBox[{"[", "type", "]"}], "]"}]}], ";", "\n", "\t\t\t\t", 
                 RowBox[{"lab", " ", "=", " ", 
                  RowBox[{
                   RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[Phi] Cos[\[Theta]] (\[Degree])\>\"", ",", " ", 
                    "\"\<\[Theta] Sin[\[Theta]] (\[Degree])\>\""}], "}"}], 
                    ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[Phi] \\(\[Degree])\>\"", ",", " ", 
                    "\"\<\[Theta] (\[Degree])\>\""}], "}"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[Phi] (\[Degree])\>\"", ",", " ", 
                    "\"\<\[Theta] Sin[\[Theta]] (\[Degree])\>\""}], "}"}]}], 
                    "\n", "\t\t\t\t", "}"}], "[", 
                   RowBox[{"[", "type", "]"}], "]"}]}], ";", "\n", "\t\t\t\t", 
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lighter", "@", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"Lighter", "@", "Gray"}]}]}], ",", " ", 
                    RowBox[{"Polygon", "@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"First", "@", "coors"}], ",", " ", 
                    RowBox[{"Reverse", "@", 
                    RowBox[{"Last", "@", "coors"}]}]}], "]"}]}]}], "}"}], ",",
                     "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lighter", "@", "Gray"}], ",", " ", 
                    RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], " ",
                     "/@", " ", "coors"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Lighter", "@", "Gray"}], ",", " ", 
                    RowBox[{"Line", "[", "#", "]"}]}], "}"}], " ", "&"}], " ",
                     "/@", " ", 
                    RowBox[{"Transpose", "[", "coors", "]"}]}]}], "\n", 
                    "\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
                   RowBox[{"AspectRatio", " ", "->", " ", ".8"}], ",", " ", 
                   RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
                   RowBox[{"PlotRange", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "185"}], ",", " ", "185"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "95"}], ",", " ", "95"}], "}"}]}], "}"}]}], 
                   ",", " ", 
                   RowBox[{"LabelStyle", " ", "->", " ", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "Bold", ",", " ", "Black", ",", " ", "Medium", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "->", " ", "\"\<Helvetica\>\""}]}], 
                    "}"}], "]"}]}], ",", " ", 
                   RowBox[{"Frame", " ", "->", " ", "True"}], ",", "\n", 
                   "\t\t\t\t", 
                   RowBox[{"FrameStyle", " ", "->", " ", "Thick"}], ",", " ", 
                   RowBox[{"Axes", " ", "->", " ", "True"}], ",", " ", 
                   RowBox[{"AxesStyle", " ", "->", " ", "Thick"}], ",", " ", 
                   RowBox[{"FrameTicks", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Round", "@", 
                    RowBox[{"coors", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", "All", ",", " ", "2"}], "]"}], 
                    "]"}]}], ",", " ", "ranY"}], "}"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", " ", ";;", " ", ";;", " ", "3"}], "]"}], 
                    "]"}], ")"}], ",", " ", "None"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"ranX", ",", " ", "None"}], "}"}]}], "}"}]}], ",",
                    " ", 
                   RowBox[{"FrameLabel", " ", "->", " ", "lab"}]}], "\n", 
                  "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "]"}]}], ",", "\n", 
             "\t\t\t", "\n", "\t\t\t", 
             RowBox[{"charts", " ", "=", " ", 
              RowBox[{"MakeChart", " ", "/@", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}]}], ",", 
             "\n", "\t\t\t", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"SpherePlot", "[", 
               RowBox[{"size_", ",", " ", "op_"}], "]"}], " ", ":=", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"size", " ", "==", " ", "0"}], " ", "||", " ", 
                 RowBox[{"size", " ", "==", " ", "0."}]}], ",", "\n", 
                "\t\t\t\t", 
                RowBox[{"Graphics3D", "[", 
                 RowBox[{
                  RowBox[{"{", "}"}], ",", " ", 
                  RowBox[{"Lighting", " ", "->", " ", "\"\<Neutral\>\""}], 
                  ",", "  ", 
                  RowBox[{"PlotRange", " ", "->", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}]}], "}"}]}],
                   ",", " ", 
                  RowBox[{"ViewPoint", " ", "->", " ", 
                   RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", " ", 
                  RowBox[{"ViewVertical", " ", "->", " ", 
                   RowBox[{"Dynamic", "[", "vv", "]"}]}], ",", "  ", 
                  RowBox[{"ViewAngle", " ", "->", " ", 
                   RowBox[{"Dynamic", "[", "va", "]"}]}], ",", " ", 
                  RowBox[{"SphericalRegion", " ", "->", " ", "True"}]}], 
                 "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"Graphics3D", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"White", ",", " ", 
                    RowBox[{"Opacity", "[", "op", "]"}], ",", " ", 
                    RowBox[{"Sphere", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
                    " ", 
                    RowBox[{"0.95", " ", "size"}]}], "]"}]}], "}"}], ",", " ", 
                  RowBox[{"Lighting", " ", "->", " ", "\"\<Neutral\>\""}], 
                  ",", " ", 
                  RowBox[{"PlotRange", " ", "->", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1"}], ",", " ", "1.1"}], "}"}]}], "}"}]}],
                   ",", " ", 
                  RowBox[{"ViewPoint", " ", "->", " ", 
                   RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", " ", 
                  RowBox[{"ViewVertical", " ", "->", " ", 
                   RowBox[{"Dynamic", "[", "vv", "]"}]}], ",", "  ", 
                  RowBox[{"ViewAngle", " ", "->", " ", 
                   RowBox[{"Dynamic", "[", "va", "]"}]}], ",", " ", 
                  RowBox[{"SphericalRegion", " ", "->", " ", "True"}]}], 
                 "]"}]}], "\n", "\t\t\t", "]"}]}], ",", "\n", "\t\t\t", "\n", 
             "\t\t\t", 
             RowBox[{
              RowBox[{"PlotChartPoints", "[", 
               RowBox[{"grad_", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"mirr_", ",", " ", "col_"}], "}"}]}], "]"}], " ", ":=",
               " ", 
              RowBox[{"Block", "[", 
               RowBox[{
                RowBox[{"{", "style", "}"}], ",", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"style", " ", "=", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"ListQ", "[", "col", "]"}], ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{"#", ",", " ", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], " ", 
                    "&"}], " ", "/@", " ", "col"}], ")"}], ",", " ", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"col", ",", " ", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}], 
                   "]"}]}], ";", "\n", "\t\t\t\t", 
                 RowBox[{"Show", "[", "\n", "\t\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"grad", " ", "===", " ", 
                    RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "if", " ", "no", " ", "gr", " ", "then", " ", "only", " ",
                     "chart"}], "*)"}], "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Graphics", "[", "]"}], ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Show", "[", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"plot", " ", "the", " ", "gradients"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ArrayDepth", "[", "grad", "]"}], " ", "==", " ", 
                    "2"}], ",", " ", 
                    RowBox[{"CalcPolarPts", "[", 
                    RowBox[{"grad", ",", " ", "ctype", ",", " ", "viewvec"}], 
                    "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CalcPolarPts", "[", 
                    RowBox[{"#", ",", " ", "ctype", ",", " ", "viewvec"}], 
                    "]"}], " ", "&"}], " ", "/@", " ", "grad"}]}], "]"}], ",",
                     " ", 
                    RowBox[{"PlotStyle", " ", "->", " ", "style"}]}], "]"}], 
                    ",", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    "plot", " ", "the", " ", "mirrored", " ", "gradients"}], 
                    "*)"}], "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", " ", "mirr"}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"Graphics", "[", "]"}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ArrayDepth", "[", "grad", "]"}], " ", "==", " ", 
                    "2"}], ",", " ", 
                    RowBox[{"CalcPolarPts", "[", 
                    RowBox[{
                    RowBox[{"-", "grad"}], ",", " ", "ctype", ",", " ", 
                    "viewvec"}], "]"}], ",", " ", 
                    RowBox[{"CalcPolarPts", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"grad", ",", " ", "1"}], "]"}]}], ",", " ", 
                    "ctype", ",", " ", "viewvec"}], "]"}]}], "]"}], ",", " ", 
                    RowBox[{"PlotStyle", " ", "->", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Darker", "@", "Gray"}], ",", " ", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}]}], 
                    "]"}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}], "\n", 
                    "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}], "\n", 
                  "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "]"}]}]}], "\n", 
            "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{"AppearanceElements", " ", "->", " ", "None"}], ",", "\n", 
          "\t\t", 
          RowBox[{"AutorunSequencing", " ", "->", " ", 
           RowBox[{"{", "1", "}"}]}], ",", "\n", "\t\t", 
          RowBox[{"SynchronousInitialization", "->", "False"}]}], "\n", "\t", 
         "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"NotebookClose", "[", "gradwindow", "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{"popup", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"gradwindow", " ", "=", " ", 
           RowBox[{"CreateWindow", "[", 
            RowBox[{"DialogNotebook", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"CancelButton", "[", 
                 RowBox[{"\"\<Close\>\"", ",", " ", 
                  RowBox[{"DialogReturn", "[", "]"}]}], "]"}], ",", "pan"}], 
               "}"}], ",", 
              RowBox[{"WindowSize", "->", "All"}], ",", " ", 
              RowBox[{"WindowTitle", "->", "\"\<Generate gradients\>\""}]}], 
             "]"}], "]"}]}], ";"}], ",", "\n", "\t\t", "pan"}], "\n", "\t", 
        "]"}]}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"GenerateGradientsGUI", "[", "False", "]"}]}]}]], "Code",
 InitializationCell->False,
 CellLabel->"In[45]:=",ExpressionUUID->"5a645248-50a7-4d7c-8842-c85a0bce676e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`app$$ = GrayLevel[1], $CellContext`bi$$ = 
    0, $CellContext`bvalc$$ = 9000, $CellContext`bvald$$ = {10, 20, 30, 40, 
    60, 80, 100, 200, 300, 500, 700, 1000}, $CellContext`bvall$$ = {
    1000}, $CellContext`bvals$$ = {1000, 2000, 3000, 4000, 5000, 
    6000}, $CellContext`charge$$ = Null, $CellContext`charts$$ = {
     Graphics[{{
        RGBColor[0.8518518518518519, 0.8518518518518519, 0.8518518518518519], 
        Polygon[CompressedData["
1:eJxlUc0KAVEYnbyDlIWoabLzAuKbjZWmECspNBIL6ykNrzLlFZTlt1AjVl6B
DeUhUOebctyabnfu+c7frUxW3TDnOI73+b77z9oONCqKv/ebqum5FFcHei3f
7u4p0EOaeInbV8M98qNlsO5pYbO7PF9DnR+jeFHvYB/jfxu4KeZa4AnB24DO
DLo14GZqluheaF6IX0hfyJ+Qf6F8QvmF+vk7Ay+GB58Yn+FMD37E/MCvmF/k
EcuDvGJ50YdYH+gr80X3SvNK/Er6Sv6U/CvlU8qfvZv1/AYmsupg
         "]]}, {{
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg5USjk4bnW0P3Dg+Cm5Oo2wAxcVHj1WOeF3
YMfxhWoLVUIPwNS9EI3L9qsJPiBev+T0yzcxBzKOVNZl2QRC6USouA9UXTJU
nxvUnFSouXZQe9Kg9upD1aUdgDkJTd4BTb8DmvkOaPY7oLnPAc39Dmj+c0Dz
vwNa+DgAAGfNekc=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg6kZm/lFuexOnDg+Cm5Oo2wA8zHJmacXOZ5
YMfxhWoLVUIPgNUdCDrwQjQu268m+MDLzLgrh6QiDmQcqazLsgk8wPzp1CW2
XTEHxOuXnH75xufAmz3KLG9sEiD6GtwO5Knd8Wqbl3jgosKjxyon7A6ULgs+
IlyedKBSysFxq6M+1PykAzAnock7oOl3QDPfAc1+BzT3OaC53wHNfw5o/ndA
Cx8HAKUAeQ0=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg4E7NG6VnHN5MCB46fk6jTCDphlO77NbXU5
sOP4QrWFKqEHIAr9DrwQjcv2qwk+sCtE4u5sj+ADGUcq67JsAg+YRi9aYfE7
7IB4/ZLTL9/4HLh//JKl8O9IiL4GtwNeXLr3rhnEHLio8Oixygm7A2FcOy8H
dcceqJRycNzqqA81P+4AzElo8g5o+h3QzHdAs98BzX0OaO53QPOfA5r/HdDC
xwEACXJ4HQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg5USjk4bnXUP3Dg+Cm5Oo2wAxcVHj1WOWF3
YMfxhWoLVUIPQNS5HXghGpftVxN8QLx+yemXb3wOZByprMuyCYTTMHGYOpg+
mDkwc2H2wOyFuQPmJDR5BzT9DmjmO6DZ74DmPgc09zug+c8Bzf8OaOHjAADE
Hnk3
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg4E7NG6VnFN5cCB46fk6jTCDphlO77NbTU5
sOP4QrWFKqEHIArtDrwQjcv2qwk+sCtE4u5sD+cDGUcq67JsAg+YRi9aYfHb
7YB4/ZLTL9/4HLh//JKl8G9PiL4GtwNeXLr3rhn4HLio8Oixygm7A2FcOy8H
dfseqJRycNzqqA813+8AzElo8g5o+h3QzHdAs98BzX0OaO53QPOfA5r/HdDC
xwEAZcN3DQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg4E7NG6VnFN5MCB46fk6jTCDphlO77NbVU5
sOP4QrWFKqEHIAr1DrwQjcv2qwk+sCtE4u5sD+MDGUcq67JsAg+YRi9aYfHb
7IB4/ZLTL9/4HLh//JKl8G9LiL4GtwNeXLr3rhnYHLio8Oixygm7A2FcOy8H
ddseqJRycNzqqA813+4AzElo8g5o+h3QzHdAs98BzX0OaO53QPOfA5r/HdDC
xwEAwhR1/Q==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg7AmAeOn5Kr00DwdxxfqLZQJRTOfyEal+1X
EwznZxyprMuyCYTzxeuXnH75xgfOh5jvBudfVHj0WOWEHZxfKeXguNVRH1U9
EoDKO6Dpd0BR1OAG50Pth/Oh7oPzoe6H86H+g/Oh/kczP8wBAGXpPAc=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg4E7NG6VnFNxOHA8VNydRphB8yyHd/mtqo4
7Di+UG2hSugBiEI9hxeicdl+NcEHdoVI3J3tYeyQcaSyLssm8IBp9KIVFr/N
HMTrl5x++cbnwP3jlyyFf1s6QMx3O+DFpXvvmoGNw0WFR49VTtgdCOPaeTmo
29ahUsrBcaujPtR8OweYk9DkHdD0O6CZ74BmvwOa+xzQ3O+A5j8HNP/D3QEN
HwcArUltfQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg4E7NG6VnFNxeHA8VNydRphB8yyHd/mtpo4
7Di+UG2hSugBiEI7hxeicdl+NcEHdoVI3J3t4eyQcaSyLssm8IBp9KIVFr/d
HMTrl5x++cbnwP3jlyyFf3s6QMx3O+DFpXvvmoGPw0WFR49VTtgdCOPaeTmo
29ehUsrBcaujPtR8PweYk9DkHdD0O6CZ74BmvwOa+xzQ3O+A5j8HNP/D3QEN
HwcAUPhujQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg5USjk4bnXUdzhw/JRcnUbYgYsKjx6rnLBz
2HF8odpCldADEHVuDi9E47L9aoIPiNcvOf3yjY9DxpHKuiybwANQ2gEqfgCq
zgGq7wDUHAeouQeg9jhA7YWaH+YAcxKavAOafgc08x3Q7HdAc58Dmvsd0Pzn
gOZ/uDtg7gIAr1Nwtw==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg4E7NG6VnHNxOHA8VNydRphB8yyHd/mtro4
7Di+UG2hSugBiEI/hxeicdl+NcEHdoVI3J3tEeyQcaSyLssm8IBp9KIVFr/D
HMTrl5x++cbnwP3jlyyFf0c6QMx3O+DFpXvvmkGMw0WFR49VTtgdCOPaeTmo
O9ahUsrBcaujPtT8OAeYk9DkHdD0O6CZ74BmvwOa+xzQ3O+A5j8HNP/D3QEN
HwcA9JhvnQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg6kZm/lFuexcjhw/JRcnUbYAeZjEzNOLvN0
2HF8odpCldADYHUHghxeiMZl+9UEH3iZGXflkFSEQ8aRyrosm8ADzJ9OXWLb
FeMgXr/k9Ms3Pgfe7FFmeWOT4AAx3+1Antodr7Z5iQ4XFR49Vjlhd6B0WfAR
4fIkh0opB8etjvpQ85McYE5Ck3dA0++AZr4Dmv0OaO5zQHO/A5r/HND8D3cH
NHwcAJA1cI0=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg5USjk4bnW0dzhw/JRcnUbYgYsKjx6rnPBz
2HF8odpCldADUHUOL0Tjsv1qgg+I1y85/fJNjEPGkcq6LJvAAxA60QEi7nMA
oi7ZAaLP7QDEnFQHiLl2ByD2pDlA7NWHmp/mAHMSmrwDmn4HNPMd0Ox3QHOf
A5r7HdD854Dmf7g7YPoAUwJxxw==
          "]]}}, {{
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{0., -90.}, {0., -90.}, {0., -90.}, {0., -90.}, {0., -90.}, {
          0., -90.}, {0., -90.}, {0., -90.}, {0., -90.}, {0., -90.}, {
          0., -90.}, {0., -90.}, {0., -90.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-31.25667198004746, -88.63269777109872}, {-26.04722665003955, \
-88.63269777109872}, {-20.837781320031638`, -88.63269777109872}, \
{-15.62833599002373, -88.63269777109872}, {-10.418890660015819`, \
-88.63269777109872}, {-5.2094453300079095`, -88.63269777109872}, {
          0., -88.63269777109872}, {
          5.2094453300079095`, -88.63269777109872}, {
          10.418890660015819`, -88.63269777109872}, {
          15.62833599002373, -88.63269777109872}, {
          20.837781320031638`, -88.63269777109872}, {
          26.04722665003955, -88.63269777109872}, {
          31.25667198004746, -88.63269777109872}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-61.56362579862037, -84.57233587073176}, \
{-51.303021498850306`, -84.57233587073176}, {-41.04241719908025, \
-84.57233587073176}, {-30.781812899310186`, -84.57233587073176}, \
{-20.521208599540124`, -84.57233587073176}, {-10.260604299770062`, \
-84.57233587073176}, {0., -84.57233587073176}, {
          10.260604299770062`, -84.57233587073176}, {
          20.521208599540124`, -84.57233587073176}, {
          30.781812899310186`, -84.57233587073176}, {
          41.04241719908025, -84.57233587073176}, {
          51.303021498850306`, -84.57233587073176}, {
          61.56362579862037, -84.57233587073176}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-90., -77.94228634059948}, {-75., -77.94228634059948}, {-60., \
-77.94228634059948}, {-45., -77.94228634059948}, {-30., -77.94228634059948}, \
{-15., -77.94228634059948}, {0., -77.94228634059948}, {
          15., -77.94228634059948}, {30., -77.94228634059948}, {
          45., -77.94228634059948}, {60., -77.94228634059948}, {
          75., -77.94228634059948}, {90., -77.94228634059948}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-115.70176974357706`, -68.94399988070802}, \
{-96.41814145298089, -68.94399988070802}, {-77.1345131623847, \
-68.94399988070802}, {-57.85088487178853, -68.94399988070802}, \
{-38.56725658119235, -68.94399988070802}, {-19.283628290596177`, \
-68.94399988070802}, {0., -68.94399988070802}, {
          19.283628290596177`, -68.94399988070802}, {
          38.56725658119235, -68.94399988070802}, {
          57.85088487178853, -68.94399988070802}, {
          77.1345131623847, -68.94399988070802}, {
          96.41814145298089, -68.94399988070802}, {
          115.70176974357706`, -68.94399988070802}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-137.88799976141604`, -57.85088487178853}, \
{-114.9066664678467, -57.85088487178853}, {-91.92533317427736, \
-57.85088487178853}, {-68.94399988070802, -57.85088487178853}, \
{-45.96266658713868, -57.85088487178853}, {-22.98133329356934, \
-57.85088487178853}, {0., -57.85088487178853}, {
          22.98133329356934, -57.85088487178853}, {
          45.96266658713868, -57.85088487178853}, {
          68.94399988070802, -57.85088487178853}, {
          91.92533317427736, -57.85088487178853}, {
          114.9066664678467, -57.85088487178853}, {
          137.88799976141604`, -57.85088487178853}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-155.88457268119896`, -45.}, {-129.9038105676658, -45.}, \
{-103.92304845413263`, -45.}, {-77.94228634059948, -45.}, \
{-51.96152422706631, -45.}, {-25.980762113533157`, -45.}, {0., -45.}, {
          25.980762113533157`, -45.}, {51.96152422706631, -45.}, {
          77.94228634059948, -45.}, {103.92304845413263`, -45.}, {
          129.9038105676658, -45.}, {155.88457268119896`, -45.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-169.14467174146353`, -30.781812899310186`}, \
{-140.95389311788625`, -30.781812899310186`}, {-112.76311449430901`, \
-30.781812899310186`}, {-84.57233587073176, -30.781812899310186`}, \
{-56.381557247154504`, -30.781812899310186`}, {-28.190778623577252`, \
-30.781812899310186`}, {0., -30.781812899310186`}, {
          28.190778623577252`, -30.781812899310186`}, {
          56.381557247154504`, -30.781812899310186`}, {
          84.57233587073176, -30.781812899310186`}, {
          112.76311449430901`, -30.781812899310186`}, {
          140.95389311788625`, -30.781812899310186`}, {
          169.14467174146353`, -30.781812899310186`}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-177.26539554219744`, -15.62833599002373}, \
{-147.7211629518312, -15.62833599002373}, {-118.17693036146497`, \
-15.62833599002373}, {-88.63269777109872, -15.62833599002373}, \
{-59.088465180732484`, -15.62833599002373}, {-29.544232590366242`, \
-15.62833599002373}, {0., -15.62833599002373}, {
          29.544232590366242`, -15.62833599002373}, {
          59.088465180732484`, -15.62833599002373}, {
          88.63269777109872, -15.62833599002373}, {
          118.17693036146497`, -15.62833599002373}, {
          147.7211629518312, -15.62833599002373}, {
          177.26539554219744`, -15.62833599002373}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 0.}, {-150., 0.}, {-120., 0.}, {-90., 0.}, {-60., 
          0.}, {-30., 0.}, {0., 0.}, {30., 0.}, {60., 0.}, {90., 0.}, {120., 
          0.}, {150., 0.}, {180., 0.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-177.26539554219744`, 15.62833599002373}, {-147.7211629518312,
           15.62833599002373}, {-118.17693036146497`, 
          15.62833599002373}, {-88.63269777109872, 
          15.62833599002373}, {-59.088465180732484`, 
          15.62833599002373}, {-29.544232590366242`, 15.62833599002373}, {0., 
          15.62833599002373}, {29.544232590366242`, 15.62833599002373}, {
          59.088465180732484`, 15.62833599002373}, {88.63269777109872, 
          15.62833599002373}, {118.17693036146497`, 15.62833599002373}, {
          147.7211629518312, 15.62833599002373}, {177.26539554219744`, 
          15.62833599002373}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-169.14467174146353`, 
          30.781812899310186`}, {-140.95389311788625`, 
          30.781812899310186`}, {-112.76311449430901`, 
          30.781812899310186`}, {-84.57233587073176, 
          30.781812899310186`}, {-56.381557247154504`, 
          30.781812899310186`}, {-28.190778623577252`, 30.781812899310186`}, {
          0., 30.781812899310186`}, {28.190778623577252`, 
          30.781812899310186`}, {56.381557247154504`, 30.781812899310186`}, {
          84.57233587073176, 30.781812899310186`}, {112.76311449430901`, 
          30.781812899310186`}, {140.95389311788625`, 30.781812899310186`}, {
          169.14467174146353`, 30.781812899310186`}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-155.88457268119896`, 45.}, {-129.9038105676658, 
          45.}, {-103.92304845413263`, 45.}, {-77.94228634059948, 
          45.}, {-51.96152422706631, 45.}, {-25.980762113533157`, 45.}, {0., 
          45.}, {25.980762113533157`, 45.}, {51.96152422706631, 45.}, {
          77.94228634059948, 45.}, {103.92304845413263`, 45.}, {
          129.9038105676658, 45.}, {155.88457268119896`, 45.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-137.88799976141604`, 57.85088487178853}, {-114.9066664678467,
           57.85088487178853}, {-91.92533317427736, 
          57.85088487178853}, {-68.94399988070802, 
          57.85088487178853}, {-45.96266658713868, 
          57.85088487178853}, {-22.98133329356934, 57.85088487178853}, {0., 
          57.85088487178853}, {22.98133329356934, 57.85088487178853}, {
          45.96266658713868, 57.85088487178853}, {68.94399988070802, 
          57.85088487178853}, {91.92533317427736, 57.85088487178853}, {
          114.9066664678467, 57.85088487178853}, {137.88799976141604`, 
          57.85088487178853}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-115.70176974357706`, 68.94399988070802}, {-96.41814145298089,
           68.94399988070802}, {-77.1345131623847, 
          68.94399988070802}, {-57.85088487178853, 
          68.94399988070802}, {-38.56725658119235, 
          68.94399988070802}, {-19.283628290596177`, 68.94399988070802}, {0., 
          68.94399988070802}, {19.283628290596177`, 68.94399988070802}, {
          38.56725658119235, 68.94399988070802}, {57.85088487178853, 
          68.94399988070802}, {77.1345131623847, 68.94399988070802}, {
          96.41814145298089, 68.94399988070802}, {115.70176974357706`, 
          68.94399988070802}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-90., 77.94228634059948}, {-75., 77.94228634059948}, {-60., 
          77.94228634059948}, {-45., 77.94228634059948}, {-30., 
          77.94228634059948}, {-15., 77.94228634059948}, {0., 
          77.94228634059948}, {15., 77.94228634059948}, {30., 
          77.94228634059948}, {45., 77.94228634059948}, {60., 
          77.94228634059948}, {75., 77.94228634059948}, {90., 
          77.94228634059948}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-61.56362579862037, 84.57233587073176}, {-51.303021498850306`,
           84.57233587073176}, {-41.04241719908025, 
          84.57233587073176}, {-30.781812899310186`, 
          84.57233587073176}, {-20.521208599540124`, 
          84.57233587073176}, {-10.260604299770062`, 84.57233587073176}, {0., 
          84.57233587073176}, {10.260604299770062`, 84.57233587073176}, {
          20.521208599540124`, 84.57233587073176}, {30.781812899310186`, 
          84.57233587073176}, {41.04241719908025, 84.57233587073176}, {
          51.303021498850306`, 84.57233587073176}, {61.56362579862037, 
          84.57233587073176}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-31.25667198004746, 88.63269777109872}, {-26.04722665003955, 
          88.63269777109872}, {-20.837781320031638`, 
          88.63269777109872}, {-15.62833599002373, 
          88.63269777109872}, {-10.418890660015819`, 
          88.63269777109872}, {-5.2094453300079095`, 88.63269777109872}, {0., 
          88.63269777109872}, {5.2094453300079095`, 88.63269777109872}, {
          10.418890660015819`, 88.63269777109872}, {15.62833599002373, 
          88.63269777109872}, {20.837781320031638`, 88.63269777109872}, {
          26.04722665003955, 88.63269777109872}, {31.25667198004746, 
          88.63269777109872}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{0., 90.}, {0., 90.}, {0., 90.}, {0., 90.}, {0., 90.}, {0., 
          90.}, {0., 90.}, {0., 90.}, {0., 90.}, {0., 90.}, {0., 90.}, {0., 
          90.}, {0., 90.}}]}}}, AspectRatio -> 0.8, ImageSize -> 400, 
      PlotRange -> {{-185, 185}, {-95, 95}}, LabelStyle -> Directive[{Bold, 
         GrayLevel[0], Medium, FontFamily -> "Helvetica"}], Frame -> True, 
      FrameStyle -> Thickness[Large], Axes -> True, AxesStyle -> 
      Thickness[Large], 
      FrameTicks -> {{{{-90, -90}, {-78, -60}, {-45, -30}, {0, 0}, {45, 30}, {
         78, 60}, {90, 90}}, None}, {{-180, -150, -120, -90, -60, -30, 0, 30, 
         60, 90, 120, 150, 180}, None}}, 
      FrameLabel -> {
       "\[Phi] Cos[\[Theta]] (\[Degree])", 
        "\[Theta] Sin[\[Theta]] (\[Degree])"}], 
     Graphics[{{
        RGBColor[0.8518518518518519, 0.8518518518518519, 0.8518518518518519], 
        Polygon[CompressedData["
1:eJxt0k0KwyAQhuGhNwlITpC1zMKNGyFFPECg3eYKHm2OljSxiC8ZEHn4/BnB
advfn5eIzOf4zVfVr91zscGSR9cVeYIjHGAPL7CD0Z84xX7YwwGOcBpdV+QZ
eflbH93XK85T3KfoR9Gv4j3NC+zgVj037Ic9HOAIp9H9P7Q8Iy92AHWqVqg=

         "]]}, {{
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNaQcgdNgBFD5DCCq/IRBN3g+N74nGd0Hj26Hx
TdD4Kmh8NPcxqDig6Ufj26HxXdD4nmh8P1R+QyCafAiafJgDAGz9MOs=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYHkg6A6YawAyh8hhBUfkMgmrwfGt8Tje+CxrdD
45ug8VXQ+GjuY1BxQNOPxrdD47ug8T3R+H6o/IZANPkQNPkwBwAfsjVf
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFxB8BUQ9gBFD5DCCq/IRBN3g+N74nGd0Hj26Hx
TdD4Kmh8NPcxqDig6Ufj26HxXdD4nmh8P1R+QyCafAiafJgDAFCzJtM=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNYQew0gwhaOKBaPJ+aHxPNL4LGt8OjW+CxldB
46O5j0HFAU0/Gt8Oje+CxvdE4/uh8hsC0eRD0OTDHAC2Di+7
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF+B8BUQ9gBFD5DCCq/IRBNHp32ROO7oPHt0Pgm
aHwVND6a+xhUHND0o/Ht0PguaHxPNL4fKr8hEE0+BE0+zAEAmcQlow==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF2B8BUQ9gBFD5DCCq/IRBN3g+N74nGd0Hjo9Mm
aHwVND6a+xhUHND0o/Ht0PguaHxPNL4fKr8hEE0+BE0+zAEA4tUkcw==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg6gCoSg8hsC0eT90PieaHwXNL4dGt8Eja+C
xkcHKg5o+tH4dmh8FzS+JxrfD5XfEIgmH4ImH+YAAJlMEZk=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF2DmCqIewACp8hBJXfEIgm74fG90Tju6Dx7dD4
Jmh8FTQ+mvsYVBxQ+SZofHTaBY3vicb3Q+U3BKLJh6DJhzkAADUKGvM=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF+DmCqIewACp8hBJXfEIgm74fG90Tju6Dx7dD4
Jmh8FTQ+mvsYVBxQ+SZofDs0vgsa3xONj0Y3BKKJh6DJhzkAAOvqHCM=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNYQ5Q+gAKnyEEld8QiCbvh8b3ROO7oPHt0Pgm
aHwVND6a+xhUHFD5Jmh8OzS+CxrfE43vh8pvCESTD0GTD3MAAAhDJjs=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFxDmCqIewACp8hBJXfEIgm74fG90Tju6Dx7dD4
Jmh8FTQ+mvsYVBzQ9KPx7dD4Lmh8TzS+Hyq/IRBNPgRNPswBAKLZHVM=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYHkhzAdEPYARQ+QwgqvyEQTd4Pje+JxndB49uh
8U3Q+CpofDT3Mag4oOlH49uh8V3Q+J5ofD9UfkMgmnwImnyYAwBx2Cvf
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNaQ4QOuwACp8hBJXfEIgm74fG90Tju6Dx7dD4
Jmh8FTQ+mvsYVBzQ9KPx7dD4Lmh8TzS+Hyq/IRBNPgRNPswBAL8jJ2s=
          "]]}}, {{
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -90.}, {-150., -90.}, {-120., -90.}, {-90., -90.}, \
{-60., -90.}, {-30., -90.}, {0., -90.}, {30., -90.}, {60., -90.}, {
          90., -90.}, {120., -90.}, {150., -90.}, {180., -90.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -80.}, {-150., -80.}, {-120., -80.}, {-90., -80.}, \
{-60., -80.}, {-30., -80.}, {0., -80.}, {30., -80.}, {60., -80.}, {
          90., -80.}, {120., -80.}, {150., -80.}, {180., -80.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -70.}, {-150., -70.}, {-120., -70.}, {-90., -70.}, \
{-60., -70.}, {-30., -70.}, {0., -70.}, {30., -70.}, {60., -70.}, {
          90., -70.}, {120., -70.}, {150., -70.}, {180., -70.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -60.}, {-150., -60.}, {-120., -60.}, {-90., -60.}, \
{-60., -60.}, {-30., -60.}, {0., -60.}, {30., -60.}, {60., -60.}, {
          90., -60.}, {120., -60.}, {150., -60.}, {180., -60.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -50.}, {-150., -50.}, {-120., -50.}, {-90., -50.}, \
{-60., -50.}, {-30., -50.}, {0., -50.}, {30., -50.}, {60., -50.}, {
          90., -50.}, {120., -50.}, {150., -50.}, {180., -50.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -40.}, {-150., -40.}, {-120., -40.}, {-90., -40.}, \
{-60., -40.}, {-30., -40.}, {0., -40.}, {30., -40.}, {60., -40.}, {
          90., -40.}, {120., -40.}, {150., -40.}, {180., -40.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -30.}, {-150., -30.}, {-120., -30.}, {-90., -30.}, \
{-60., -30.}, {-30., -30.}, {0., -30.}, {30., -30.}, {60., -30.}, {
          90., -30.}, {120., -30.}, {150., -30.}, {180., -30.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -20.}, {-150., -20.}, {-120., -20.}, {-90., -20.}, \
{-60., -20.}, {-30., -20.}, {0., -20.}, {30., -20.}, {60., -20.}, {
          90., -20.}, {120., -20.}, {150., -20.}, {180., -20.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -10.}, {-150., -10.}, {-120., -10.}, {-90., -10.}, \
{-60., -10.}, {-30., -10.}, {0., -10.}, {30., -10.}, {60., -10.}, {
          90., -10.}, {120., -10.}, {150., -10.}, {180., -10.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 0.}, {-150., 0.}, {-120., 0.}, {-90., 0.}, {-60., 
          0.}, {-30., 0.}, {0., 0.}, {30., 0.}, {60., 0.}, {90., 0.}, {120., 
          0.}, {150., 0.}, {180., 0.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 10.}, {-150., 10.}, {-120., 10.}, {-90., 10.}, {-60., 
          10.}, {-30., 10.}, {0., 10.}, {30., 10.}, {60., 10.}, {90., 10.}, {
          120., 10.}, {150., 10.}, {180., 10.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 20.}, {-150., 20.}, {-120., 20.}, {-90., 20.}, {-60., 
          20.}, {-30., 20.}, {0., 20.}, {30., 20.}, {60., 20.}, {90., 20.}, {
          120., 20.}, {150., 20.}, {180., 20.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 30.}, {-150., 30.}, {-120., 30.}, {-90., 30.}, {-60., 
          30.}, {-30., 30.}, {0., 30.}, {30., 30.}, {60., 30.}, {90., 30.}, {
          120., 30.}, {150., 30.}, {180., 30.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 40.}, {-150., 40.}, {-120., 40.}, {-90., 40.}, {-60., 
          40.}, {-30., 40.}, {0., 40.}, {30., 40.}, {60., 40.}, {90., 40.}, {
          120., 40.}, {150., 40.}, {180., 40.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 50.}, {-150., 50.}, {-120., 50.}, {-90., 50.}, {-60., 
          50.}, {-30., 50.}, {0., 50.}, {30., 50.}, {60., 50.}, {90., 50.}, {
          120., 50.}, {150., 50.}, {180., 50.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 60.}, {-150., 60.}, {-120., 60.}, {-90., 60.}, {-60., 
          60.}, {-30., 60.}, {0., 60.}, {30., 60.}, {60., 60.}, {90., 60.}, {
          120., 60.}, {150., 60.}, {180., 60.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 70.}, {-150., 70.}, {-120., 70.}, {-90., 70.}, {-60., 
          70.}, {-30., 70.}, {0., 70.}, {30., 70.}, {60., 70.}, {90., 70.}, {
          120., 70.}, {150., 70.}, {180., 70.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 80.}, {-150., 80.}, {-120., 80.}, {-90., 80.}, {-60., 
          80.}, {-30., 80.}, {0., 80.}, {30., 80.}, {60., 80.}, {90., 80.}, {
          120., 80.}, {150., 80.}, {180., 80.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 90.}, {-150., 90.}, {-120., 90.}, {-90., 90.}, {-60., 
          90.}, {-30., 90.}, {0., 90.}, {30., 90.}, {60., 90.}, {90., 90.}, {
          120., 90.}, {150., 90.}, {180., 90.}}]}}}, AspectRatio -> 0.8, 
      ImageSize -> 400, PlotRange -> {{-185, 185}, {-95, 95}}, LabelStyle -> 
      Directive[{Bold, 
         GrayLevel[0], Medium, FontFamily -> "Helvetica"}], Frame -> True, 
      FrameStyle -> Thickness[Large], Axes -> True, AxesStyle -> 
      Thickness[Large], 
      FrameTicks -> {{{{-90, -90}, {-60, -60}, {-30, -30}, {0, 0}, {30, 30}, {
         60, 60}, {90, 90}}, None}, {{-180, -150, -120, -90, -60, -30, 0, 30, 
         60, 90, 120, 150, 180}, None}}, 
      FrameLabel -> {"\[Phi] \(\[Degree])", "\[Theta] (\[Degree])"}], 
     Graphics[{{
        RGBColor[0.8518518518518519, 0.8518518518518519, 0.8518518518518519], 
        Polygon[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQYNaQcgdNgBGP/A8VNydRoI/o7jC9UWqoTC+S9E
47L9aoLh/IwjlXVZNoFwvnj9ktMv3/gcQDXfDc6/qPDoscoJOzi/UsrBcauj
Pqp6JPdB5R3Q9DugqG9wg/Oh9sP5UPfB+VD3w/lQ/8H5UP+jmQ/nO6Dz0dQ7
oJnngGafA5p7HNDc64DmHwc0/zqghYcDWng5oIWnA1p4w8yH89HiywEtPh3Q
4tsBLT04oKUXWPgcAAB0cquE
         "]]}, {{
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNaQcgdNgBGP/A8VNydRoI/o7jC9UWqoTC+S9E
47L9aoLh/IwjlXVZNoFwvnj9ktMv3/gcQDXfDc6/qPDoscoJOzi/UsrBcauj
Pqp6JPdB5R3Q9DugqG9wg/Oh9sP5UPfB+VD3w/lQ/8H5UP+jmR/mAAA5mltZ

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYHkg6A6YawAzD+geOn5Oo0EPwdxxeqLVQJhfNf
iMZl+9UEw/kZRyrrsmwC4Xzx+iWnX77xOYBqvhucf1Hh0WOVE3ZwfqWUg+NW
R31U9Ujug8o7oOl3QFHf4AbnQ+2H86Hug/Oh7ofzof6D86H+RzM/zAEA7EBf
zQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFxB8BUQ9gBGP/A8VNydRoI/o7jC9UWqoTC+S9E
47L9aoLh/IwjlXVZNoFwvnj9ktMv3/jA+RDz3eD8iwqPHqucsIPzK6UcHLc6
6qOqR3IfVN4BTb8DivoGNzgfaj+cD3UfnA91P5wP9R+cD/U/mvlhDgAdUFFB

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNYQfQ6QPHT8nVaSD4O44vVFuoEgrnvxCNy/ar
CYbzM45U1mXZBML54vVLTr9844Nmrhucf1Hh0WOVE3ZwfqWUg+NWR31U9Uju
g8o7oOl3QFHf4AbnQ+2H86Hug/Oh7ofzof6D86H+RzM/zAEAgqtaKQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF+B8BUQ9gBGP/A8VNydRoI/o7jC9UWqoTC+S9E
47L9aoLh/IwjlXVZNoFwvnj9ktMv3/jA+RDz3eD8iwqPHqucsIPzK6UcHLc6
6qOqR3IfVN4BTb8DivoGNzgfaj+cD3UfnA91P5wP9R+cD/U/mvlhDgBmYVAR

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF2B8BUQ9gBGP/A8VNydRoI/o7jC9UWqoTC+S9E
47L9aoLh/IwjlXVZNoFwvnj9ktMv3/jA+RDz3eD8iwqPHqucsIPzK6UcHLc6
6qOqR3IfVN4BTb8DivoGNzgfaj+cD3UfnA91P5wP9R+cD/U/mvlhDgCvck7h

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQIawg7AmAeOn5Kr00DwdxxfqLZQJRTOfyEal+1X
EwznZxyprMuyCYTzxeuXnH75xgfOh5jvBudfVHj0WOWEHZxfKeXguNVRH1U9
EoDKO6Dpd0BR1OAG50Pth/Oh7oPzoe6H86H+g/Oh/kczP8wBAGXpPAc=
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF2DmCqIewAjH/g+Cm5Og0Ef8fxhWoLVULh/Bei
cdl+NcFwfsaRyrosm0A4X7x+yemXb3zgfIj5bnD+RYVHj1VO2MH5lVIOjlsd
9VHVI7kPKu+Apt8BRX2DG5wPtR/Oh7oPzoe6H86H+g/Oh/ofzfwwBwABp0Vh

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQF+DmCqIewAjH/g+Cm5Og0Ef8fxhWoLVULh/Bei
cdl+NcFwfsaRyrosm0A4X7x+yemXb3zgfIj5bnD+RYVHj1VO2MH5lVIOjlsd
9VHVI7kPKu+Apt8BRX2DG5wPtR/Oh7oPzoe6H86H+g/Oh/ofzfwwBwC4h0aR

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNYQ5Q+gCMf+D4Kbk6DQR/x/GFagtVQuH8F6Jx
2X41wXB+xpHKuiybQDhfvH7J6ZdvfA6gmu8G519UePRY5YQdnF8p5eC41VEf
VT2S+6DyDmj6HVDUN7jB+VD74Xyo++B8qPvhfKj/4Hyo/9HMD3MAANTRUKk=

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFxDmCqIewAjH/g+Cm5Og0Ef8fxhWoLVULh/Bei
cdl+NcFwfsaRyrosm0A4X7x+yemXb3zgfIj5bnD+RYVHj1VO2MH5lVIOjlsd
9VHVI7kPKu+Apt8BRX2DG5wPtR/Oh7oPzoe6H86H+g/Oh/ofzfwwBwBvdkfB

          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYHkhzAdEPYARj/wPFTcnUaCP6O4wvVFqqEwvkv
ROOy/WqC4fyMI5V1WTaBcL54/ZLTL9/4HEA13w3Ov6jw6LHKCTs4v1LKwXGr
oz6qeiT3QeUd0PQ7oKhvcIPzofbD+VD3wflQ98P5UP/B+VD/o5kf5gAAPnVW
TQ==
          "]]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYNaQ4QOuwAjH/g+Cm5Og0Ef8fxhWoLVULh/Bei
cdl+NcFwfsaRyrosm0A4X7x+yemXb3wOoJrvBudfVHj0WOWEHZxfKeXguNVR
H1U9kvug8g5o+h1Q1De4wflQ++F8qPvgfKj74Xyo/+B8qP/RzA9zAACLwFHZ

          "]]}}, {{
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -90.}, {-150., -90.}, {-120., -90.}, {-90., -90.}, \
{-60., -90.}, {-30., -90.}, {0., -90.}, {30., -90.}, {60., -90.}, {
          90., -90.}, {120., -90.}, {150., -90.}, {180., -90.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -88.63269777109872}, {-150., -88.63269777109872}, \
{-120., -88.63269777109872}, {-90., -88.63269777109872}, {-60., \
-88.63269777109872}, {-30., -88.63269777109872}, {0., -88.63269777109872}, {
          30., -88.63269777109872}, {60., -88.63269777109872}, {
          90., -88.63269777109872}, {120., -88.63269777109872}, {
          150., -88.63269777109872}, {180., -88.63269777109872}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -84.57233587073176}, {-150., -84.57233587073176}, \
{-120., -84.57233587073176}, {-90., -84.57233587073176}, {-60., \
-84.57233587073176}, {-30., -84.57233587073176}, {0., -84.57233587073176}, {
          30., -84.57233587073176}, {60., -84.57233587073176}, {
          90., -84.57233587073176}, {120., -84.57233587073176}, {
          150., -84.57233587073176}, {180., -84.57233587073176}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -77.94228634059948}, {-150., -77.94228634059948}, \
{-120., -77.94228634059948}, {-90., -77.94228634059948}, {-60., \
-77.94228634059948}, {-30., -77.94228634059948}, {0., -77.94228634059948}, {
          30., -77.94228634059948}, {60., -77.94228634059948}, {
          90., -77.94228634059948}, {120., -77.94228634059948}, {
          150., -77.94228634059948}, {180., -77.94228634059948}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -68.94399988070802}, {-150., -68.94399988070802}, \
{-120., -68.94399988070802}, {-90., -68.94399988070802}, {-60., \
-68.94399988070802}, {-30., -68.94399988070802}, {0., -68.94399988070802}, {
          30., -68.94399988070802}, {60., -68.94399988070802}, {
          90., -68.94399988070802}, {120., -68.94399988070802}, {
          150., -68.94399988070802}, {180., -68.94399988070802}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -57.85088487178853}, {-150., -57.85088487178853}, \
{-120., -57.85088487178853}, {-90., -57.85088487178853}, {-60., \
-57.85088487178853}, {-30., -57.85088487178853}, {0., -57.85088487178853}, {
          30., -57.85088487178853}, {60., -57.85088487178853}, {
          90., -57.85088487178853}, {120., -57.85088487178853}, {
          150., -57.85088487178853}, {180., -57.85088487178853}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -45.}, {-150., -45.}, {-120., -45.}, {-90., -45.}, \
{-60., -45.}, {-30., -45.}, {0., -45.}, {30., -45.}, {60., -45.}, {
          90., -45.}, {120., -45.}, {150., -45.}, {180., -45.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -30.781812899310186`}, {-150., -30.781812899310186`}, \
{-120., -30.781812899310186`}, {-90., -30.781812899310186`}, {-60., \
-30.781812899310186`}, {-30., -30.781812899310186`}, {
          0., -30.781812899310186`}, {30., -30.781812899310186`}, {
          60., -30.781812899310186`}, {90., -30.781812899310186`}, {
          120., -30.781812899310186`}, {150., -30.781812899310186`}, {
          180., -30.781812899310186`}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., -15.62833599002373}, {-150., -15.62833599002373}, \
{-120., -15.62833599002373}, {-90., -15.62833599002373}, {-60., \
-15.62833599002373}, {-30., -15.62833599002373}, {0., -15.62833599002373}, {
          30., -15.62833599002373}, {60., -15.62833599002373}, {
          90., -15.62833599002373}, {120., -15.62833599002373}, {
          150., -15.62833599002373}, {180., -15.62833599002373}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 0.}, {-150., 0.}, {-120., 0.}, {-90., 0.}, {-60., 
          0.}, {-30., 0.}, {0., 0.}, {30., 0.}, {60., 0.}, {90., 0.}, {120., 
          0.}, {150., 0.}, {180., 0.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 15.62833599002373}, {-150., 15.62833599002373}, {-120.,
           15.62833599002373}, {-90., 15.62833599002373}, {-60., 
          15.62833599002373}, {-30., 15.62833599002373}, {0., 
          15.62833599002373}, {30., 15.62833599002373}, {60., 
          15.62833599002373}, {90., 15.62833599002373}, {120., 
          15.62833599002373}, {150., 15.62833599002373}, {180., 
          15.62833599002373}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 30.781812899310186`}, {-150., 
          30.781812899310186`}, {-120., 30.781812899310186`}, {-90., 
          30.781812899310186`}, {-60., 30.781812899310186`}, {-30., 
          30.781812899310186`}, {0., 30.781812899310186`}, {30., 
          30.781812899310186`}, {60., 30.781812899310186`}, {90., 
          30.781812899310186`}, {120., 30.781812899310186`}, {150., 
          30.781812899310186`}, {180., 30.781812899310186`}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 45.}, {-150., 45.}, {-120., 45.}, {-90., 45.}, {-60., 
          45.}, {-30., 45.}, {0., 45.}, {30., 45.}, {60., 45.}, {90., 45.}, {
          120., 45.}, {150., 45.}, {180., 45.}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 57.85088487178853}, {-150., 57.85088487178853}, {-120.,
           57.85088487178853}, {-90., 57.85088487178853}, {-60., 
          57.85088487178853}, {-30., 57.85088487178853}, {0., 
          57.85088487178853}, {30., 57.85088487178853}, {60., 
          57.85088487178853}, {90., 57.85088487178853}, {120., 
          57.85088487178853}, {150., 57.85088487178853}, {180., 
          57.85088487178853}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 68.94399988070802}, {-150., 68.94399988070802}, {-120.,
           68.94399988070802}, {-90., 68.94399988070802}, {-60., 
          68.94399988070802}, {-30., 68.94399988070802}, {0., 
          68.94399988070802}, {30., 68.94399988070802}, {60., 
          68.94399988070802}, {90., 68.94399988070802}, {120., 
          68.94399988070802}, {150., 68.94399988070802}, {180., 
          68.94399988070802}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 77.94228634059948}, {-150., 77.94228634059948}, {-120.,
           77.94228634059948}, {-90., 77.94228634059948}, {-60., 
          77.94228634059948}, {-30., 77.94228634059948}, {0., 
          77.94228634059948}, {30., 77.94228634059948}, {60., 
          77.94228634059948}, {90., 77.94228634059948}, {120., 
          77.94228634059948}, {150., 77.94228634059948}, {180., 
          77.94228634059948}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 84.57233587073176}, {-150., 84.57233587073176}, {-120.,
           84.57233587073176}, {-90., 84.57233587073176}, {-60., 
          84.57233587073176}, {-30., 84.57233587073176}, {0., 
          84.57233587073176}, {30., 84.57233587073176}, {60., 
          84.57233587073176}, {90., 84.57233587073176}, {120., 
          84.57233587073176}, {150., 84.57233587073176}, {180., 
          84.57233587073176}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 88.63269777109872}, {-150., 88.63269777109872}, {-120.,
           88.63269777109872}, {-90., 88.63269777109872}, {-60., 
          88.63269777109872}, {-30., 88.63269777109872}, {0., 
          88.63269777109872}, {30., 88.63269777109872}, {60., 
          88.63269777109872}, {90., 88.63269777109872}, {120., 
          88.63269777109872}, {150., 88.63269777109872}, {180., 
          88.63269777109872}}]}, {
         RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
         Line[{{-180., 90.}, {-150., 90.}, {-120., 90.}, {-90., 90.}, {-60., 
          90.}, {-30., 90.}, {0., 90.}, {30., 90.}, {60., 90.}, {90., 90.}, {
          120., 90.}, {150., 90.}, {180., 90.}}]}}}, AspectRatio -> 0.8, 
      ImageSize -> 400, PlotRange -> {{-185, 185}, {-95, 95}}, LabelStyle -> 
      Directive[{Bold, 
         GrayLevel[0], Medium, FontFamily -> "Helvetica"}], Frame -> True, 
      FrameStyle -> Thickness[Large], Axes -> True, AxesStyle -> 
      Thickness[Large], 
      FrameTicks -> {{{{-90, -90}, {-78, -60}, {-45, -30}, {0, 0}, {45, 30}, {
         78, 60}, {90, 90}}, None}, {{-180, -150, -120, -90, -60, -30, 0, 30, 
         60, 90, 120, 150, 180}, None}}, 
      FrameLabel -> {
       "\[Phi] (\[Degree])", 
        "\[Theta] Sin[\[Theta]] (\[Degree])"}]}, $CellContext`ctype$$ = 
    1, $CellContext`dirs1$$ = 30, $CellContext`dirs2$$ = {15, 
    15}, $CellContext`dirs21$$ = 15, $CellContext`dirs22$$ = 
    15, $CellContext`dirs23$$ = 15, $CellContext`dirs24$$ = 
    15, $CellContext`dirs25$$ = 15, $CellContext`dirs26$$ = 
    15, $CellContext`disp$$ = 1, $CellContext`file$$ = 
    "", $CellContext`gradc$$ = "", $CellContext`gradd$$ = 
    "", $CellContext`gradm$$ = "", $CellContext`grads$$ = 
    "", $CellContext`grid$$ = 9, $CellContext`gridf$$ = 
    False, $CellContext`half$$ = 1, $CellContext`int$$ = 
    10, $CellContext`inter$$ = True, $CellContext`len$$ = 
    Null, $CellContext`mirror$$ = 
    True, $CellContext`mpoints$$ = {}, $CellContext`mult$$ = 
    1, $CellContext`names$$ = {
    "Set_Name", "Shells_Name", "Grid_Name", 
     "DWI_Name"}, $CellContext`nshels$$ = 2, $CellContext`opacity$$ = 
    0.5, $CellContext`orderc$$ = "", $CellContext`orderd$$ = 
    "", $CellContext`orderm$$ = "", $CellContext`orders$$ = 
    "", $CellContext`out$$ = "Set_Name", $CellContext`outc$$ = 
    "", $CellContext`outd$$ = "", $CellContext`outm$$ = 
    "", $CellContext`outs$$ = "", $CellContext`part$$ = 
    1, $CellContext`points$$ = {}, $CellContext`pointsc$$ = {}, \
$CellContext`pointspl$$ = {}, $CellContext`ppoints$$ = {}, \
$CellContext`ppointspl$$ = {}, $CellContext`proj$$ = 
    False, $CellContext`random$$ = True, $CellContext`rlen$$ = 
    Null, $CellContext`rlenc$$ = {}, $CellContext`running$$ = 
    False, $CellContext`sc$$ = Null, $CellContext`scc$$ = 
    Null, $CellContext`shel$$ = 1, $CellContext`show$$ = {1, 
    2}, $CellContext`showc$$ = All, $CellContext`size$$ = 
    430, $CellContext`steps$$ = 1000, $CellContext`sticks$$ = 
    False, $CellContext`type$$ = "normal", $CellContext`typed$$ = 
    "normal", $CellContext`va$$ = 0.5235987755982988, $CellContext`vel$$ = 
    1, $CellContext`viewvec$$ = {0, 0}, $CellContext`vp$$ = {
    1.3, -2.4, 2}, $CellContext`vv$$ = {0, 0, 1}, $CellContext`weight$$ = 0.5,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Row[{"  Set Name ", 
         InputField[
          Dynamic[
           Part[$CellContext`names$$, $CellContext`mult$$]], String]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`disp$$], 1, "display gradients"}, {
      1 -> "graphics", 2 -> "chart", 3 -> "text", 4 -> "G load"}}, {{
       Hold[$CellContext`opacity$$], 0.5, "sphere opacity"}, 0, 1, 0.1}, {
      Hold[
       Row[{" sticks: ", 
         Checkbox[
          Dynamic[$CellContext`sticks$$]], "   mirror grad.: ", 
         Checkbox[
          Dynamic[$CellContext`mirror$$]], "   project grad. on half: ", 
         Checkbox[
          Dynamic[$CellContext`proj$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Grid[{{
          Button[
          "top", $CellContext`vp$$ = {0, 0, 3.38}, ImageSize -> {50, 20}, 
           FrameMargins -> 0], 
          Button[
          "right", $CellContext`vp$$ = {3.38, 0, 0}, ImageSize -> {50, 20}, 
           FrameMargins -> 0], 
          Button[
          "front", $CellContext`vp$$ = {0, 3.38, 0}, ImageSize -> {50, 20}, 
           FrameMargins -> 0], 
          Button[
          "reset", {$CellContext`vp$$, $CellContext`vv$$, $CellContext`va$$} = \
{{1.3, -2.4, 2}, {0, 0, 1}, 30. Degree}, ImageSize -> {100, 20}, FrameMargins -> 
           0]}}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`half$$], 1, "Full or half sphere"}, {
      1 -> "half sphere", 0 -> "full sphere"}}, {{
       Hold[$CellContext`mult$$], 1, "shells"}, {
      1 -> "single shell", 2 -> "multi shell", 3 -> "cartesian", 4 -> 
       "DWI"}}, {{
       Hold[$CellContext`type$$], "normal", "type"}, {
      "normal", "normal fixed z", "normal fixed x, y and z", "over-plus", 
       "over-plus fixed z", "over-plus fixed x, y and z"}}, {{
       Hold[$CellContext`dirs1$$], 30, "number of gradients"}, 6, 128, 1}, {{
       Hold[$CellContext`nshels$$], 2, "number of shells"}, {2, 3, 4, 5, 
      6}}, {{
       Hold[$CellContext`shel$$], 1, " shell"}, 
      Dynamic[
       Range[$CellContext`nshels$$]]}, {{
       Hold[$CellContext`dirs21$$], 15, "number of gradients shell 1"}, 3, 
      128, 1}, {{
       Hold[$CellContext`dirs22$$], 15, "number of gradients shell 2"}, 3, 
      128, 1}, {{
       Hold[$CellContext`dirs23$$], 15, "number of gradients shell 3"}, 3, 
      128, 1}, {{
       Hold[$CellContext`dirs24$$], 15, "number of gradients shell 4"}, 3, 
      128, 1}, {{
       Hold[$CellContext`dirs25$$], 15, "number of gradients shell 5"}, 3, 
      128, 1}, {{
       Hold[$CellContext`dirs26$$], 15, "number of gradients shell 6"}, 3, 
      128, 1}, {{
       Hold[$CellContext`weight$$], 0.5, "shell weighting"}, 0, 1, 0.05}, {{
       Hold[$CellContext`grid$$], 9, "cartesian grid size"}, 5, 15, 1}, {{
       Hold[$CellContext`gridf$$], True, "full even grid"}, {
      False -> "no (in between odd grid)", True -> "yes"}}, {{
       Hold[$CellContext`typed$$], "normal", "           type"}, {
      "normal", "over-plus"}}, {
      Hold[
       PaneSelector[{1 -> Column[{
            Manipulate`Place[1], 
            Manipulate`Place[2]}], 2 -> Column[{
            Row[{
              Manipulate`Place[3], 
              Manipulate`Place[4]}], 
            PaneSelector[{
              Manipulate`Place[5], 
              Manipulate`Place[6], 
              Manipulate`Place[7], 
              Manipulate`Place[8], 
              Manipulate`Place[9], 
              Manipulate`Place[10]}, 
             Dynamic[$CellContext`shel$$]], 
            Manipulate`Place[11]}], 3 -> Column[{
            Manipulate`Place[12], 
            Manipulate`Place[13]}], 4 -> Manipulate`Place[14]}, 
        Dynamic[$CellContext`mult$$]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> Row[{"  b-value:   ", 
            InputField[
             Dynamic[$CellContext`bvall$$], Expression, Background -> Dynamic[
               If[
                Or[
                 And[
                  AllTrue[$CellContext`bvall$$, NumberQ], 
                  ListQ[$CellContext`bvall$$]], 
                 NumberQ[$CellContext`bvall$$]], None, 
                Lighter[
                 Lighter[Red]]]]]}], 2 -> Dynamic[
           Grid[
            Partition[
             PadRight[
              Map[Row[{"b-val" <> ToString[#] <> ":", 
                 InputField[
                  Dynamic[
                   Part[$CellContext`bvals$$, #]], Number, FieldSize -> 
                  5]}]& , 
               Range[1, $CellContext`nshels$$]], 6, ""], 3]]], 3 -> 
         Row[{"max b (corner):   ", 
            InputField[
             Dynamic[$CellContext`bvalc$$], Number]}], 4 -> 
         Row[{"      b-value:   ", 
            InputField[
             Dynamic[$CellContext`bvald$$], Expression, Background -> Dynamic[
               If[
                Or[
                 And[
                  AllTrue[$CellContext`bvald$$, NumberQ], 
                  ListQ[$CellContext`bvald$$]], 
                 NumberQ[$CellContext`bvald$$]], None, 
                Lighter[
                 Lighter[Red]]]]]}]}, 
        Dynamic[$CellContext`mult$$]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Dynamic[
        Grid[{{"  interleave b: ", 
           Checkbox[
            Dynamic[$CellContext`inter$$]], "Optimize G load: ", 
           Checkbox[
            Dynamic[$CellContext`random$$]]}, 
          If[$CellContext`inter$$, {"  interleave b-value: ", 
            InputField[
             Dynamic[$CellContext`bi$$], Number, FieldSize -> 3], 
            "interleave b every: ", 
            PopupMenu[
             Dynamic[$CellContext`int$$], 
             Range[3, 20]]}, {}]}, Alignment -> Left]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`steps$$], 1000, "quality (iterations)"}, {
      500 -> "poor (500)", 1000 -> "normal (1000)", 2500 -> 
       "excellent (2500)", 5000 -> "perfect (5000)", 10000 -> 
       "extreme (10000)"}}, {
      Hold[
       Row[{
         Button["generate", $CellContext`app$$ = Lighter[
             Lighter[LightGray]]; $CellContext`disp$$ = 
           1; $CellContext`running$$ = True; $CellContext`mirror$$ = 
           If[$CellContext`half$$ == 0, False, True]; $CellContext`proj$$ = 
           False; Pause[0.2]; 
          Switch[$CellContext`mult$$, 
            4, $CellContext`gradd$$ = 
             If[$CellContext`typed$$ == "normal", {{1, 0, 0}, {0, 1, 0}, {0, 
               0, 1}}, {{-0.707107, -0.5, 0.5}, {0.707107, -0.5, 0.5}, {0., 
               0.707107, 0.707107}}]; Null, 
            3, $CellContext`gradc$$ = ($CellContext`pointsc$$ = \
$CellContext`GradGrid[$CellContext`grid$$, $CellContext`gridf$$]); Null, 
            2, {$CellContext`mpoints$$, $CellContext`vel$$, \
$CellContext`part$$} = $CellContext`Prepare[$CellContext`dirs2$$, \
$CellContext`half$$, {}, $CellContext`weight$$]; Pause[0.5]; 
            Do[$CellContext`mpoints$$ = \
$CellContext`GradOptimize4C[$CellContext`mpoints$$, $CellContext`vel$$, \
$CellContext`half$$]; $CellContext`ppoints$$ = Map[Chop[
                  Part[$CellContext`mpoints$$, #]]& , $CellContext`part$$]; 
              Null, {$CellContext`steps$$}]; $CellContext`gradm$$ = Map[Chop[
                Part[$CellContext`mpoints$$, #]]& , $CellContext`part$$]; 
            Null, 1, $CellContext`grads$$ = 
             Switch[$CellContext`type$$, 
               "normal", $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$]; Pause[0.5]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize1C[$CellContext`points$$, $CellContext`half$$], \
{$CellContext`steps$$}]; Chop[$CellContext`points$$], 
               "normal fixed z", $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$, {{0, 0, 
                  1}}]; Pause[0.5]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 
                   1, $CellContext`half$$], {$CellContext`steps$$}]; 
               Chop[$CellContext`points$$], 
               "normal fixed x, y and z", $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$, {{1, 0, 
                  0}, {0, 1, 0}, {0, 0, 1}}]; Pause[0.5]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 
                   3, $CellContext`half$$], {$CellContext`steps$$}]; 
               Chop[$CellContext`points$$], 
               "over-plus", $CellContext`half$$ = 
                1; $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$]; \
$CellContext`points$$ = 
                Join[{{0, 0, 1}, {0, 1, 0}, {1, 0, 
                  0}}, $CellContext`points$$]; Pause[0.5]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 3, $CellContext`half$$], {
                  Round[$CellContext`steps$$/10]}]; $CellContext`charge$$ = 
                Join[
                  ConstantArray[(0.5 $CellContext`dirs1$$)^1.2, 3], 
                  ConstantArray[1, $CellContext`dirs1$$]]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize3C[$CellContext`points$$, $CellContext`charge$$, 
                   3], {$CellContext`steps$$}]; $CellContext`points$$ = Chop[
                  Drop[$CellContext`points$$, 3]], 
               "over-plus fixed z", $CellContext`half$$ = 
                1; $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$ - 
                   1}, $CellContext`half$$]; $CellContext`points$$ = 
                Join[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}, {0., 0.707107, 
                   0.707107}}, $CellContext`points$$]; Pause[0.5]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 4, $CellContext`half$$], {
                  Round[$CellContext`steps$$/10]}]; $CellContext`charge$$ = 
                Join[
                  ConstantArray[(0.5 $CellContext`dirs1$$)^1.2, 3], 
                  ConstantArray[1, $CellContext`dirs1$$]]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize3C[$CellContext`points$$, $CellContext`charge$$, 
                   4], {$CellContext`steps$$}]; $CellContext`points$$ = Chop[
                  Drop[$CellContext`points$$, 3]], 
               "over-plus fixed x, y and z", $CellContext`half$$ = 
                
                1; $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$ - 
                   3}, $CellContext`half$$]; $CellContext`points$$ = 
                Join[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}, {-0.707107, -0.5, 
                   0.5}, {0.707107, -0.5, 0.5}, {0., 0.707107, 
                   0.707107}}, $CellContext`points$$]; Pause[0.5]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 6, $CellContext`half$$], {
                  Round[$CellContext`steps$$/10]}]; $CellContext`charge$$ = 
                Join[
                  ConstantArray[(0.5 $CellContext`dirs1$$)^1.2, 3], 
                  ConstantArray[1, $CellContext`dirs1$$]]; 
               Do[$CellContext`points$$ = \
$CellContext`GradOptimize3C[$CellContext`points$$, $CellContext`charge$$, 
                   6], {$CellContext`steps$$}]; $CellContext`points$$ = Chop[
                  Drop[$CellContext`points$$, 3]]]; Null]; 
          Switch[$CellContext`mult$$, 
            1, $CellContext`outs$$ = $CellContext`ConvertGrads[
               ConstantArray[$CellContext`grads$$, 
                
                Length[$CellContext`bvall$$]], $CellContext`bvall$$, \
$CellContext`bi$$]; $CellContext`orders$$ = $CellContext`FindOrder[
               ConstantArray[$CellContext`grads$$, 
                Length[$CellContext`bvall$$]], $CellContext`bvall$$]; Null, 
            2, $CellContext`outm$$ = \
$CellContext`ConvertGrads[$CellContext`gradm$$, 
               Part[$CellContext`bvals$$, 
                Span[
                1, $CellContext`nshels$$]], $CellContext`bi$$]; \
$CellContext`orderm$$ = $CellContext`FindOrder[$CellContext`gradm$$, 
               Part[$CellContext`bvals$$, 
                Span[1, $CellContext`nshels$$]]]; Null, 
            3, $CellContext`outc$$ = \
$CellContext`ConvertGrads[$CellContext`gradc$$, {$CellContext`bvalc$$}, \
$CellContext`bi$$]; $CellContext`orderc$$ = \
$CellContext`FindOrder[$CellContext`gradc$$, $CellContext`bvalc$$]; Null, 
            4, $CellContext`outd$$ = $CellContext`ConvertGrads[
               ConstantArray[$CellContext`gradd$$, 
                
                Length[$CellContext`bvald$$]], $CellContext`bvald$$, \
$CellContext`bi$$]; Part[$CellContext`outd$$, 2] = Join[
               
               If[$CellContext`typed$$ == "normal", {
                " 1.00000    0.00000    0.00000       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.00000    1.00000    0.00000       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.00000    0.00000    1.00000       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]]}, {
                "-0.70711   -0.50000    0.50000       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.70711   -0.50000    0.50000       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.00000    0.70711    0.70711       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]]}], {
               " 0.02704    0.79706    0.60330       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.09999   -0.59783    0.79536       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.23191   -0.77261    0.59101       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.52867   -0.79903    0.28646       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.18297   -0.98140    0.05818       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.86286    0.19578    0.46599       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.05126    0.20181    0.97808       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.66047    0.01890    0.75062       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.65426   -0.18818    0.73249       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.33052    0.11752    0.93646       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.95407   -0.14465    0.26236       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.14402   -0.86963    0.47224       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.78028   -0.56460    0.26904       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.75319   -0.31631    0.57675       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.41392   -0.31357    0.85460       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.56536    0.27275    0.77845       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.73743    0.58153    0.34354       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.29639   -0.44648    0.84428       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.38689    0.75986    0.52243       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.20081    0.52214    0.82888       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.79424   -0.60284    0.07593       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.98777    0.03678    0.15153       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.29973    0.90469    0.30281       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.95633    0.27860    0.08835       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.49976   -0.83556    0.22819       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.90574    0.41773    0.07170       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.77284    0.45698    0.44032       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.35339   -0.03796    0.93471       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.84918    0.07921    0.52213       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.50085    0.85590    0.12880       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.47526    0.67317    0.56654       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.87597   -0.32192    0.35923       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.64492    0.75075    0.14303       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.12687    0.96109    0.24536       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.60869   -0.54852    0.57325       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.03797   -0.21873    0.97505       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.47780   -0.64010    0.60165       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                "-0.57319    0.42677    0.69952       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.18760   -0.96394    0.18874       " <> ToString[
                  Round[$CellContext`bi$$, 0.1]], 
                " 0.23342    0.50887    0.28591       " <> ToString[
                  
                  Round[$CellContext`bi$$, 
                   0.1]]}]; $CellContext`orderd$$ = $CellContext`FindOrder[
               ConstantArray[$CellContext`gradd$$, 
                Length[$CellContext`bvald$$]], $CellContext`bvald$$]; Null]; 
          Pause[0.1]; $CellContext`running$$ = False; $CellContext`app$$ = 
           White; Null, Method -> "Queued", ImageSize -> {120, 23}], 
         Button["clipboard", 
          CopyToClipboard[$CellContext`out$$], ImageSize -> {100, 23}], 
         Button[
         "file", $CellContext`file$$ = 
           SystemDialogInput["FileSave", "dti_vectors_input.txt"]; If[
            Not[$CellContext`file$$ === $Canceled], 
            Export[$CellContext`file$$, $CellContext`out$$, "Text"]], 
          ImageSize -> {100, 23}, Method -> "Queued"]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Style[
         "Made by Martijn Froeling, Phd \nm.froeling@umcutrecht.nl", {Small, 
           GrayLevel[0.5]}]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`points$$], {}}}, {{
       Hold[$CellContext`pointspl$$], {}}}, {{
       Hold[$CellContext`pointsc$$], {}}}, {{
       Hold[$CellContext`ppoints$$], {}}}, {{
       Hold[$CellContext`ppointspl$$], {}}}, {{
       Hold[$CellContext`mpoints$$], {}}}, {{
       Hold[$CellContext`gradd$$], ""}}, {{
       Hold[$CellContext`gradm$$], ""}}, {{
       Hold[$CellContext`grads$$], ""}}, {{
       Hold[$CellContext`gradc$$], ""}}, {{
       Hold[$CellContext`outd$$], ""}}, {{
       Hold[$CellContext`outc$$], ""}}, {{
       Hold[$CellContext`outm$$], ""}}, {{
       Hold[$CellContext`outs$$], ""}}, {{
       Hold[$CellContext`orderd$$], ""}}, {{
       Hold[$CellContext`orderc$$], ""}}, {{
       Hold[$CellContext`orderm$$], ""}}, {{
       Hold[$CellContext`orders$$], ""}}, {{
       Hold[$CellContext`out$$], ""}}, {{
       Hold[$CellContext`file$$], ""}}, {{
       Hold[$CellContext`show$$], {1, 2}}}, {{
       Hold[$CellContext`showc$$], All}}, {{
       Hold[$CellContext`weight$$], 0.5}}, {{
       Hold[$CellContext`grid$$], 9}}, {{
       Hold[$CellContext`gridf$$], False}}, {{
       Hold[$CellContext`running$$], False}}, {{
       Hold[$CellContext`app$$], 
       GrayLevel[1]}}, {{
       Hold[$CellContext`size$$], 430}}, {{
       Hold[$CellContext`inter$$], True}}, {{
       Hold[$CellContext`bi$$], 0}}, {{
       Hold[$CellContext`random$$], True}}, {{
       Hold[$CellContext`sticks$$], False}}, {{
       Hold[$CellContext`mirror$$], True}}, {{
       Hold[$CellContext`proj$$], False}}, {{
       Hold[$CellContext`int$$], 10}}, {{
       Hold[$CellContext`vel$$], 1}}, {{
       Hold[$CellContext`part$$], 1}}, {{
       Hold[$CellContext`dirs1$$], 30}}, {{
       Hold[$CellContext`dirs21$$], 15}}, {{
       Hold[$CellContext`dirs22$$], 15}}, {{
       Hold[$CellContext`dirs23$$], 15}}, {{
       Hold[$CellContext`dirs24$$], 15}}, {{
       Hold[$CellContext`dirs25$$], 15}}, {{
       Hold[$CellContext`dirs26$$], 15}}, {{
       Hold[$CellContext`bvald$$], {10, 20, 30, 40, 60, 80, 100, 200, 300, 
       500, 700, 1000}}}, {{
       Hold[$CellContext`bvall$$], {1000}}}, {{
       Hold[$CellContext`bvals$$], {1000, 2000, 3000, 4000, 5000, 6000}}}, {{
       Hold[$CellContext`bvalc$$], 9000}}, {
      Hold[$CellContext`dirs2$$]}, {
      Hold[$CellContext`type$$]}, {
      Hold[$CellContext`typed$$]}, {
      Hold[$CellContext`sc$$]}, {
      Hold[$CellContext`scc$$]}, {
      Hold[$CellContext`shel$$]}, {{
       Hold[$CellContext`nshels$$], 2}}, {
      Hold[$CellContext`len$$]}, {
      Hold[$CellContext`rlen$$]}, {{
       Hold[$CellContext`rlenc$$], {}}}, {
      Hold[$CellContext`charge$$]}, {{
       Hold[$CellContext`names$$], {
       "Set_Name", "Shells_Name", "Grid_Name", "DWI_Name"}}}, {{
       Hold[$CellContext`vp$$], {1.3, -2.4, 2}}}, {{
       Hold[$CellContext`va$$], 0.5235987755982988}}, {{
       Hold[$CellContext`vv$$], {0, 0, 1}}}, {
      Hold[$CellContext`charts$$]}, {{
       Hold[$CellContext`viewvec$$], {0, 0}}}, {{
       Hold[$CellContext`ctype$$], 1}}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`app$$ = GrayLevel[1], $CellContext`bi$$ = 
        0, $CellContext`bvalc$$ = 
        9000, $CellContext`bvald$$ = {10, 20, 30, 40, 60, 80, 100, 200, 300, 
         500, 700, 1000}, $CellContext`bvall$$ = {
         1000}, $CellContext`bvals$$ = {1000, 2000, 3000, 4000, 5000, 
         6000}, $CellContext`charge$$ = Null, $CellContext`charts$$ = 
        Null, $CellContext`ctype$$ = 1, $CellContext`dirs1$$ = 
        30, $CellContext`dirs2$$ = Null, $CellContext`dirs21$$ = 
        15, $CellContext`dirs22$$ = 15, $CellContext`dirs23$$ = 
        15, $CellContext`dirs24$$ = 15, $CellContext`dirs25$$ = 
        15, $CellContext`dirs26$$ = 15, $CellContext`disp$$ = 
        1, $CellContext`file$$ = "", $CellContext`gradc$$ = 
        "", $CellContext`gradd$$ = "", $CellContext`gradm$$ = 
        "", $CellContext`grads$$ = "", $CellContext`grid$$ = 
        9, $CellContext`gridf$$ = False, $CellContext`half$$ = 
        1, $CellContext`int$$ = 10, $CellContext`inter$$ = 
        True, $CellContext`len$$ = Null, $CellContext`mirror$$ = 
        True, $CellContext`mpoints$$ = {}, $CellContext`mult$$ = 
        1, $CellContext`names$$ = {
         "Set_Name", "Shells_Name", "Grid_Name", 
          "DWI_Name"}, $CellContext`nshels$$ = 2, $CellContext`opacity$$ = 
        0.5, $CellContext`orderc$$ = "", $CellContext`orderd$$ = 
        "", $CellContext`orderm$$ = "", $CellContext`orders$$ = 
        "", $CellContext`out$$ = "", $CellContext`outc$$ = 
        "", $CellContext`outd$$ = "", $CellContext`outm$$ = 
        "", $CellContext`outs$$ = "", $CellContext`part$$ = 
        1, $CellContext`points$$ = {}, $CellContext`pointsc$$ = {}, \
$CellContext`pointspl$$ = {}, $CellContext`ppoints$$ = {}, \
$CellContext`ppointspl$$ = {}, $CellContext`proj$$ = 
        False, $CellContext`random$$ = True, $CellContext`rlen$$ = 
        Null, $CellContext`rlenc$$ = {}, $CellContext`running$$ = 
        False, $CellContext`sc$$ = Null, $CellContext`scc$$ = 
        Null, $CellContext`shel$$ = 
        1, $CellContext`show$$ = {1, 2}, $CellContext`showc$$ = 
        All, $CellContext`size$$ = 430, $CellContext`steps$$ = 
        1000, $CellContext`sticks$$ = False, $CellContext`type$$ = 
        "normal", $CellContext`typed$$ = "normal", $CellContext`va$$ = 
        0.5235987755982988, $CellContext`vel$$ = 
        1, $CellContext`viewvec$$ = {0, 0}, $CellContext`vp$$ = {
         1.3, -2.4, 2}, $CellContext`vv$$ = {0, 0, 1}, $CellContext`weight$$ = 
        0.5}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`bvall$$ = If[
          
          NumberQ[$CellContext`bvall$$], {$CellContext`bvall$$}, \
$CellContext`bvall$$]; $CellContext`names$$ = 
        Map[StringReplace[#, " " -> 
           "_"]& , $CellContext`names$$]; $CellContext`dirs1$$ = 
        Clip[$CellContext`dirs1$$, {3, 
          128}]; {$CellContext`dirs21$$, $CellContext`dirs22$$, \
$CellContext`dirs23$$, $CellContext`dirs24$$, $CellContext`dirs25$$, \
$CellContext`dirs26$$} = 
        Clip[{$CellContext`dirs21$$, $CellContext`dirs22$$, \
$CellContext`dirs23$$, $CellContext`dirs24$$, $CellContext`dirs25$$, \
$CellContext`dirs26$$}, {3, 128}]; $CellContext`dirs2$$ = 
        Part[{$CellContext`dirs21$$, $CellContext`dirs22$$, \
$CellContext`dirs23$$, $CellContext`dirs24$$, $CellContext`dirs25$$, \
$CellContext`dirs26$$}, 
          Span[1, $CellContext`nshels$$]]; $CellContext`out$$ = 
        Part[$CellContext`names$$, $CellContext`mult$$] <> 
         Switch[$CellContext`mult$$, 4, 
           If[$CellContext`gradd$$ === "", $CellContext`gradd$$, 
            $CellContext`FinalGrads[$CellContext`outd$$, \
{$CellContext`inter$$, $CellContext`int$$, $CellContext`bi$$}, \
{$CellContext`random$$, $CellContext`orderd$$}]], 3, 
           If[$CellContext`gradc$$ === "", $CellContext`gradc$$, 
            $CellContext`FinalGrads[$CellContext`outc$$, \
{$CellContext`inter$$, $CellContext`int$$, $CellContext`bi$$}, \
{$CellContext`random$$, $CellContext`orderc$$}]], 2, 
           If[$CellContext`gradm$$ === "", $CellContext`gradm$$, 
            $CellContext`FinalGrads[$CellContext`outm$$, \
{$CellContext`inter$$, $CellContext`int$$, $CellContext`bi$$}, \
{$CellContext`random$$, $CellContext`orderm$$}]], 1, 
           If[$CellContext`grads$$ === "", $CellContext`grads$$, 
            $CellContext`FinalGrads[$CellContext`outs$$, \
{$CellContext`inter$$, $CellContext`int$$, $CellContext`bi$$}, \
{$CellContext`random$$, $CellContext`orders$$}]]]; Dynamic[
         Switch[$CellContext`disp$$, 1, 
          Switch[$CellContext`mult$$, 1, 
           If[$CellContext`points$$ === {}, 
            Column[{"", 
              Show[
               $CellContext`SpherePlot[1, $CellContext`opacity$$], 
               ImageSize -> $CellContext`size$$, PlotLabel -> 
               ""]}], $CellContext`pointspl$$ = If[$CellContext`proj$$, 
               Map[
               Sign[Part[#, 3] + 10.^(-16)] 
                Normalize[#]& , $CellContext`points$$, {
                1}], $CellContext`points$$]; Column[{"", 
               Show[
                $CellContext`SpherePlot[1, $CellContext`opacity$$], 
                $CellContext`ListSpherePloti[$CellContext`pointspl$$, Red, 
                 0.05], 
                If[$CellContext`mirror$$, 
                 $CellContext`ListSpherePloti[-$CellContext`pointspl$$, Gray, 
                  0.05], 
                 Graphics3D[{}]], 
                If[$CellContext`sticks$$, 
                 $CellContext`ListStickPlot[$CellContext`pointspl$$, 0.01], 
                 Graphics3D[{}]], ImageSize -> $CellContext`size$$, PlotLabel -> 
                "", Background -> $CellContext`app$$]}, Alignment -> Center]],
            2, 
           If[$CellContext`ppoints$$ === {}, 
            Column[{"", 
              Show[
               $CellContext`SpherePlot[1, $CellContext`opacity$$], 
               ImageSize -> $CellContext`size$$, PlotLabel -> 
               ""]}], $CellContext`ppointspl$$ = If[$CellContext`proj$$, 
               Map[
               Sign[Part[#, 3] + 10.^(-16)] 
                Normalize[#]& , $CellContext`ppoints$$, {
                2}], $CellContext`ppoints$$]; $CellContext`len$$ = 
             Length[$CellContext`ppoints$$]; $CellContext`rlen$$ = 
             Range[$CellContext`len$$]; 
            If[$CellContext`running$$, $CellContext`show$$ = \
$CellContext`rlen$$]; Column[{
               SetterBar[
                Dynamic[$CellContext`show$$], 
                
                Join[{0 -> "multi", $CellContext`rlen$$ -> 
                  "all"}, $CellContext`rlen$$]], 
               If[$CellContext`show$$ === 0, 
                Show[
                 Flatten[
                  MapThread[{
                    $CellContext`SpherePlot[#3, $CellContext`opacity$$], 
                    $CellContext`ListSpherePloti[# #3, #2, 0.05]}& , {
                    Reverse[$CellContext`ppointspl$$], 
                    Reverse[
                    Part[{Red, Green, Blue, Yellow, Pink, Purple}, 
                    Span[1, $CellContext`len$$]]], 
                    Range[1, 0.5, (-0.5)/($CellContext`len$$ - 1)]}]], 
                 If[$CellContext`mirror$$, 
                  
                  MapThread[$CellContext`ListSpherePloti[(-#) #2, Gray, 
                    0.05]& , {$CellContext`ppointspl$$, 
                    Range[1, 0.5, (-0.5)/($CellContext`len$$ - 1)]}], 
                  Graphics3D[{}]], ImageSize -> $CellContext`size$$, 
                 Background -> $CellContext`app$$], 
                Show[
                 $CellContext`SpherePlot[1, $CellContext`opacity$$], 
                 Part[
                  
                  MapThread[$CellContext`ListSpherePloti[#, #2, 
                    0.05]& , {$CellContext`ppointspl$$, 
                    Part[{Red, Green, Blue, Yellow, Pink, Purple}, 
                    Span[1, $CellContext`len$$]]}], 
                  Clip[$CellContext`show$$, {1, $CellContext`len$$}]], 
                 If[$CellContext`mirror$$, 
                  Part[
                   
                   Map[$CellContext`ListSpherePloti[-#, Gray, 
                    0.05]& , $CellContext`ppointspl$$], 
                   Clip[$CellContext`show$$, {1, $CellContext`len$$}]], 
                  Graphics3D[{}]], 
                 If[$CellContext`sticks$$, 
                  Part[
                   
                   Map[$CellContext`ListStickPlot[#, 
                    0.01]& , $CellContext`ppointspl$$], 
                   Clip[$CellContext`show$$, {1, $CellContext`len$$}]], 
                  Graphics3D[{}]], ImageSize -> $CellContext`size$$, 
                 Background -> $CellContext`app$$]]}, Alignment -> Center]], 
           3, 
           Column[{"", 
             Show[
              $CellContext`SpherePlot[0, $CellContext`opacity$$], 
              $CellContext`ListSpherePloti[$CellContext`pointsc$$, Red, 0.05], 
              If[$CellContext`mirror$$, 
               $CellContext`ListSpherePloti[-$CellContext`pointsc$$, Gray, 
                0.05], 
               Graphics3D[{}]], ImageSize -> $CellContext`size$$, PlotLabel -> 
              "", Background -> $CellContext`app$$]}], 4, 
           Show[
            ListLinePlot[
             Map[{{0, #}, {1, #}}& , 
              Prepend[$CellContext`bvald$$, 0]], PlotStyle -> 
             Directive[{Gray, Thick}], PlotRange -> {{0, 2}, Full}, AxesStyle -> 
             Thick, Axes -> {False, True}, AspectRatio -> 1.4, 
             AxesLabel -> {None, 
               Style["b-value", Bold, Black]}], 
            ListPlot[
             Map[{1, #}& , 
              Prepend[$CellContext`bvald$$, 0]], PlotStyle -> Red]]], 2, 
          Column[{
            Row[{
              Slider2D[
               Dynamic[$CellContext`viewvec$$], {{-1, -1}, {1, 1}}, 
               ContinuousAction -> True], 
              SetterBar[
               Dynamic[$CellContext`ctype$$], {
               1 -> "polar", 2 -> "even grid", 3 -> "scaled grid"}]}, 
             ImageSize -> 400, Alignment -> Center], 
            If[$CellContext`mult$$ == 2, 
             SetterBar[
              Dynamic[$CellContext`showc$$], 
              Join[{All -> "all"}, $CellContext`rlenc$$]], ""], 
            Dynamic[
             Show[
              Part[$CellContext`charts$$, $CellContext`ctype$$], 
              Switch[$CellContext`mult$$, 1, 
               If[$CellContext`points$$ === {}, 
                Graphics[], $CellContext`pointspl$$ = If[$CellContext`proj$$, 
                   Map[
                   Sign[Part[#, 3] + 10.^(-16)] 
                    Normalize[#]& , $CellContext`points$$, {
                    1}], $CellContext`points$$]; \
$CellContext`PlotChartPoints[$CellContext`pointspl$$, {$CellContext`mirror$$, 
                   Red}]], 2, 
               If[$CellContext`ppoints$$ === {}, 
                Graphics[], $CellContext`ppointspl$$ = If[$CellContext`proj$$, 
                   Map[
                   Sign[Part[#, 3] + 10.^(-16)] 
                    Normalize[#]& , $CellContext`ppoints$$, {
                    2}], $CellContext`ppoints$$]; $CellContext`len$$ = 
                 Length[$CellContext`ppoints$$]; $CellContext`rlenc$$ = 
                 Range[$CellContext`len$$]; $CellContext`PlotChartPoints[
                  
                  Part[$CellContext`ppointspl$$, $CellContext`showc$$], \
{$CellContext`mirror$$, 
                   
                   Part[{Red, Green, Blue, Yellow, Pink, 
                    Purple}, $CellContext`showc$$]}]], 
               Blank[], 
               Graphics[]]]]}, Alignment -> Center], 3, $CellContext`out$$, 4, 
          Switch[$CellContext`mult$$, 1, 
           If[$CellContext`orders$$ === "", 
            Graphics[], 
            $CellContext`PlotDuty[{
              ConstantArray[$CellContext`grads$$, 
               
               Length[$CellContext`bvall$$]], $CellContext`bvall$$, \
$CellContext`orders$$}, $CellContext`random$$]], 2, 
           If[$CellContext`orderm$$ === "", 
            Graphics[], 
            $CellContext`PlotDuty[{$CellContext`gradm$$, 
              Part[$CellContext`bvals$$, 
               Span[
               1, $CellContext`nshels$$]], $CellContext`orderm$$}, \
$CellContext`random$$]], 3, 
           If[$CellContext`orderc$$ === "", 
            Graphics[], 
            $CellContext`PlotDuty[{$CellContext`gradc$$, \
$CellContext`bvalc$$, $CellContext`orderc$$}, $CellContext`random$$]], 4, 
           If[$CellContext`orderd$$ === "", 
            Graphics[], 
            $CellContext`PlotDuty[{
              ConstantArray[$CellContext`gradd$$, 
               
               Length[$CellContext`bvald$$]], $CellContext`bvald$$, \
$CellContext`orderd$$}, $CellContext`random$$]]]]]), "Specifications" :> {
        Row[{"  Set Name ", 
          InputField[
           Dynamic[
            Part[$CellContext`names$$, $CellContext`mult$$]], String]}], 
        Delimiter, {{$CellContext`disp$$, 1, "display gradients"}, {
         1 -> "graphics", 2 -> "chart", 3 -> "text", 4 -> 
          "G load"}}, {{$CellContext`opacity$$, 0.5, "sphere opacity"}, 0, 1, 
         0.1, ControlType -> Slider}, 
        Row[{" sticks: ", 
          Checkbox[
           Dynamic[$CellContext`sticks$$]], "   mirror grad.: ", 
          Checkbox[
           Dynamic[$CellContext`mirror$$]], "   project grad. on half: ", 
          Checkbox[
           Dynamic[$CellContext`proj$$]]}], 
        Grid[{{
           Button[
           "top", $CellContext`vp$$ = {0, 0, 3.38}, ImageSize -> {50, 20}, 
            FrameMargins -> 0], 
           Button[
           "right", $CellContext`vp$$ = {3.38, 0, 0}, ImageSize -> {50, 20}, 
            FrameMargins -> 0], 
           Button[
           "front", $CellContext`vp$$ = {0, 3.38, 0}, ImageSize -> {50, 20}, 
            FrameMargins -> 0], 
           Button[
           "reset", {$CellContext`vp$$, $CellContext`vv$$, $CellContext`va$$} = \
{{1.3, -2.4, 2}, {0, 0, 1}, 30. Degree}, ImageSize -> {100, 20}, FrameMargins -> 
            0]}}], Delimiter, {{$CellContext`half$$, 1, 
          "Full or half sphere"}, {
         1 -> "half sphere", 0 -> "full sphere"}}, {{$CellContext`mult$$, 1, 
          "shells"}, {
         1 -> "single shell", 2 -> "multi shell", 3 -> "cartesian", 4 -> 
          "DWI"}, ControlType -> PopupMenu, 
         FieldSize -> {13, 0.7}}, {{$CellContext`type$$, "normal", "type"}, {
         "normal", "normal fixed z", "normal fixed x, y and z", "over-plus", 
          "over-plus fixed z", "over-plus fixed x, y and z"}, ControlType -> 
         PopupMenu, FieldSize -> {13, 0.7}, ControlPlacement -> 
         1}, {{$CellContext`dirs1$$, 30, "number of gradients"}, 6, 128, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         2}, {{$CellContext`nshels$$, 2, "number of shells"}, {2, 3, 4, 5, 6},
          ControlPlacement -> 3}, {{$CellContext`shel$$, 1, " shell"}, 
         Dynamic[
          Range[$CellContext`nshels$$]], ControlType -> SetterBar, 
         ControlPlacement -> 
         4}, {{$CellContext`dirs21$$, 15, "number of gradients shell 1"}, 3, 
         128, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         5}, {{$CellContext`dirs22$$, 15, "number of gradients shell 2"}, 3, 
         128, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         6}, {{$CellContext`dirs23$$, 15, "number of gradients shell 3"}, 3, 
         128, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         7}, {{$CellContext`dirs24$$, 15, "number of gradients shell 4"}, 3, 
         128, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         8}, {{$CellContext`dirs25$$, 15, "number of gradients shell 5"}, 3, 
         128, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         9}, {{$CellContext`dirs26$$, 15, "number of gradients shell 6"}, 3, 
         128, 1, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         10}, {{$CellContext`weight$$, 0.5, "shell weighting"}, 0, 1, 0.05, 
         ControlType -> Slider, Appearance -> "Labeled", ImageSize -> Tiny, 
         AppearanceElements -> {"InputField"}, ControlPlacement -> 
         11}, {{$CellContext`grid$$, 9, "cartesian grid size"}, 5, 15, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny, ControlPlacement -> 
         12}, {{$CellContext`gridf$$, True, "full even grid"}, {
         False -> "no (in between odd grid)", True -> "yes"}, 
         ControlPlacement -> 
         13}, {{$CellContext`typed$$, "normal", "           type"}, {
         "normal", "over-plus"}, ControlType -> SetterBar, ControlPlacement -> 
         14}, 
        PaneSelector[{1 -> Column[{
             Manipulate`Place[1], 
             Manipulate`Place[2]}], 2 -> Column[{
             Row[{
               Manipulate`Place[3], 
               Manipulate`Place[4]}], 
             PaneSelector[{
               Manipulate`Place[5], 
               Manipulate`Place[6], 
               Manipulate`Place[7], 
               Manipulate`Place[8], 
               Manipulate`Place[9], 
               Manipulate`Place[10]}, 
              Dynamic[$CellContext`shel$$]], 
             Manipulate`Place[11]}], 3 -> Column[{
             Manipulate`Place[12], 
             Manipulate`Place[13]}], 4 -> Manipulate`Place[14]}, 
         Dynamic[$CellContext`mult$$]], Delimiter, 
        PaneSelector[{1 -> Row[{"  b-value:   ", 
             InputField[
              Dynamic[$CellContext`bvall$$], Expression, Background -> Dynamic[
                If[
                 Or[
                  And[
                   AllTrue[$CellContext`bvall$$, NumberQ], 
                   ListQ[$CellContext`bvall$$]], 
                  NumberQ[$CellContext`bvall$$]], None, 
                 Lighter[
                  Lighter[Red]]]]]}], 2 -> Dynamic[
            Grid[
             Partition[
              PadRight[
               Map[Row[{"b-val" <> ToString[#] <> ":", 
                  InputField[
                   Dynamic[
                    Part[$CellContext`bvals$$, #]], Number, FieldSize -> 
                   5]}]& , 
                Range[1, $CellContext`nshels$$]], 6, ""], 3]]], 3 -> 
          Row[{"max b (corner):   ", 
             InputField[
              Dynamic[$CellContext`bvalc$$], Number]}], 4 -> 
          Row[{"      b-value:   ", 
             InputField[
              Dynamic[$CellContext`bvald$$], Expression, Background -> Dynamic[
                If[
                 Or[
                  And[
                   AllTrue[$CellContext`bvald$$, NumberQ], 
                   ListQ[$CellContext`bvald$$]], 
                  NumberQ[$CellContext`bvald$$]], None, 
                 Lighter[
                  Lighter[Red]]]]]}]}, 
         Dynamic[$CellContext`mult$$]], Delimiter, 
        Dynamic[
         Grid[{{"  interleave b: ", 
            Checkbox[
             Dynamic[$CellContext`inter$$]], "Optimize G load: ", 
            Checkbox[
             Dynamic[$CellContext`random$$]]}, 
           If[$CellContext`inter$$, {"  interleave b-value: ", 
             InputField[
              Dynamic[$CellContext`bi$$], Number, FieldSize -> 3], 
             "interleave b every: ", 
             PopupMenu[
              Dynamic[$CellContext`int$$], 
              Range[3, 20]]}, {}]}, Alignment -> Left]], 
        Delimiter, {{$CellContext`steps$$, 1000, "quality (iterations)"}, {
         500 -> "poor (500)", 1000 -> "normal (1000)", 2500 -> 
          "excellent (2500)", 5000 -> "perfect (5000)", 10000 -> 
          "extreme (10000)"}, ControlType -> PopupMenu, 
         FieldSize -> {9, 0.7}}, 
        Row[{
          Button["generate", $CellContext`app$$ = Lighter[
              Lighter[LightGray]]; $CellContext`disp$$ = 
            1; $CellContext`running$$ = True; $CellContext`mirror$$ = 
            If[$CellContext`half$$ == 0, False, True]; $CellContext`proj$$ = 
            False; Pause[0.2]; 
           Switch[$CellContext`mult$$, 
             4, $CellContext`gradd$$ = 
              If[$CellContext`typed$$ == "normal", {{1, 0, 0}, {0, 1, 0}, {0, 
                0, 1}}, {{-0.707107, -0.5, 0.5}, {0.707107, -0.5, 0.5}, {0., 
                0.707107, 0.707107}}]; Null, 
             3, $CellContext`gradc$$ = ($CellContext`pointsc$$ = \
$CellContext`GradGrid[$CellContext`grid$$, $CellContext`gridf$$]); Null, 
             2, {$CellContext`mpoints$$, $CellContext`vel$$, \
$CellContext`part$$} = $CellContext`Prepare[$CellContext`dirs2$$, \
$CellContext`half$$, {}, $CellContext`weight$$]; Pause[0.5]; 
             Do[$CellContext`mpoints$$ = \
$CellContext`GradOptimize4C[$CellContext`mpoints$$, $CellContext`vel$$, \
$CellContext`half$$]; $CellContext`ppoints$$ = Map[Chop[
                   Part[$CellContext`mpoints$$, #]]& , $CellContext`part$$]; 
               Null, {$CellContext`steps$$}]; $CellContext`gradm$$ = Map[Chop[
                 Part[$CellContext`mpoints$$, #]]& , $CellContext`part$$]; 
             Null, 1, $CellContext`grads$$ = 
              Switch[$CellContext`type$$, 
                "normal", $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$]; Pause[0.5]; 
                
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize1C[$CellContext`points$$, $CellContext`half$$], \
{$CellContext`steps$$}]; Chop[$CellContext`points$$], 
                "normal fixed z", $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$, {{0, 0, 
                   1}}]; Pause[0.5]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 
                    1, $CellContext`half$$], {$CellContext`steps$$}]; 
                Chop[$CellContext`points$$], 
                "normal fixed x, y and z", $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$, {{1, 0, 
                   0}, {0, 1, 0}, {0, 0, 1}}]; Pause[0.5]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 
                    3, $CellContext`half$$], {$CellContext`steps$$}]; 
                Chop[$CellContext`points$$], 
                "over-plus", $CellContext`half$$ = 
                 1; $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$}, $CellContext`half$$]; \
$CellContext`points$$ = 
                 Join[{{0, 0, 1}, {0, 1, 0}, {1, 0, 
                   0}}, $CellContext`points$$]; Pause[0.5]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 3, $CellContext`half$$], {
                   Round[$CellContext`steps$$/10]}]; $CellContext`charge$$ = 
                 Join[
                   ConstantArray[(0.5 $CellContext`dirs1$$)^1.2, 3], 
                   ConstantArray[1, $CellContext`dirs1$$]]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize3C[$CellContext`points$$, $CellContext`charge$$, 
                    3], {$CellContext`steps$$}]; $CellContext`points$$ = Chop[
                   Drop[$CellContext`points$$, 3]], 
                "over-plus fixed z", $CellContext`half$$ = 
                 1; $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$ - 
                    1}, $CellContext`half$$]; $CellContext`points$$ = 
                 Join[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}, {0., 0.707107, 
                    0.707107}}, $CellContext`points$$]; Pause[0.5]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 4, $CellContext`half$$], {
                   Round[$CellContext`steps$$/10]}]; $CellContext`charge$$ = 
                 Join[
                   ConstantArray[(0.5 $CellContext`dirs1$$)^1.2, 3], 
                   ConstantArray[1, $CellContext`dirs1$$]]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize3C[$CellContext`points$$, $CellContext`charge$$, 
                    4], {$CellContext`steps$$}]; $CellContext`points$$ = Chop[
                   Drop[$CellContext`points$$, 3]], 
                "over-plus fixed x, y and z", $CellContext`half$$ = 
                 1; $CellContext`points$$ = \
$CellContext`Prepare[{$CellContext`dirs1$$ - 
                    3}, $CellContext`half$$]; $CellContext`points$$ = 
                 Join[{{0, 0, 1}, {0, 1, 0}, {1, 0, 0}, {-0.707107, -0.5, 
                    0.5}, {0.707107, -0.5, 0.5}, {0., 0.707107, 
                    0.707107}}, $CellContext`points$$]; Pause[0.5]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize2C[$CellContext`points$$, 6, $CellContext`half$$], {
                   Round[$CellContext`steps$$/10]}]; $CellContext`charge$$ = 
                 Join[
                   ConstantArray[(0.5 $CellContext`dirs1$$)^1.2, 3], 
                   ConstantArray[1, $CellContext`dirs1$$]]; 
                Do[$CellContext`points$$ = \
$CellContext`GradOptimize3C[$CellContext`points$$, $CellContext`charge$$, 
                    6], {$CellContext`steps$$}]; $CellContext`points$$ = Chop[
                   Drop[$CellContext`points$$, 3]]]; Null]; 
           Switch[$CellContext`mult$$, 
             1, $CellContext`outs$$ = $CellContext`ConvertGrads[
                ConstantArray[$CellContext`grads$$, 
                 
                 Length[$CellContext`bvall$$]], $CellContext`bvall$$, \
$CellContext`bi$$]; $CellContext`orders$$ = $CellContext`FindOrder[
                ConstantArray[$CellContext`grads$$, 
                 Length[$CellContext`bvall$$]], $CellContext`bvall$$]; Null, 
             2, $CellContext`outm$$ = \
$CellContext`ConvertGrads[$CellContext`gradm$$, 
                Part[$CellContext`bvals$$, 
                 Span[
                 1, $CellContext`nshels$$]], $CellContext`bi$$]; \
$CellContext`orderm$$ = $CellContext`FindOrder[$CellContext`gradm$$, 
                Part[$CellContext`bvals$$, 
                 Span[1, $CellContext`nshels$$]]]; Null, 
             3, $CellContext`outc$$ = \
$CellContext`ConvertGrads[$CellContext`gradc$$, {$CellContext`bvalc$$}, \
$CellContext`bi$$]; $CellContext`orderc$$ = \
$CellContext`FindOrder[$CellContext`gradc$$, $CellContext`bvalc$$]; Null, 
             4, $CellContext`outd$$ = $CellContext`ConvertGrads[
                ConstantArray[$CellContext`gradd$$, 
                 
                 Length[$CellContext`bvald$$]], $CellContext`bvald$$, \
$CellContext`bi$$]; Part[$CellContext`outd$$, 2] = Join[
                
                If[$CellContext`typed$$ == "normal", {
                 " 1.00000    0.00000    0.00000       " <> ToString[
                    Round[$CellContext`bi$$, 0.1]], 
                  " 0.00000    1.00000    0.00000       " <> ToString[
                    Round[$CellContext`bi$$, 0.1]], 
                  " 0.00000    0.00000    1.00000       " <> ToString[
                    Round[$CellContext`bi$$, 0.1]]}, {
                 "-0.70711   -0.50000    0.50000       " <> ToString[
                    Round[$CellContext`bi$$, 0.1]], 
                  " 0.70711   -0.50000    0.50000       " <> ToString[
                    Round[$CellContext`bi$$, 0.1]], 
                  " 0.00000    0.70711    0.70711       " <> ToString[
                    Round[$CellContext`bi$$, 0.1]]}], {
                " 0.02704    0.79706    0.60330       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.09999   -0.59783    0.79536       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.23191   -0.77261    0.59101       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.52867   -0.79903    0.28646       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.18297   -0.98140    0.05818       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.86286    0.19578    0.46599       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.05126    0.20181    0.97808       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.66047    0.01890    0.75062       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.65426   -0.18818    0.73249       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.33052    0.11752    0.93646       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.95407   -0.14465    0.26236       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.14402   -0.86963    0.47224       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.78028   -0.56460    0.26904       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.75319   -0.31631    0.57675       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.41392   -0.31357    0.85460       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.56536    0.27275    0.77845       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.73743    0.58153    0.34354       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.29639   -0.44648    0.84428       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.38689    0.75986    0.52243       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.20081    0.52214    0.82888       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.79424   -0.60284    0.07593       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.98777    0.03678    0.15153       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.29973    0.90469    0.30281       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.95633    0.27860    0.08835       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.49976   -0.83556    0.22819       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.90574    0.41773    0.07170       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.77284    0.45698    0.44032       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.35339   -0.03796    0.93471       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.84918    0.07921    0.52213       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.50085    0.85590    0.12880       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.47526    0.67317    0.56654       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.87597   -0.32192    0.35923       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.64492    0.75075    0.14303       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.12687    0.96109    0.24536       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.60869   -0.54852    0.57325       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.03797   -0.21873    0.97505       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.47780   -0.64010    0.60165       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 "-0.57319    0.42677    0.69952       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.18760   -0.96394    0.18874       " <> ToString[
                   Round[$CellContext`bi$$, 0.1]], 
                 " 0.23342    0.50887    0.28591       " <> ToString[
                   
                   Round[$CellContext`bi$$, 
                    0.1]]}]; $CellContext`orderd$$ = $CellContext`FindOrder[
                ConstantArray[$CellContext`gradd$$, 
                 Length[$CellContext`bvald$$]], $CellContext`bvald$$]; Null]; 
           Pause[0.1]; $CellContext`running$$ = False; $CellContext`app$$ = 
            White; Null, Method -> "Queued", ImageSize -> {120, 23}], 
          Button["clipboard", 
           CopyToClipboard[$CellContext`out$$], ImageSize -> {100, 23}], 
          Button[
          "file", $CellContext`file$$ = 
            SystemDialogInput["FileSave", "dti_vectors_input.txt"]; If[
             Not[$CellContext`file$$ === $Canceled], 
             Export[$CellContext`file$$, $CellContext`out$$, "Text"]], 
           ImageSize -> {100, 23}, Method -> "Queued"]}], Delimiter, 
        Row[{
          Style[
          "Made by Martijn Froeling, Phd \nm.froeling@umcutrecht.nl", {Small, 
            GrayLevel[0.5]}]}], {{$CellContext`points$$, {}}, ControlType -> 
         None}, {{$CellContext`pointspl$$, {}}, ControlType -> 
         None}, {{$CellContext`pointsc$$, {}}, ControlType -> 
         None}, {{$CellContext`ppoints$$, {}}, ControlType -> 
         None}, {{$CellContext`ppointspl$$, {}}, ControlType -> 
         None}, {{$CellContext`mpoints$$, {}}, ControlType -> 
         None}, {{$CellContext`gradd$$, ""}, ControlType -> 
         None}, {{$CellContext`gradm$$, ""}, ControlType -> 
         None}, {{$CellContext`grads$$, ""}, ControlType -> 
         None}, {{$CellContext`gradc$$, ""}, ControlType -> 
         None}, {{$CellContext`outd$$, ""}, ControlType -> 
         None}, {{$CellContext`outc$$, ""}, ControlType -> 
         None}, {{$CellContext`outm$$, ""}, ControlType -> 
         None}, {{$CellContext`outs$$, ""}, ControlType -> 
         None}, {{$CellContext`orderd$$, ""}, ControlType -> 
         None}, {{$CellContext`orderc$$, ""}, ControlType -> 
         None}, {{$CellContext`orderm$$, ""}, ControlType -> 
         None}, {{$CellContext`orders$$, ""}, ControlType -> 
         None}, {{$CellContext`out$$, ""}, ControlType -> 
         None}, {{$CellContext`file$$, ""}, ControlType -> 
         None}, {{$CellContext`show$$, {1, 2}}, ControlType -> 
         None}, {{$CellContext`showc$$, All}, ControlType -> 
         None}, {{$CellContext`weight$$, 0.5}, ControlType -> 
         None}, {{$CellContext`grid$$, 9}, ControlType -> 
         None}, {{$CellContext`gridf$$, False}, ControlType -> 
         None}, {{$CellContext`running$$, False}, ControlType -> 
         None}, {{$CellContext`app$$, 
          GrayLevel[1]}, ControlType -> None}, {{$CellContext`size$$, 430}, 
         ControlType -> None}, {{$CellContext`inter$$, True}, ControlType -> 
         None}, {{$CellContext`bi$$, 0}, ControlType -> 
         None}, {{$CellContext`random$$, True}, ControlType -> 
         None}, {{$CellContext`sticks$$, False}, ControlType -> 
         None}, {{$CellContext`mirror$$, True}, ControlType -> 
         None}, {{$CellContext`proj$$, False}, ControlType -> 
         None}, {{$CellContext`int$$, 10}, ControlType -> 
         None}, {{$CellContext`vel$$, 1}, ControlType -> 
         None}, {{$CellContext`part$$, 1}, ControlType -> 
         None}, {{$CellContext`dirs1$$, 30}, ControlType -> 
         None}, {{$CellContext`dirs21$$, 15}, ControlType -> 
         None}, {{$CellContext`dirs22$$, 15}, ControlType -> 
         None}, {{$CellContext`dirs23$$, 15}, ControlType -> 
         None}, {{$CellContext`dirs24$$, 15}, ControlType -> 
         None}, {{$CellContext`dirs25$$, 15}, ControlType -> 
         None}, {{$CellContext`dirs26$$, 15}, ControlType -> 
         None}, {{$CellContext`bvald$$, {10, 20, 30, 40, 60, 80, 100, 200, 
          300, 500, 700, 1000}}, ControlType -> 
         None}, {{$CellContext`bvall$$, {1000}}, ControlType -> 
         None}, {{$CellContext`bvals$$, {1000, 2000, 3000, 4000, 5000, 6000}},
          ControlType -> None}, {{$CellContext`bvalc$$, 9000}, ControlType -> 
         None}, {$CellContext`dirs2$$, ControlType -> 
         None}, {$CellContext`type$$, ControlType -> 
         None}, {$CellContext`typed$$, ControlType -> 
         None}, {$CellContext`sc$$, ControlType -> None}, {$CellContext`scc$$,
          ControlType -> None}, {$CellContext`shel$$, ControlType -> 
         None}, {{$CellContext`nshels$$, 2}, ControlType -> 
         None}, {$CellContext`len$$, ControlType -> 
         None}, {$CellContext`rlen$$, ControlType -> 
         None}, {{$CellContext`rlenc$$, {}}, ControlType -> 
         None}, {$CellContext`charge$$, ControlType -> 
         None}, {{$CellContext`names$$, {
          "Set_Name", "Shells_Name", "Grid_Name", "DWI_Name"}}, ControlType -> 
         None}, {{$CellContext`vp$$, {1.3, -2.4, 2}}, ControlType -> 
         None}, {{$CellContext`va$$, 0.5235987755982988}, ControlType -> 
         None}, {{$CellContext`vv$$, {0, 0, 1}}, ControlType -> 
         None}, {$CellContext`charts$$, ControlType -> 
         None}, {{$CellContext`viewvec$$, {0, 0}}, ControlType -> 
         None}, {{$CellContext`ctype$$, 1}, ControlType -> None}}, 
      "Options" :> {
       ContentSize -> {450, 510}, ControlPlacement -> Left, ContinuousAction -> 
        False, AppearanceElements -> None, AutorunSequencing -> {1}, 
        SynchronousInitialization -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{800., {285., 290.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`FinalGrads[{
          Pattern[$CellContext`listi, 
           Blank[]], 
          Pattern[$CellContext`list0, 
           Blank[]], 
          Pattern[$CellContext`nb, 
           Blank[]]}, {
          Pattern[$CellContext`inter, 
           Blank[]], 
          Pattern[$CellContext`int, 
           Blank[]]}, {
          Pattern[$CellContext`random, 
           Blank[]], 
          Pattern[$CellContext`ordr, 
           
           Blank[]]}] := $CellContext`FinalGrads[{$CellContext`listi, \
$CellContext`list0, $CellContext`nb}, {$CellContext`inter, $CellContext`int}, \
{$CellContext`random, $CellContext`ordr}], $CellContext`FinalGrads[{
          Pattern[$CellContext`listi$, 
           Blank[]], 
          Pattern[$CellContext`list0$, 
           Blank[]], 
          Pattern[$CellContext`nb$, 
           Blank[]]}, {
          Pattern[$CellContext`inter$, 
           Blank[]], 
          Pattern[$CellContext`int$, 
           Blank[]], 
          Pattern[$CellContext`bi$, 
           Blank[]]}, {
          Pattern[$CellContext`random$, 
           Blank[]], 
          Pattern[$CellContext`ordr$, 
           Blank[]]}] := 
       Block[{$CellContext`part$$, $CellContext`listout, $CellContext`name, \
$CellContext`list}, $CellContext`list = If[$CellContext`random$, 
            
            Part[$CellContext`listi$, $CellContext`ordr$], \
$CellContext`listi$]; $CellContext`listout = DeleteDuplicates[
            Prepend[
             
             If[$CellContext`inter$, $CellContext`part$$ = 
               Partition[$CellContext`list, $CellContext`int$, \
$CellContext`int$, 1, {}]; Flatten[
                Riffle[$CellContext`part$$, 
                 Part[$CellContext`list0$, 
                  Span[1, 
                   Length[$CellContext`part$$]]]]], $CellContext`list], 
             " 0.00000    0.00000    1.00000       0.0"]]; $CellContext`name = 
          " (" <> ToString[
             Length[$CellContext`listout]] <> ", " <> $CellContext`nb$ <> 
           ")\n"; $CellContext`name <> StringJoin[
            Map[# <> "\n"& , $CellContext`listout]]], 
       SyntaxInformation[$CellContext`FinalGrads] = {"ArgumentsPattern" -> {
           Blank[], {
            Blank[], 
            Blank[], 
            Optional[
             Blank[]]}, {
            Blank[], 
            Blank[]}}}, $CellContext`SpherePlot[
         Pattern[$CellContext`size$, 
          Blank[]], 
         Pattern[$CellContext`op$, 
          Blank[]]] := If[
         Or[$CellContext`size$ == 0, $CellContext`size$ == 0.], 
         Graphics3D[{}, Lighting -> "Neutral", 
          PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}, {-1.1, 1.1}}, ViewPoint -> 
          Dynamic[FE`vp$$456], ViewVertical -> Dynamic[FE`vv$$456], ViewAngle -> 
          Dynamic[FE`va$$456], SphericalRegion -> True], 
         Graphics3D[{White, 
           Opacity[$CellContext`op$], 
           Sphere[{0, 0, 0}, 0.95 $CellContext`size$]}, Lighting -> "Neutral",
           PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}, {-1.1, 1.1}}, ViewPoint -> 
          Dynamic[FE`vp$$456], ViewVertical -> Dynamic[FE`vv$$456], ViewAngle -> 
          Dynamic[FE`va$$456], SphericalRegion -> True]], 
       Attributes[$CellContext`size$] = {Temporary}, 
       Attributes[$CellContext`op$] = {
        Temporary}, $CellContext`ListSpherePloti[
         Pattern[$CellContext`pts, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]], 
         Pattern[$CellContext`size, 
          Blank[]]] := Graphics3D[{$CellContext`col, 
          Map[
          Sphere[#, $CellContext`size]& , $CellContext`pts]}], \
$CellContext`ListStickPlot[
         Pattern[$CellContext`pts, 
          Blank[]], 
         Pattern[$CellContext`size, 
          Blank[]]] := Graphics3D[{Gray, 
          Map[
          Tube[0.98 {#, -#}, $CellContext`size]& , $CellContext`pts]}], \
$CellContext`PlotChartPoints[
         Pattern[$CellContext`grad$, 
          Blank[]], {
          Pattern[$CellContext`mirr$, 
           Blank[]], 
          Pattern[$CellContext`col$, 
           Blank[]]}] := Block[{$CellContext`style}, $CellContext`style = If[
            ListQ[$CellContext`col$], 
            Map[Directive[#, 
              PointSize[Large]]& , $CellContext`col$], 
            Directive[$CellContext`col$, 
             PointSize[Large]]]; Show[
           If[$CellContext`grad$ === {}, 
            Graphics[], 
            Show[
             ListPlot[
              If[ArrayDepth[$CellContext`grad$] == 2, 
               $CellContext`CalcPolarPts[$CellContext`grad$, FE`ctype$$456, 
                FE`viewvec$$456], 
               
               Map[$CellContext`CalcPolarPts[#, FE`ctype$$456, 
                 FE`viewvec$$456]& , $CellContext`grad$]], 
              PlotStyle -> $CellContext`style], 
             If[
              Not[$CellContext`mirr$], 
              Graphics[], 
              ListPlot[
               If[ArrayDepth[$CellContext`grad$] == 2, 
                $CellContext`CalcPolarPts[-$CellContext`grad$, FE`ctype$$456, 
                 FE`viewvec$$456], 
                $CellContext`CalcPolarPts[-Flatten[$CellContext`grad$, 1], 
                 FE`ctype$$456, FE`viewvec$$456]], PlotStyle -> {
                 Darker[Gray], 
                 PointSize[Large]}]]]]]], 
       Attributes[$CellContext`grad$] = {Temporary}, 
       Attributes[$CellContext`mirr$] = {Temporary}, 
       Attributes[$CellContext`col$] = {Temporary}, $CellContext`CalcPolarPts[
         Pattern[$CellContext`grad, 
          Blank[]], 
         Pattern[$CellContext`type, 
          
          Blank[]]] := $CellContext`CalcPolarPts[$CellContext`grad, \
$CellContext`type, {0., 0.}], $CellContext`CalcPolarPts[
         Pattern[$CellContext`grad, 
          Blank[]], 
         Pattern[$CellContext`type, 
          Blank[]], 
         Pattern[$CellContext`vec, 
          Blank[]]] := 
       Block[{$CellContext`sig, $CellContext`phi, $CellContext`gradp, \
$CellContext`rot}, $CellContext`rot = Dot[
            RotationMatrix[Part[$CellContext`vec, 1] 180 Degree, {0, 0, -1}], 
            RotationMatrix[
            Part[$CellContext`vec, 2] 90 Degree, {0, 1, 
             0}]]; {$CellContext`sig, $CellContext`phi} = Transpose[
            ReplaceAll[
             Quiet[
              Map[{90, 0} + {-1, 1} (Part[
                   ToSphericalCoordinates[
                    Dot[$CellContext`rot, #]], 
                   Span[2, All]]/Degree)& , $CellContext`grad]], 
             Indeterminate -> 0]]; Part[{
            
            Transpose[{$CellContext`phi Cos[$CellContext`sig Degree], 90 
              Sin[$CellContext`sig Degree]}], 
            Transpose[{$CellContext`phi, $CellContext`sig}], 
            
            Transpose[{$CellContext`phi, 90 
              Sin[$CellContext`sig 
                Degree]}]}, $CellContext`type]], $CellContext`PlotDuty[{
          Pattern[$CellContext`grad, 
           Blank[]], 
          Pattern[$CellContext`bval, 
           Blank[]], 
          Pattern[$CellContext`ord, 
           Blank[]]}, 
         Optional[
          Pattern[$CellContext`mode, 
           Blank[]], True]] := 
       Module[{$CellContext`grads, $CellContext`order, $CellContext`testgr, \
$CellContext`mn, $CellContext`ran}, $CellContext`grads = 
          Abs[$CellContext`grad Sqrt[$CellContext`bval]]; $CellContext`grads = 
          If[
            NumberQ[$CellContext`bval], $CellContext`grads, 
            
            Flatten[$CellContext`grads, 
             1]]; $CellContext`grads = ($CellContext`grads - 
            Min[$CellContext`grads])/(Max[$CellContext`grads] - 
           Min[$CellContext`grads]); $CellContext`ran = 
          MinMax[$CellContext`grads]; $CellContext`order = If[
            Not[$CellContext`mode], 
            Range[
             
             Length[$CellContext`grads]], $CellContext`ord]; \
$CellContext`testgr = Map[Mean[
             Transpose[
              Partition[#, 10, 1]]]& , 
            Transpose[
             Part[$CellContext`grads, $CellContext`order]]]; $CellContext`mn = 
          Map[Max, 
            Transpose[$CellContext`testgr]]; Show[
           
           ListLinePlot[$CellContext`testgr, PlotLabel -> 
            "Average Gradient Load", AxesStyle -> Directive[{Thick, Black}], 
            LabelStyle -> 
            Directive[{Black, Bold, 12, FontFamily -> "Helvetica"}], 
            Ticks -> {
             Automatic, {{0.1, "Min G"}, {0.55, "Avrg. G"}, {1, "Max G"}}}, 
            PlotRange -> {0, 1}, GridLines -> {None, {0.1, 0.55, 1, {
                Max[$CellContext`mn], 
                Directive[Red, Thick]}}}], 
           
           ListLinePlot[$CellContext`mn, PlotStyle -> 
            Directive[Black, Dashed, Thick]]]], 
       SyntaxInformation[$CellContext`PlotDuty] = {"ArgumentsPattern" -> {{
            Blank[], 
            Blank[], 
            Blank[]}, 
           Optional[
            Blank[]]}}, $CellContext`GradGrid[
         Pattern[$CellContext`n$, 
          Blank[]], 
         Pattern[$CellContext`full$, 
          Blank[]]] := 
       Block[{$CellContext`points$$}, $CellContext`points$$ = If[
            EvenQ[$CellContext`n$], 
            If[$CellContext`full$, 
             N[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j, $CellContext`k}, \
{$CellContext`i, -1, 1, 2/($CellContext`n$ - 1)}, {$CellContext`j, -1, 1, 
                 2/($CellContext`n$ - 1)}, {$CellContext`k, 
                 1/($CellContext`n$ - 1), 1, 2/($CellContext`n$ - 1)}], 2]], 
             N[
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j, $CellContext`k}, \
{$CellContext`i, -1 + 1/$CellContext`n$, 1, 
                 2/$CellContext`n$}, {$CellContext`j, -1 + 1/$CellContext`n$, 
                 1, 2/$CellContext`n$}, {$CellContext`k, 1/$CellContext`n$, 1,
                  2/$CellContext`n$}], 2]]], $CellContext`points$$ = N[
               Flatten[
                
                Table[{$CellContext`i, $CellContext`j, $CellContext`k}, \
{$CellContext`i, -1, 1, 2/($CellContext`n$ - 1)}, {$CellContext`j, -1, 1, 
                  2/($CellContext`n$ - 1)}, {$CellContext`k, 0, 1, 
                  2/($CellContext`n$ - 1)}], 2]]; DeleteCases[
              Map[If[
                Or[
                 And[Part[#, 1] < 0., Part[
                    SlotSequence[1], 3] == 0.], 
                 And[Part[#, 1] == 0., Part[#, 2] < 0, Part[
                    SlotSequence[1], 3] == 0.]], 
                Null, #]& , $CellContext`points$$], 
              Null]]; $CellContext`points$$ = N[
            
            Sort[$CellContext`points$$, Norm[#] < 
             Norm[#2]& ]]], $CellContext`Prepare[
         Pattern[$CellContext`numbs, 
          Blank[]], 
         Pattern[$CellContext`half, 
          
          Blank[]]] := $CellContext`Prepare[$CellContext`numbs, \
$CellContext`half, {}, 0], $CellContext`Prepare[
         Pattern[$CellContext`numbs, 
          Blank[]], 
         Pattern[$CellContext`half, 
          Blank[]], 
         Pattern[$CellContext`fixed, 
          
          Blank[]]] := $CellContext`Prepare[$CellContext`numbs, \
$CellContext`half, $CellContext`fixed, 0], $CellContext`Prepare[
         Pattern[$CellContext`numbs$, 
          Blank[]], 
         Pattern[$CellContext`half$, 
          Blank[]], 
         Pattern[$CellContext`fixed$, 
          Blank[]], 
         Pattern[$CellContext`alph$, 
          Blank[]]] := 
       Block[{$CellContext`nf, $CellContext`ni, $CellContext`ni2, \
$CellContext`parti, $CellContext`part$$, $CellContext`velocity0, \
$CellContext`velocity1, $CellContext`vel$$}, $CellContext`nf = 
          Length[$CellContext`fixed$]; $CellContext`ni = 
          Total[$CellContext`numbs$] - $CellContext`nf; 
         If[Length[$CellContext`numbs$] > 
           1, $CellContext`parti = Map[{1, 0} + #& , 
              Drop[
               Partition[
                Prepend[
                 Accumulate[$CellContext`numbs$], 0], 2, 1, 
                1], -1]]; $CellContext`part$$ = Map[Range[
               Part[#, 1], 
               Part[#, 2]]& , $CellContext`parti]; $CellContext`ni2 = 
            If[$CellContext`half$ == 0, $CellContext`ni, 
              2 $CellContext`ni]; $CellContext`velocity0 = 
            ConstantArray[
             0, {$CellContext`ni2, $CellContext`ni2, 
               3}]; $CellContext`velocity1 = 
            ConstantArray[1, {$CellContext`ni2, $CellContext`ni2, 3}]; 
           If[$CellContext`half$ == 1, 
             Map[Table[
               Part[$CellContext`velocity0, $CellContext`i, $CellContext`j] = \
{1, 1, 1}; 
                Part[$CellContext`velocity0, $CellContext`i, $CellContext`j + \
$CellContext`ni] = {1, 1, 1}; 
                Part[$CellContext`velocity0, $CellContext`i + \
$CellContext`ni, $CellContext`j] = {1, 1, 1}; 
                Part[$CellContext`velocity0, $CellContext`i + \
$CellContext`ni, $CellContext`j + $CellContext`ni] = {1, 1, 1}; 
                Null, {$CellContext`i, 
                 Part[#, 1], 
                 Part[#, 2]}, {$CellContext`j, 
                 Part[#, 1], 
                 Part[#, 2]}]& , $CellContext`parti]; Null, 
             Map[Table[
               Part[$CellContext`velocity0, $CellContext`i, $CellContext`j] = \
{1, 1, 1}; Null, {$CellContext`i, 
                 Part[#, 1], 
                 Part[#, 2]}, {$CellContext`j, 
                 Part[#, 1], 
                 Part[#, 2]}]& , $CellContext`parti]; 
             Null]; $CellContext`vel$$ = (
               1 - $CellContext`alph$) $CellContext`velocity0 + \
$CellContext`alph$ $CellContext`velocity1; {
             $CellContext`RandInit[$CellContext`ni, $CellContext`half$], \
$CellContext`vel$$, $CellContext`part$$}, 
           If[$CellContext`fixed$ === {}, 
            $CellContext`RandInit[$CellContext`ni, $CellContext`half$], 
            Join[$CellContext`fixed$, 
             $CellContext`RandInit[$CellContext`ni, $CellContext`half$]]]]], \
$CellContext`RandInit[
         Pattern[$CellContext`ni, 
          Blank[]], 
         Pattern[$CellContext`half, 
          Blank[]]] := If[$CellContext`half == 1, 
         Map[Sign[Part[#, 3] + 10.^(-16)] Normalize[#]& , 
          RandomReal[
           NormalDistribution[], {$CellContext`ni, 3}]], 
         Map[Normalize[#]& , 
          RandomReal[
           
           NormalDistribution[], {$CellContext`ni, 
            3}]]], $CellContext`GradOptimize4C = 
       CompiledFunction[{11, 13.2, 5468}, {{
           Blank[Real], 2}, {
           Blank[Real], 3}, 
          Blank[Integer]}, {{3, 2, 0}, {3, 3, 1}, {2, 0, 0}, {3, 2, 
         3}}, {{0, {2, 0, 14}}, {4, {2, 0, 6}}, {1.*^16, {3, 0, 0}}, {{2, 3, 
          1}, {2, 1, 7}}, {2, {2, 0, 3}}, {-1, {2, 0, 12}}, {1, {2, 0, 2}}, {
          3, {2, 0, 5}}, {1.*^-16, {3, 0, 1}}}, {1, 15, 2, 0, 
         14}, {{33, 0, 4}, {24, 0, 2, 0}, {2, 0, 5}, {40, 43, 3, 2, 0, 3, 2, 
          9}, {42, "Join", 3, 2, 0, 3, 2, 9, 3, 2, 5}, {15, 3, 4, 1}, {3, 
          3}, {42, "CopyTensor", 3, 2, 0, 3, 2, 5}, {6, 4, 1}, {
          47, ConstantArray, 3, 2, 5, 2, 0, 1, 3, 3, 9}, {
          42, "Transpose", 3, 3, 9, 3, 3, 6}, {40, 43, 3, 3, 6, 3, 3, 4}, {44,
           9, 4, 6}, {47, ConstantArray, 3, 0, 0, 2, 0, 1, 3, 1, 4}, {
          47, DiagonalMatrix, 3, 1, 4, 3, 2, 2}, {
          42, "Transpose", 3, 3, 6, 2, 1, 7, 2, 0, 5, 3, 3, 4}, {40, 56, 3, 3,
           4, 3, 3, 3}, {42, "Total", 3, 3, 3, 2, 0, 6, 3, 2, 4}, {44, 4, 2, 
          4}, {40, 60, 3, 2, 4, 3, 2, 3}, {41, 259, 3, 3, 6, 3, 2, 3, 3, 3, 
          8}, {45, 1, 8, 3}, {42, "Total", 3, 3, 3, 2, 0, 6, 3, 2, 8}, {44, 5,
           8, 3}, {33, 3, 8}, {6, 12, 13}, {35, 8, 13, 3, 10}, {6, 14, 11}, {
          3, 4}, {37, 3, 11, 0, 12}, {47, Normalize, 3, 1, 12, 3, 1, 13}, {36,
           13, 13, 0, 10}, {4, 11, 8, -3}, {24, 0, 2, 0}, {2, 0, 7}, {38, 10, 
          2, -1, 0, 5, 1, 3}, {41, 257, 3, 0, 1, 3, 1, 3, 3, 1, 11}, {40, 44, 
          3, 1, 11, 2, 1, 3}, {41, 259, 2, 1, 3, 3, 2, 10, 3, 2, 11}, {
          42, "CopyTensor", 3, 2, 11, 3, 2, 10}, {3, 1}, {34, 1, 4, 2, 4, 2, 
          14, 2, 11}, {38, 10, 3, 11, 2, 3}, {1}}, 
         Function[{$CellContext`points, $CellContext`vel, $CellContext`half}, 
          
          Block[{$CellContext`n, $CellContext`n2, $CellContext`pointsi, \
$CellContext`pointsmat, $CellContext`distmatxyz, $CellContext`diag, \
$CellContext`distmat, $CellContext`velocity, $CellContext`pointsnew}, \
$CellContext`n = Length[$CellContext`points]; 
           If[$CellContext`half == 
             1, $CellContext`pointsi = 
              Join[$CellContext`points, -$CellContext`points]; \
$CellContext`n2 = 2 $CellContext`n; 
             Null, $CellContext`pointsi = $CellContext`points; \
$CellContext`n2 = $CellContext`n; Null]; $CellContext`pointsmat = 
            ConstantArray[$CellContext`pointsi, $CellContext`n2]; \
$CellContext`distmatxyz = $CellContext`pointsmat - 
             Transpose[$CellContext`pointsmat]; $CellContext`diag = 
            DiagonalMatrix[
              ConstantArray[1.*^16, $CellContext`n2]]; $CellContext`distmat = 
            Total[Transpose[$CellContext`distmatxyz, {2, 3, 
                 1}]^2] + $CellContext`diag; $CellContext`velocity = 
            Total[$CellContext`vel \
($CellContext`distmatxyz/$CellContext`distmat)]; $CellContext`pointsnew = 
            Map[Normalize[#]& , $CellContext`pointsi + $CellContext`velocity]; 
           If[$CellContext`half == 
             1, $CellContext`pointsnew = 
              Sign[Part[$CellContext`pointsnew, All, 3] + 
                 1.*^-16] $CellContext`pointsnew; Null]; 
           Part[$CellContext`pointsnew, 
             Span[1, $CellContext`n]]]], 
         Evaluate], $CellContext`GradOptimize1C = 
       CompiledFunction[{11, 13.2, 5468}, {{
           Blank[Real], 2}, 
          Blank[Integer]}, {{3, 2, 0}, {2, 0, 0}, {3, 2, 
         8}}, {{0, {2, 0, 14}}, {4, {2, 0, 6}}, {{2, 3, 1}, {2, 1, 6}}, {
          2, {2, 0, 3}}, {-1, {2, 0, 12}}, {1, {2, 0, 2}}, {
          1.*^32, {3, 0, 0}}, {3, {2, 0, 5}}, {1.*^-16, {3, 0, 1}}}, {1, 15, 
         2, 0, 13}, {{33, 0, 4}, {24, 0, 2, 0}, {2, 0, 5}, {40, 43, 3, 2, 0, 
          3, 2, 7}, {42, "Join", 3, 2, 0, 3, 2, 7, 3, 2, 4}, {15, 3, 4, 1}, {
          3, 3}, {42, "CopyTensor", 3, 2, 0, 3, 2, 4}, {6, 4, 1}, {
          47, ConstantArray, 3, 2, 4, 2, 0, 1, 3, 3, 7}, {
          42, "Transpose", 3, 3, 7, 3, 3, 5}, {40, 43, 3, 3, 5, 3, 3, 3}, {44,
           7, 3, 5}, {47, ConstantArray, 3, 0, 0, 2, 0, 1, 3, 1, 3}, {
          47, DiagonalMatrix, 3, 1, 3, 3, 2, 1}, {
          42, "Transpose", 3, 3, 5, 2, 1, 6, 2, 0, 5, 3, 3, 3}, {40, 56, 3, 3,
           3, 3, 3, 2}, {42, "Total", 3, 3, 2, 2, 0, 6, 3, 2, 3}, {44, 3, 1, 
          3}, {40, 60, 3, 2, 3, 3, 2, 2}, {41, 259, 3, 3, 5, 3, 2, 2, 3, 3, 
          8}, {42, "Total", 3, 3, 8, 2, 0, 6, 3, 2, 2}, {44, 4, 2, 8}, {33, 8,
           8}, {6, 12, 13}, {35, 8, 13, 3, 9}, {6, 14, 11}, {3, 4}, {37, 8, 
          11, 0, 11}, {47, Normalize, 3, 1, 11, 3, 1, 12}, {36, 13, 12, 0, 
          9}, {4, 11, 8, -3}, {24, 0, 2, 0}, {2, 0, 7}, {38, 9, 2, -1, 0, 5, 
          1, 8}, {41, 257, 3, 0, 1, 3, 1, 8, 3, 1, 10}, {40, 44, 3, 1, 10, 2, 
          1, 8}, {41, 259, 2, 1, 8, 3, 2, 9, 3, 2, 10}, {
          42, "CopyTensor", 3, 2, 10, 3, 2, 9}, {3, 1}, {34, 1, 4, 2, 4, 2, 
          14, 2, 10}, {38, 9, 3, 10, 2, 8}, {1}}, 
         Function[{$CellContext`points, $CellContext`half}, 
          
          Block[{$CellContext`n, $CellContext`n2, $CellContext`pointsi, \
$CellContext`pointsmat, $CellContext`distmatxyz, $CellContext`diag, \
$CellContext`distmat, $CellContext`velocity, $CellContext`pointsnew, \
$CellContext`sign}, $CellContext`n = Length[$CellContext`points]; 
           If[$CellContext`half == 
             1, $CellContext`pointsi = 
              Join[$CellContext`points, -$CellContext`points]; \
$CellContext`n2 = 2 $CellContext`n; 
             Null, $CellContext`pointsi = $CellContext`points; \
$CellContext`n2 = $CellContext`n]; $CellContext`pointsmat = 
            ConstantArray[$CellContext`pointsi, $CellContext`n2]; \
$CellContext`distmatxyz = $CellContext`pointsmat - 
             Transpose[$CellContext`pointsmat]; $CellContext`diag = 
            DiagonalMatrix[
              ConstantArray[1.*^32, $CellContext`n2]]; $CellContext`distmat = 
            Total[Transpose[$CellContext`distmatxyz, {2, 3, 
                 1}]^2] + $CellContext`diag; $CellContext`velocity = 
            Total[$CellContext`distmatxyz/$CellContext`distmat]; \
$CellContext`pointsnew = 
            Map[Normalize[#]& , $CellContext`pointsi + $CellContext`velocity]; 
           If[$CellContext`half == 
             1, $CellContext`pointsnew = 
              Sign[Part[$CellContext`pointsnew, All, 3] + 
                 1.*^-16] $CellContext`pointsnew; Null]; 
           Part[$CellContext`pointsnew, 
             Span[1, $CellContext`n]]]], 
         Evaluate], $CellContext`GradOptimize2C = 
       CompiledFunction[{11, 13.2, 5468}, {{
           Blank[Real], 2}, 
          Blank[Real], 
          Blank[Integer]}, {{3, 2, 0}, {3, 0, 0}, {2, 0, 0}, {3, 2, 
         9}}, {{0, {2, 0, 9}}, {{0., 0., 0.}, {3, 1, 11}}, {4, {2, 0, 6}}, {
          1.*^16, {3, 0, 1}}, {{2, 3, 1}, {2, 1, 6}}, {
          2, {2, 0, 3}}, {-1, {2, 0, 12}}, {1, {2, 0, 2}}, {3, {2, 0, 5}}, {
          1.*^-16, {3, 0, 5}}}, {1, 17, 6, 0, 
         16}, {{33, 0, 4}, {40, 43, 3, 2, 0, 3, 2, 10}, {
          42, "Join", 3, 2, 0, 3, 2, 10, 3, 2, 7}, {24, 0, 2, 0}, {2, 0, 6}, {
          40, 43, 3, 2, 0, 3, 2, 10}, {
          42, "Join", 3, 2, 0, 3, 2, 10, 3, 2, 4}, {
          42, "CopyTensor", 3, 2, 4, 3, 2, 7}, {15, 3, 4, 1}, {3, 3}, {
          42, "CopyTensor", 3, 2, 0, 3, 2, 7}, {6, 4, 1}, {
          47, ConstantArray, 3, 2, 7, 2, 0, 1, 3, 3, 4}, {
          42, "Transpose", 3, 3, 4, 3, 3, 10}, {40, 43, 3, 3, 10, 3, 3, 5}, {
          44, 4, 5, 10}, {47, ConstantArray, 3, 0, 1, 2, 0, 1, 3, 1, 5}, {
          47, DiagonalMatrix, 3, 1, 5, 3, 2, 1}, {
          42, "Transpose", 3, 3, 10, 2, 1, 6, 2, 0, 5, 3, 3, 5}, {40, 56, 3, 
          3, 5, 3, 3, 3}, {42, "Total", 3, 3, 3, 2, 0, 6, 3, 2, 5}, {44, 5, 1,
           5}, {40, 60, 3, 2, 5, 3, 2, 3}, {41, 259, 3, 3, 10, 3, 2, 3, 3, 3, 
          2}, {42, "Total", 3, 3, 2, 2, 0, 6, 3, 2, 3}, {24, 0, 2, 0}, {2, 0, 
          23}, {40, 50, 3, 0, 0, 2, 0, 10}, {6, 9, 7}, {35, 10, 2, 2}, {6, 9, 
          11}, {3, 2}, {36, 7, 11, 2, 2}, {4, 11, 10, -1}, {12, 2, 4, 10}, {
          10, 4, 3}, {13, 3, 0, 3}, {10, 10, 4}, {
          42, "IteratorCountR", 3, 0, 4, 3, 0, 3, 2, 0, 11}, {6, 9, 13}, {41, 
          258, 2, 0, 11, 2, 0, 12, 2, 0, 14}, {35, 14, 2, 9}, {6, 12, 15}, {3,
           3}, {12, 10, 15, 16}, {36, 13, 16, 2, 9}, {4, 15, 11, -2}, {
          42, "Join", 2, 1, 2, 2, 1, 9, 2, 1, 8}, {3, 9}, {40, 50, 3, 0, 0, 2,
           0, 7}, {6, 9, 13}, {35, 7, 2, 2}, {6, 9, 14}, {3, 2}, {36, 13, 14, 
          2, 2}, {4, 14, 7, -1}, {42, "CopyTensor", 2, 1, 2, 2, 1, 8}, {33, 8,
           14}, {6, 12, 11}, {35, 14, 11, 3, 2}, {6, 9, 10}, {3, 4}, {37, 8, 
          10, 2, 15}, {39, 3, 0, 15, 1, 11}, {36, 11, 11, 0, 2}, {4, 10, 
          14, -3}, {44, 7, 3, 9}, {33, 9, 7}, {6, 12, 14}, {35, 7, 14, 3, 
          12}, {6, 9, 11}, {3, 4}, {37, 9, 11, 0, 14}, {
          47, Normalize, 3, 1, 14, 3, 1, 15}, {36, 14, 15, 0, 12}, {4, 11, 
          7, -3}, {24, 0, 2, 0}, {2, 0, 7}, {38, 12, 2, -1, 0, 5, 1, 9}, {41, 
          257, 3, 0, 5, 3, 1, 9, 3, 1, 13}, {40, 44, 3, 1, 13, 2, 1, 9}, {41, 
          259, 2, 1, 9, 3, 2, 12, 3, 2, 13}, {
          42, "CopyTensor", 3, 2, 13, 3, 2, 12}, {3, 1}, {34, 1, 4, 2, 4, 2, 
          9, 2, 13}, {38, 12, 3, 13, 2, 9}, {1}}, 
         Function[{$CellContext`points, $CellContext`nf, $CellContext`half}, 
          
          Block[{$CellContext`n, $CellContext`n2, $CellContext`pointsi, \
$CellContext`pointsmat, $CellContext`distmatxyz, $CellContext`diag, \
$CellContext`distmat, $CellContext`velocity, $CellContext`pointsnew, \
$CellContext`rang}, $CellContext`n = 
            Length[$CellContext`points]; $CellContext`pointsi = 
            Join[$CellContext`points, -$CellContext`points]; 
           If[$CellContext`half == 
             1, $CellContext`pointsi = 
              Join[$CellContext`points, -$CellContext`points]; \
$CellContext`n2 = 2 $CellContext`n; 
             Null, $CellContext`pointsi = $CellContext`points; \
$CellContext`n2 = $CellContext`n]; $CellContext`pointsmat = 
            ConstantArray[$CellContext`pointsi, $CellContext`n2]; \
$CellContext`distmatxyz = $CellContext`pointsmat - 
             Transpose[$CellContext`pointsmat]; $CellContext`diag = 
            DiagonalMatrix[
              ConstantArray[1.*^16, $CellContext`n2]]; $CellContext`distmat = 
            Total[Transpose[$CellContext`distmatxyz, {2, 3, 
                 1}]^2] + $CellContext`diag; $CellContext`velocity = 
            Total[$CellContext`distmatxyz/$CellContext`distmat]; 
           If[$CellContext`half == 1, $CellContext`rang = Round[
                Join[
                 Range[1, $CellContext`nf], 
                 Range[
                 1 + $CellContext`n, $CellContext`n + $CellContext`nf]]]; 
             Null, $CellContext`rang = Round[
                Range[1, $CellContext`nf]]; Null]; 
           Map[(Part[$CellContext`velocity, #] = {0., 0., 
              0.})& , $CellContext`rang]; $CellContext`pointsnew = 
            Map[Normalize[#]& , $CellContext`pointsi + $CellContext`velocity]; 
           If[$CellContext`half == 
             1, $CellContext`pointsnew = 
              Sign[Part[$CellContext`pointsnew, All, 3] + 
                 1.*^-16] $CellContext`pointsnew; Null]; 
           Part[$CellContext`pointsnew, 
             Span[1, $CellContext`n]]]], 
         Evaluate], $CellContext`GradOptimize3C = 
       CompiledFunction[{11, 13.2, 5468}, {{
           Blank[Real], 2}, {
           Blank[Real], 1}, 
          Blank[Real]}, {{3, 2, 0}, {3, 1, 1}, {3, 0, 0}, {3, 2, 
         13}}, {{0, {2, 0, 7}}, {{0., 0., 0.}, {3, 1, 15}}, {4, {2, 0, 4}}, {{
          2, 3, 1}, {2, 1, 10}}, {2, {2, 0, 1}}, {-1, {2, 0, 10}}, {
          1.*^32, {3, 0, 1}}, {1, {2, 0, 5}}, {3, {2, 0, 3}}, {
          1.*^-16, {3, 0, 5}}}, {0, 14, 6, 0, 
         19}, {{33, 0, 0}, {40, 43, 3, 2, 0, 3, 2, 14}, {
          42, "Join", 3, 2, 0, 3, 2, 14, 3, 2, 8}, {
          42, "Join", 3, 1, 1, 3, 1, 1, 3, 1, 14}, {15, 1, 0, 6}, {
          47, ConstantArray, 3, 2, 8, 2, 0, 6, 3, 3, 5}, {15, 1, 0, 6}, {
          47, ConstantArray, 3, 1, 14, 2, 0, 6, 3, 2, 2}, {
          42, "Transpose", 3, 3, 5, 3, 3, 12}, {40, 43, 3, 3, 12, 3, 3, 7}, {
          44, 5, 7, 12}, {42, "Transpose", 3, 2, 2, 3, 2, 7}, {45, 2, 7, 9}, {
          15, 1, 0, 6}, {47, ConstantArray, 3, 0, 1, 2, 0, 6, 3, 1, 7}, {
          47, DiagonalMatrix, 3, 1, 7, 3, 2, 6}, {
          42, "Transpose", 3, 3, 12, 2, 1, 10, 2, 0, 3, 3, 3, 7}, {40, 56, 3, 
          3, 7, 3, 3, 4}, {42, "Total", 3, 3, 4, 2, 0, 4, 3, 2, 7}, {44, 7, 6,
           7}, {40, 60, 3, 2, 7, 3, 2, 4}, {41, 259, 3, 3, 12, 3, 2, 4, 3, 3, 
          3}, {41, 259, 3, 2, 9, 3, 3, 3, 3, 3, 4}, {
          42, "Total", 3, 3, 4, 2, 0, 4, 3, 2, 3}, {40, 50, 3, 0, 0, 2, 0, 
          6}, {6, 7, 9}, {35, 6, 2, 4}, {6, 7, 11}, {3, 2}, {36, 9, 11, 2, 
          4}, {4, 11, 6, -1}, {12, 5, 0, 6}, {10, 0, 3}, {13, 3, 0, 3}, {10, 
          6, 4}, {42, "IteratorCountR", 3, 0, 4, 3, 0, 3, 2, 0, 11}, {6, 7, 
          2}, {41, 258, 2, 0, 11, 2, 0, 10, 2, 0, 8}, {35, 8, 2, 13}, {6, 10, 
          12}, {3, 3}, {12, 6, 12, 13}, {36, 2, 13, 2, 13}, {4, 12, 11, -2}, {
          42, "Join", 2, 1, 4, 2, 1, 13, 2, 1, 11}, {46, 
           Function[{$CellContext`points, $CellContext`char, $CellContext`nf},
             Part[$CellContext`velocity, $CellContext`rang] = {0., 0., 
             0.}], {$CellContext`rang, 2, 1, 11, 
            Block}, {$CellContext`pointsmat, 3, 3, 5, 
            Block}, {$CellContext`diag, 3, 2, 6, Block}, {$CellContext`chari, 
            3, 1, 14, Block}, {$CellContext`charmat, 3, 2, 2, 
            Block}, {$CellContext`distmatxyz, 3, 3, 12, 
            Block}, {$CellContext`velocity, 3, 2, 3, 
            Block}, {$CellContext`pointsi, 3, 2, 8, 
            Block}, {$CellContext`distmat, 3, 2, 7, Block}, {$CellContext`n, 
            2, 0, 0, Block}, {$CellContext`chars, 3, 2, 9, Block}, 3, 2, 0, 3,
            1, 1, 3, 0, 0, 6, 0, 17}, {44, 8, 3, 4}, {33, 4, 8}, {6, 10, 
          11}, {35, 8, 11, 3, 16}, {6, 7, 6}, {3, 9}, {37, 4, 6, 0, 17}, {38, 
          17, 0, 3, 0, 2}, {13, 2, 5, 2}, {40, 44, 3, 0, 2, 2, 0, 12}, {37, 4,
           6, 0, 17}, {47, Normalize, 3, 1, 17, 3, 1, 18}, {41, 259, 2, 0, 12,
           3, 1, 18, 3, 1, 17}, {36, 11, 17, 0, 16}, {4, 6, 8, -8}, {34, 1, 4,
           5, 0, 5, 7, 2, 4}, {38, 16, 3, 4, 2, 13}, {1}}, 
         Function[{$CellContext`points, $CellContext`char, $CellContext`nf}, 
          
          Block[{$CellContext`n, $CellContext`pointsi, \
$CellContext`pointsmat, $CellContext`distmatxyz, $CellContext`diag, \
$CellContext`distmat, $CellContext`velocity, $CellContext`pointsnew, \
$CellContext`chari, $CellContext`charmat, $CellContext`chars, \
$CellContext`rang}, $CellContext`n = 
            Length[$CellContext`points]; $CellContext`pointsi = 
            Join[$CellContext`points, -$CellContext`points]; \
$CellContext`chari = 
            Join[$CellContext`char, $CellContext`char]; \
$CellContext`pointsmat = 
            ConstantArray[$CellContext`pointsi, 
              2 $CellContext`n]; $CellContext`charmat = 
            ConstantArray[$CellContext`chari, 
              2 $CellContext`n]; $CellContext`distmatxyz = \
$CellContext`pointsmat - 
             Transpose[$CellContext`pointsmat]; $CellContext`chars = \
$CellContext`charmat Transpose[$CellContext`charmat]; $CellContext`diag = 
            DiagonalMatrix[
              ConstantArray[1.*^32, 2 $CellContext`n]]; $CellContext`distmat = 
            Total[Transpose[$CellContext`distmatxyz, {2, 3, 
                 1}]^2] + $CellContext`diag; $CellContext`velocity = 
            Total[$CellContext`chars \
($CellContext`distmatxyz/$CellContext`distmat)]; $CellContext`rang = Round[
              Join[
               Range[1, $CellContext`nf], 
               Range[1 + $CellContext`n, $CellContext`n + $CellContext`nf]]]; 
           Part[$CellContext`velocity, $CellContext`rang] = {0., 0., 
             0.}; $CellContext`pointsnew = 
            Map[Sign[Part[#, 3] + 1.*^-16] 
              Normalize[#]& , $CellContext`pointsi + $CellContext`velocity]; 
           Part[$CellContext`pointsnew, 
             Span[1, $CellContext`n]]]], Evaluate], $CellContext`ConvertGrads[
         Pattern[$CellContext`gradi, 
          Blank[]], 
         Pattern[$CellContext`bv, 
          
          Blank[]]] := $CellContext`ConvertGrads[$CellContext`gradi, \
$CellContext`bv, 0], $CellContext`ConvertGrads[
         Pattern[$CellContext`gradi$, 
          Blank[]], 
         Pattern[$CellContext`bv$, 
          Blank[]], 
         Pattern[$CellContext`bi$, 
          Blank[]]] := 
       Block[{$CellContext`depth, $CellContext`norm, $CellContext`gradu, \
$CellContext`grad, $CellContext`bval, $CellContext`bvalstr, \
$CellContext`gradstr, $CellContext`grad0str, $CellContext`list, \
$CellContext`list0, $CellContext`part$$, $CellContext`listout, \
$CellContext`bvs, $CellContext`gr, $CellContext`name, $CellContext`nb}, \
$CellContext`depth = ReplaceAll[
            ArrayDepth[$CellContext`gradi$], 1 -> 3]; $CellContext`norm = 
          Map[Norm, $CellContext`gradi$, {$CellContext`depth - 
             1}]; $CellContext`gradu = DeleteDuplicates[
            Map[Normalize, 
             
             Flatten[$CellContext`gradi$, $CellContext`depth - 
              2]]]; $CellContext`grad = 
          Map[Normalize, $CellContext`gradi$, {$CellContext`depth - 
             1}]; $CellContext`bval = 
          If[Length[$CellContext`bv$] == 1, 
            Part[$CellContext`bv$, 1] ($CellContext`norm/
              Max[$CellContext`norm])^2, ($CellContext`norm/
              Max[$CellContext`norm])^2 $CellContext`bv$]; \
$CellContext`bvalstr = Flatten[
            Map[($CellContext`bvs = ToString[
                NumberForm[
                 Round[
                  Clip[#, {0, 35000}], 0.1], {7, 1}]]; StringJoin[
                ConstantArray[
                " ", 10 - 
                 StringLength[$CellContext`bvs]]] <> $CellContext`bvs)& , \
$CellContext`bval, {$CellContext`depth - 1}]]; $CellContext`gradstr = Flatten[
            Map[($CellContext`gr = ToString[
                NumberForm[
                 Round[#, 0.00001], {6, 5}]]; 
             If[StringTake[$CellContext`gr, 1] == "-", $CellContext`gr, 
               " " <> $CellContext`gr])& , $CellContext`grad, \
{$CellContext`depth}], $CellContext`depth - 2]; $CellContext`grad0str = 
          Map[($CellContext`gr = ToString[
               NumberForm[
                Round[#, 0.00001], {6, 5}]]; 
            If[StringTake[$CellContext`gr, 1] == "-", $CellContext`gr, 
              " " <> $CellContext`gr])& , $CellContext`gradu, {
            2}]; $CellContext`list = MapThread[StringJoin[
              
              Riffle[#, 
               "   "]] <> #2& , {$CellContext`gradstr, $CellContext`bvalstr}]; \
$CellContext`list0 = Map[StringJoin[
              Riffle[#, "   "]] <> "       " <> ToString[
              
              Round[$CellContext`bi$, 
               0.1]]& , $CellContext`grad0str]; $CellContext`nb = ToString[
            Round[
             Max[
              
              Flatten[$CellContext`bval]]]]; {$CellContext`list, \
$CellContext`list0, $CellContext`nb}], 
       SyntaxInformation[$CellContext`ConvertGrads] = {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}, $CellContext`FindOrder[
         Pattern[$CellContext`grad, 
          Blank[]], 
         Pattern[$CellContext`bval, 
          Blank[]], 
         OptionsPattern[]] := 
       Block[{$CellContext`local, $CellContext`minval, $CellContext`orderout, \
$CellContext`n, $CellContext`m, $CellContext`ord, $CellContext`val, \
$CellContext`temp, $CellContext`order, $CellContext`span}, $CellContext`temp = \
$CellContext`MakeAbsVec[$CellContext`grad, $CellContext`bval]; \
$CellContext`orderout = ($CellContext`order = Range[
             Length[$CellContext`temp]]); $CellContext`span = 
          OptionValue[$CellContext`OrderSpan]; $CellContext`local = Clip[
            If[$CellContext`span === "Auto", 7, $CellContext`span], {
            5, Infinity}]; $CellContext`minval = 
          Infinity; $CellContext`n = ($CellContext`m = 0); While[
           And[$CellContext`n < 50000, $CellContext`m < 150000], 
           Increment[$CellContext`m]; $CellContext`order = 
            RandomSample[$CellContext`order]; $CellContext`val = \
$CellContext`ValCalc[
              
              Part[$CellContext`temp, $CellContext`order], \
$CellContext`local]; 
           If[$CellContext`val < $CellContext`minval, $CellContext`n = 
              0; $CellContext`minval = $CellContext`val; \
$CellContext`orderout = $CellContext`order; Null, Increment[$CellContext`n]; 
             Null]]; $CellContext`orderout], 
       Options[$CellContext`FindOrder] = {$CellContext`OrderSpan -> "Auto"}, 
       SyntaxInformation[$CellContext`FindOrder] = {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           OptionsPattern[]}}, $CellContext`MakeAbsVec[
         Pattern[$CellContext`grad, 
          Blank[]], 
         Pattern[$CellContext`bval, 
          Blank[]]] := Partition[
         Flatten[
          Abs[$CellContext`grad Sqrt[$CellContext`bval]]], 
         3], $CellContext`ValCalc = CompiledFunction[{11, 13.2, 5468}, {{
           Blank[Real], 2}, 
          Blank[Integer]}, {{3, 2, 0}, {2, 0, 0}, {3, 0, 
         1}}, {{4, {2, 0, 2}}, {1, {2, 0, 1}}}, {0, 4, 2, 0, 
         5}, {{34, 1, 1, 0, 2, 3}, {34, 1, 1, 1, 2, 2}, {
          42, "Partition", 3, 2, 0, 2, 1, 3, 2, 1, 2, 3, 3, 4}, {
          42, "Transpose", 3, 3, 4, 3, 3, 3}, {
          42, "Total", 3, 3, 3, 2, 0, 2, 3, 2, 4}, {33, 3, 3}, {10, 3, 0}, {
          40, 60, 3, 0, 0, 3, 0, 1}, {41, 259, 3, 0, 1, 3, 2, 4, 3, 2, 2}, {
          42, "MaxRT", 3, 2, 2, 3, 0, 1}, {1}}, 
         Function[{$CellContext`vec, $CellContext`local}, 
          Max[
           Mean[
            Transpose[
             Partition[$CellContext`vec, $CellContext`local, 1]]]]], 
         Evaluate], {$CellContext`bvall$$ = {1000}, $CellContext`inter$$ = 
        True, $CellContext`int$$ = 10, $CellContext`MakeChart[
          Pattern[$CellContext`type, 
           Blank[]]] := 
        Module[{$CellContext`ranX, $CellContext`ranY, $CellContext`coors, \
$CellContext`lab}, $CellContext`ranX = 
           Range[-180, 180, 30]; $CellContext`ranY = 
           Range[-90, 90, 10]; $CellContext`coors = Part[{
              N[
               
               Table[{$CellContext`j Cos[$CellContext`i Degree], 90 
                 Sin[$CellContext`i 
                   Degree]}, {$CellContext`j, $CellContext`ranX}, \
{$CellContext`i, $CellContext`ranY}]], 
              N[
               
               Table[{$CellContext`j, $CellContext`i}, {$CellContext`j, \
$CellContext`ranX}, {$CellContext`i, $CellContext`ranY}]], 
              N[
               
               Table[{$CellContext`j, 90 
                 Sin[$CellContext`i 
                   Degree]}, {$CellContext`j, $CellContext`ranX}, \
{$CellContext`i, $CellContext`ranY}]]}, $CellContext`type]; $CellContext`lab = 
           Part[{{"\[Phi] Cos[\[Theta]] (\[Degree])", 
               "\[Theta] Sin[\[Theta]] (\[Degree])"}, {
              "\[Phi] \(\[Degree])", "\[Theta] (\[Degree])"}, {
              "\[Phi] (\[Degree])", 
               "\[Theta] Sin[\[Theta]] (\[Degree])"}}, $CellContext`type]; 
          Graphics[{{
              Lighter[
               Lighter[
                Lighter[Gray]]], 
              Polygon[
               Join[
                First[$CellContext`coors], 
                Reverse[
                 Last[$CellContext`coors]]]]}, 
             Map[{
               Lighter[Gray], 
               Line[#]}& , $CellContext`coors], 
             Map[{
               Lighter[Gray], 
               Line[#]}& , 
              Transpose[$CellContext`coors]]}, AspectRatio -> 0.8, ImageSize -> 
            400, PlotRange -> {{-185, 185}, {-95, 95}}, LabelStyle -> 
            Directive[{Bold, Black, Medium, FontFamily -> "Helvetica"}], 
            Frame -> True, FrameStyle -> Thick, Axes -> True, AxesStyle -> 
            Thick, FrameTicks -> {{
               Part[
                Thread[{
                  Round[
                   Part[$CellContext`coors, 1, All, 2]], $CellContext`ranY}], 
                Span[1, All, 3]], None}, {$CellContext`ranX, None}}, 
            FrameLabel -> $CellContext`lab]], $CellContext`charts$$ = 
        Map[$CellContext`MakeChart, {1, 2, 3}], $CellContext`SpherePlot[
          Pattern[$CellContext`size$, 
           Blank[]], 
          Pattern[$CellContext`op$, 
           Blank[]]] := If[
          Or[$CellContext`size$ == 0, $CellContext`size$ == 0.], 
          
          Graphics3D[{}, Lighting -> "Neutral", 
           PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}, {-1.1, 1.1}}, ViewPoint -> 
           Dynamic[$CellContext`vp$$], ViewVertical -> 
           Dynamic[$CellContext`vv$$], ViewAngle -> 
           Dynamic[$CellContext`va$$], SphericalRegion -> True], 
          Graphics3D[{White, 
            Opacity[$CellContext`op$], 
            Sphere[{0, 0, 0}, 0.95 $CellContext`size$]}, Lighting -> 
           "Neutral", PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}, {-1.1, 1.1}}, 
           ViewPoint -> Dynamic[$CellContext`vp$$], ViewVertical -> 
           Dynamic[$CellContext`vv$$], ViewAngle -> 
           Dynamic[$CellContext`va$$], SphericalRegion -> 
           True]], $CellContext`PlotChartPoints[
          Pattern[$CellContext`grad$, 
           Blank[]], {
           Pattern[$CellContext`mirr$, 
            Blank[]], 
           Pattern[$CellContext`col$, 
            Blank[]]}] := Block[{$CellContext`style}, $CellContext`style = If[
             ListQ[$CellContext`col$], 
             Map[Directive[#, 
               PointSize[Large]]& , $CellContext`col$], 
             Directive[$CellContext`col$, 
              PointSize[Large]]]; Show[
            If[$CellContext`grad$ === {}, 
             Graphics[], 
             Show[
              ListPlot[
               If[ArrayDepth[$CellContext`grad$] == 2, 
                $CellContext`CalcPolarPts[$CellContext`grad$, \
$CellContext`ctype$$, $CellContext`viewvec$$], 
                
                Map[$CellContext`CalcPolarPts[#, $CellContext`ctype$$, \
$CellContext`viewvec$$]& , $CellContext`grad$]], 
               PlotStyle -> $CellContext`style], 
              If[
               Not[$CellContext`mirr$], 
               Graphics[], 
               ListPlot[
                If[ArrayDepth[$CellContext`grad$] == 2, 
                 $CellContext`CalcPolarPts[-$CellContext`grad$, \
$CellContext`ctype$$, $CellContext`viewvec$$], 
                 $CellContext`CalcPolarPts[-
                  Flatten[$CellContext`grad$, 
                    1], $CellContext`ctype$$, $CellContext`viewvec$$]], 
                PlotStyle -> {
                  Darker[Gray], 
                  PointSize[Large]}]]]]]]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"aed4e419-8728-4588-8ad6-f167acec3d5a"]
}, {2}]]
},
WindowSize->{1904, 1101},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7d3403c4-4353-4eca-ac20-7ac0c4d08d4a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 244258, 5317, 19044, "Code",ExpressionUUID->"5a645248-50a7-4d7c-8842-c85a0bce676e",
 InitializationCell->False],
Cell[244840, 5341, 146264, 2726, 594, "Output",ExpressionUUID->"aed4e419-8728-4588-8ad6-f167acec3d5a"]
}, {2}]]
}
]
*)

